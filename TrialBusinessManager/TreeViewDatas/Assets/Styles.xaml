<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation" 
    xmlns:uriMapper="clr-namespace:System.Windows.Navigation;assembly=System.Windows.Controls.Navigation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>
	<!-- WorkList Styles-->
	<Style x:Key="FavoriteMenuStyle" TargetType="HyperlinkButton">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="HyperlinkButton">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Disabled"/>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="contentPresenter">
												<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="10"/>
											</DoubleAnimationUsingKeyFrames>
											<ColorAnimation Duration="0" To="#FF42A2D0" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="MenuItem" d:IsOptimized="True"/>
											<DoubleAnimation Duration="0" To="0.38" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="MenuItem" d:IsOptimized="True"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="MenuItem" d:IsOptimized="True"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
											<DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="MenuItem" BorderThickness="1" CornerRadius="4">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FF0F5E84" Offset="0"/>
										<GradientStop Color="#FF0F5E84" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FF075170" Offset="0.637"/>
										<GradientStop Color="#FF57B1D8"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
							</Border>
							<ContentPresenter x:Name="contentPresenter" Height="34" Margin="8,35,8,16" RenderTransformOrigin="0.5,0.5">
								<ContentPresenter.RenderTransform>
									<CompositeTransform/>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

    <!-- ******MAIN PAGE STYLES****** -->
    <!-- **************************** -->

    <Style x:Key="LayoutRootGridStyle" TargetType="Grid">
    </Style>

    <Style x:Key="NavigationGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="10,10,0,0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="BrandingBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="62,0,20,10"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="BrandingStackPanelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Orientation" Value="Vertical"/>
    </Style>

    <Style x:Key="LogoIcon" TargetType="ContentControl">
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="280"/>
        <Setter Property="Margin" Value="0,0,100,0"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Rectangle Fill="{StaticResource HighlightBrush}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ApplicationNameStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationNameBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ApplicationNameFontSize}"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Margin" Value="43,33,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource HeaderFontSize}"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,15,0,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="PageHyperlinkButtonStyle" TargetType="HyperlinkButton">
        <Setter Property="TargetName" Value="_new"/>
        <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
    </Style>

    <Style x:Key="LinksBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="82"/>
        <Setter Property="Margin" Value="0,156,25,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
        <Setter Property="BorderThickness" Value="30,0,0,0"/>
    </Style>

    <Style x:Key="LinksStackPanelStyle" TargetType="StackPanel">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="65,0,0,0"/>
    </Style>

    <Style x:Key="LinkStyle" TargetType="HyperlinkButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource NavigationBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NavigationForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource NavigationFontSize}"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="MinWidth" Value="78"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,4,18,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <Grid x:Name="ButtonGrid" Cursor="{TemplateBinding Cursor}">
                    	<Grid.Background>
                    		<ImageBrush Stretch="Fill"/>
                    	</Grid.Background>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.95"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimation Duration="0" To="3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ContentPresenter" d:IsOptimized="True"/>
                						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ContentPresenter" d:IsOptimized="True"/>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
                							<DiscreteObjectKeyFrame KeyTime="0">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<HorizontalAlignment>Center</HorizontalAlignment>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<VerticalAlignment>Center</VerticalAlignment>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<HorizontalAlignment>Center</HorizontalAlignment>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<VerticalAlignment>Center</VerticalAlignment>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="LinkStates">
                				<VisualState x:Name="ActiveLink">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="InactiveLink"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="FocusStates">
                				<VisualState x:Name="Unfocused"/>
                				<VisualState x:Name="Focused"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
						
                    	<Border x:Name="ContentBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Opacity="0.4" Padding="0">
                    		<Border.Background>
                    			<ImageBrush Stretch="Fill" ImageSource="Resources/menu.png"/>
                    		</Border.Background>
                    		<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" RenderTransformOrigin="0.5,0.5" OpacityMask="{x:Null}" >
                    			<ContentPresenter.RenderTransform>
                    				<CompositeTransform/>
                    			</ContentPresenter.RenderTransform>
                    		</ContentPresenter>
							
                    	</Border>
                    	<Border x:Name="InteractiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" BorderThickness="1,1,1,1" Opacity="0" CornerRadius="0">
                    		<Border.Background>
                    			<ImageBrush Stretch="Fill"/>
                    		</Border.Background>
                    	</Border>
                    	<Border x:Name="InteractiveElementBorder" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed">
                    		<Border.Background>
                    			<ImageBrush Stretch="Fill"/>
                    		</Border.Background>
                    		<TextBlock x:Name="InteractiveElement" Foreground="Black" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"/>
                    	</Border>
                    	<TextBlock x:Name="DisabledOverlay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Foreground="#FFAAAAAA" Visibility="Collapsed"/>
                    	<Rectangle Stroke="Black">
                    		<Rectangle.Fill>
                    			<ImageBrush Stretch="Fill" ImageSource="Resources/menu.png"/>
                    		</Rectangle.Fill>
                    	</Rectangle>
                        
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PageBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Opacity="0.25" ShadowDepth="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentFrameStyle" TargetType="navigation:Frame">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="45,195,0,0"/>
        <Setter Property="Padding" Value="58,15,58,15"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="DividerStyle" TargetType="Rectangle">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <!-- **STYLE UPDATES FOR NAV TEMPLATE** -->
    <!-- ********************************** -->
    <Style x:Key="NavContentBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="45,-42,0,0" />
        <Setter Property="Grid.Row" Value="2" />
    </Style>

    <Style x:Key="NavContentFrameStyle" TargetType="navigation:Frame" BasedOn="{StaticResource ContentFrameStyle}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="UriMapper">
            <Setter.Value>
                <uriMapper:UriMapper>
                    <uriMapper:UriMapping MappedUri="/Views/Home.xaml" Uri="" />
                    <uriMapper:UriMapping MappedUri="/Views/{pageName}.xaml" Uri="/{pageName}" />
                    <uriMapper:UriMapping MappedUri="/Views/{pageName}.xaml" Uri="{}{pageName}" />
                </uriMapper:UriMapper>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavBrandingBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="62,0,10,10"/>
    </Style>

    <Style x:Key="NavLinksBorderStyle" TargetType="Border" BasedOn="{StaticResource LinksBorderStyle}">
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Grid.Row" Value="1" />
    </Style>

    <!-- ******CONTENT PAGE STYLES****** -->
    <!-- ******************************* -->
    <Style x:Key="PageStyle" TargetType="navigation:Page"/>

    <Style x:Key="PageScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Setter Property="Margin" Value="-58,-15,-58,-15"/>
        <Setter Property="Padding" Value="58,0,58,0"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style x:Key="ContentPanelStyle" TargetType="StackPanel"/>

    <Style x:Key="ContentTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource BodyTextColorBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
    </Style>
    <Style x:Key="AnvilLabProgressBar" TargetType="ProgressBar">
    	<Setter Property="Foreground" Value="#FF027DB8"/>
    	<Setter Property="Background" Value="#FFD2D5D8"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Maximum" Value="100"/>
    	<Setter Property="IsTabStop" Value="False"/>
    	<Setter Property="BorderBrush">
    		<Setter.Value>
    			<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
    				<GradientStop Color="#FFAEB7BF" Offset="0"/>
    				<GradientStop Color="#FF919EA7" Offset="0.35"/>
    				<GradientStop Color="#FF7A8A99" Offset="0.35"/>
    				<GradientStop Color="#FF647480" Offset="1"/>
    			</LinearGradientBrush>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="ProgressBar">
    				<Grid x:Name="Root">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Determinate"/>
    							<VisualState x:Name="Indeterminate">
    								<Storyboard RepeatBehavior="Forever">
    									<DoubleAnimation Duration="00:00:.5" From="0" To="20" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" Storyboard.TargetName="IndeterminateGradientFill"/>
    									<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IndeterminateRoot">
    										<DiscreteObjectKeyFrame KeyTime="00:00:00">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DeterminateRoot">
    										<DiscreteObjectKeyFrame KeyTime="00:00:00">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ColorAnimation Duration="0" To="#001070AD" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="IndeterminateGradientFill" d:IsOptimized="True"/>
    									<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="IndeterminateGradientFill" d:IsOptimized="True"/>
    									<DoubleAnimation Duration="0" To="0.515" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="IndeterminateGradientFill" d:IsOptimized="True"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Border x:Name="ProgressBarTrack" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
    					<Grid x:Name="ProgressBarRootGrid">
    						<Rectangle x:Name="ProgressBarRootGradient" Margin="{TemplateBinding BorderThickness}" RadiusY="1.5" RadiusX="1.5" StrokeThickness="1" Canvas.ZIndex="1" Stroke="White">
    							<Rectangle.Fill>
    								<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
    									<GradientStop Color="#B276ABD4" Offset="0"/>
    									<GradientStop Color="#C676ABD4" Offset="0.15"/>
    									<GradientStop Color="#D176ABD4" Offset="0.275"/>
    									<GradientStop Color="#C676ABD4" Offset="0.4"/>
    									<GradientStop Color="#BF76ABD4" Offset="0.65"/>
    									<GradientStop Color="#A576ABD4" Offset="0.75"/>
    									<GradientStop Color="#9176ABD4" Offset="0.85"/>
    									<GradientStop Color="#7276ABD4" Offset="1"/>
    								</LinearGradientBrush>
    							</Rectangle.Fill>
    						</Rectangle>
    						<Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
    							<Rectangle x:Name="IndeterminateSolidFill" Fill="{TemplateBinding Foreground}" Margin="{TemplateBinding BorderThickness}" Opacity="1" RadiusY="2" RadiusX="2" RenderTransformOrigin="0.5,0.5" Stroke="#FF1564A7" StrokeThickness="0"/>
    							<Rectangle x:Name="IndeterminateGradientFill" Margin="{TemplateBinding BorderThickness}" RadiusY="2" RadiusX="2" StrokeThickness="1">
    								<Rectangle.Fill>
    									<LinearGradientBrush EndPoint="0,1" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1">
    										<LinearGradientBrush.Transform>
    											<TransformGroup>
    												<TranslateTransform X="0"/>
    												<SkewTransform AngleX="-30"/>
    											</TransformGroup>
    										</LinearGradientBrush.Transform>
    										<GradientStop Color="White" Offset="0"/>
    										<GradientStop Color="#00A4D1ED" Offset="0.62"/>
    										<GradientStop Color="#FFF9FDFF" Offset="1"/>
    										<GradientStop Color="#B1B2D2E6" Offset="0.698"/>
    									</LinearGradientBrush>
    								</Rectangle.Fill>
    							</Rectangle>
    						</Grid>
    						<Grid x:Name="DeterminateRoot" Margin="1">
    							<Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="{TemplateBinding BorderThickness}" RadiusY="1.5" RadiusX="1.5" StrokeThickness="0.5"/>
    						</Grid>
    					</Grid>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

</ResourceDictionary>