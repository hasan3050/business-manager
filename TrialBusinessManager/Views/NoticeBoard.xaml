<sdk:Page	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"	xmlns:System="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	x:Class="TrialBusinessManager.NoticeBoardView" 
	Title="NoticeBoard"
	d:DesignWidth="640" d:DesignHeight="480" Width="Auto" Height="Auto">
	
	<sdk:Page.Resources>
		<ControlTemplate x:Key="ValidationToolTipTemplate">
			<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
				<Grid.RenderTransform>
					<TranslateTransform x:Name="xform" X="-25"/>
				</Grid.RenderTransform>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="OpenStates">
						<VisualStateGroup.Transitions>
							<VisualTransition GeneratedDuration="0"/>
							<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
								<Storyboard>
									<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
										<DoubleAnimation.EasingFunction>
											<BackEase Amplitude=".3" EasingMode="EaseOut"/>
										</DoubleAnimation.EasingFunction>
									</DoubleAnimation>
									<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
								</Storyboard>
							</VisualTransition>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Closed">
							<Storyboard>
								<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Open">
							<Storyboard>
								<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
								<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
				<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
				<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
				<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
				<Border Background="#FFDC000C" CornerRadius="2"/>
				<Border CornerRadius="2">
					<TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
				</Border>
			</Grid>
		</ControlTemplate>
		
	</sdk:Page.Resources>
	
	<Grid x:Name="LayoutRoot" >
		<Viewbox Margin="0,1,0,0" Stretch="Fill">
			<Grid Height="479" Width="640">
                <Button x:Name="refreshButton" Content="" HorizontalAlignment="Right" Height="31" Margin="0,444,138,0" Width="34" Foreground="Black" d:LayoutOverrides="HorizontalAlignment" ToolTipService.ToolTip="Reload list..." Click="reloadButtonClicked" VerticalAlignment="Top">
					<Button.Resources>
						<Style x:Key="CustomImageButton" TargetType="Button">
							<Setter Property="Background" Value="#FF1F3B53"/>
							<Setter Property="Foreground" Value="#FF000000"/>
							<Setter Property="Padding" Value="3"/>
							<Setter Property="BorderThickness" Value="1"/>
							<Setter Property="BorderBrush">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFA3AEB9" Offset="0"/>
										<GradientStop Color="#FF8399A9" Offset="0.375"/>
										<GradientStop Color="#FF718597" Offset="0.375"/>
										<GradientStop Color="#FF617584" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="Button">
										<Grid>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Normal"/>
													<VisualState x:Name="MouseOver">
														<Storyboard>
															<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BackgroundAnimation">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<Thickness>1</Thickness>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
															<ColorAnimation Duration="0" To="#FF56C0E4" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundAnimation" d:IsOptimized="True"/>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="BackgroundAnimation">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<CornerRadius>2</CornerRadius>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Pressed">
														<Storyboard>
															<ColorAnimation Duration="0" To="#FF93D2E2" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
															<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Disabled">
														<Storyboard>
															<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
												<VisualStateGroup x:Name="FocusStates">
													<VisualState x:Name="Focused">
														<Storyboard>
															<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
															<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="FocusVisualElement" d:IsOptimized="True"/>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Unfocused"/>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="3">
												<Grid Background="{TemplateBinding Background}" Margin="1">
													<Border x:Name="BackgroundAnimation" Opacity="0" Background="{x:Null}" BorderBrush="Black"/>
												</Grid>
											</Border>
											<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
											<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
					<Button.Background>
						<ImageBrush Stretch="Fill" ImageSource="/TrialBusinessManager;component/Assets/Resources/refresh.png"/>
					</Button.Background>
					<Button.Style>
						<StaticResource ResourceKey="CustomImageButton"/>
					</Button.Style>
					<Button.BorderBrush>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFA3AEB9" Offset="0"/>
							<GradientStop Color="#FF8399A9" Offset="0.375"/>
							<GradientStop Color="#FF718597" Offset="0.375"/>
							<GradientStop Color="#FF617584" Offset="1"/>
						</LinearGradientBrush>
					</Button.BorderBrush>
				</Button>
				
				<ProgressBar x:Name="busyIndicator" Height="10" Margin="1,0,89,14" VerticalAlignment="Bottom" IsIndeterminate="True" Visibility="Collapsed"/>
                <Button x:Name="deleteButton" Content="" HorizontalAlignment="Right" Height="31" Margin="0,444,97,0" Width="34" Foreground="Black" ToolTipService.ToolTip="Delete..." VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment" Click="deleteButtonPressed" Background="{x:Null}">
                	<Button.Resources>
                		<Style x:Key="CustomImageButton" TargetType="Button">
                			<Setter Property="Background" Value="#FF1F3B53"/>
                			<Setter Property="Foreground" Value="#FF000000"/>
                			<Setter Property="Padding" Value="3"/>
                			<Setter Property="BorderThickness" Value="1"/>
                			<Setter Property="BorderBrush">
                				<Setter.Value>
                					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                						<GradientStop Color="#FFA3AEB9" Offset="0"/>
                						<GradientStop Color="#FF8399A9" Offset="0.375"/>
                						<GradientStop Color="#FF718597" Offset="0.375"/>
                						<GradientStop Color="#FF617584" Offset="1"/>
                					</LinearGradientBrush>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="Template">
                				<Setter.Value>
                					<ControlTemplate TargetType="Button">
                						<Grid>
                							<VisualStateManager.VisualStateGroups>
                								<VisualStateGroup x:Name="CommonStates">
                									<VisualState x:Name="Normal"/>
                									<VisualState x:Name="MouseOver">
                										<Storyboard>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BackgroundAnimation">
                												<DiscreteObjectKeyFrame KeyTime="0">
                													<DiscreteObjectKeyFrame.Value>
                														<Thickness>1</Thickness>
                													</DiscreteObjectKeyFrame.Value>
                												</DiscreteObjectKeyFrame>
                											</ObjectAnimationUsingKeyFrames>
                											<ColorAnimation Duration="0" To="#FF56C0E4" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundAnimation" d:IsOptimized="True"/>
                											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="BackgroundAnimation">
                												<DiscreteObjectKeyFrame KeyTime="0">
                													<DiscreteObjectKeyFrame.Value>
                														<CornerRadius>2</CornerRadius>
                													</DiscreteObjectKeyFrame.Value>
                												</DiscreteObjectKeyFrame>
                											</ObjectAnimationUsingKeyFrames>
                										</Storyboard>
                									</VisualState>
                									<VisualState x:Name="Pressed">
                										<Storyboard>
                											<ColorAnimation Duration="0" To="#FF93D2E2" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                										</Storyboard>
                									</VisualState>
                									<VisualState x:Name="Disabled">
                										<Storyboard>
                											<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                										</Storyboard>
                									</VisualState>
                								</VisualStateGroup>
                								<VisualStateGroup x:Name="FocusStates">
                									<VisualState x:Name="Focused">
                										<Storyboard>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="FocusVisualElement" d:IsOptimized="True"/>
                										</Storyboard>
                									</VisualState>
                									<VisualState x:Name="Unfocused"/>
                								</VisualStateGroup>
                							</VisualStateManager.VisualStateGroups>
                							<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="3">
                								<Grid Margin="1">
                									<Grid.Background>
                										<ImageBrush ImageSource="/TrialBusinessManager;component/Assets/Resources/delete.png" Stretch="Fill"/>
                									</Grid.Background>
                									<Border x:Name="BackgroundAnimation" Opacity="0" Background="{x:Null}" BorderBrush="Black"/>
                								</Grid>
                							</Border>
                							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                							<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                							<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                						</Grid>
                					</ControlTemplate>
                				</Setter.Value>
                			</Setter>
                		</Style>
                	</Button.Resources>
                	<Button.Style>
                		<StaticResource ResourceKey="CustomImageButton"/>
                	</Button.Style>
                	<Button.BorderBrush>
                		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                			<GradientStop Color="#FFA3AEB9" Offset="0"/>
                			<GradientStop Color="#FF8399A9" Offset="0.375"/>
                			<GradientStop Color="#FF718597" Offset="0.375"/>
                			<GradientStop Color="#FF617584" Offset="1"/>
                		</LinearGradientBrush>
                	</Button.BorderBrush>
                </Button>
                <Button x:Name="createButton" Content="" HorizontalAlignment="Left" Height="31" Margin="0,18,530,0" Width="110" Foreground="Black" ToolTipService.ToolTip="Create new notice..." VerticalAlignment="Top" Click="createButtonPressed" d:LayoutOverrides="VerticalAlignment" Background="{x:Null}">
                	<Button.Resources>
                		<Style x:Key="CustomImageButton" TargetType="Button">
                			<Setter Property="Background" Value="#FF1F3B53"/>
                			<Setter Property="Foreground" Value="#FF000000"/>
                			<Setter Property="Padding" Value="3"/>
                			<Setter Property="BorderThickness" Value="1"/>
                			<Setter Property="BorderBrush">
                				<Setter.Value>
                					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                						<GradientStop Color="#FFA3AEB9" Offset="0"/>
                						<GradientStop Color="#FF8399A9" Offset="0.375"/>
                						<GradientStop Color="#FF718597" Offset="0.375"/>
                						<GradientStop Color="#FF617584" Offset="1"/>
                					</LinearGradientBrush>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="Template">
                				<Setter.Value>
                					<ControlTemplate TargetType="Button">
                						<Grid>
                							<VisualStateManager.VisualStateGroups>
                								<VisualStateGroup x:Name="CommonStates">
                									<VisualState x:Name="Normal"/>
                									<VisualState x:Name="MouseOver">
                										<Storyboard>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BackgroundAnimation">
                												<DiscreteObjectKeyFrame KeyTime="0">
                													<DiscreteObjectKeyFrame.Value>
                														<Thickness>1</Thickness>
                													</DiscreteObjectKeyFrame.Value>
                												</DiscreteObjectKeyFrame>
                											</ObjectAnimationUsingKeyFrames>
                											<ColorAnimation Duration="0" To="#FF56C0E4" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BackgroundAnimation" d:IsOptimized="True"/>
                											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="BackgroundAnimation">
                												<DiscreteObjectKeyFrame KeyTime="0">
                													<DiscreteObjectKeyFrame.Value>
                														<CornerRadius>2</CornerRadius>
                													</DiscreteObjectKeyFrame.Value>
                												</DiscreteObjectKeyFrame>
                											</ObjectAnimationUsingKeyFrames>
                										</Storyboard>
                									</VisualState>
                									<VisualState x:Name="Pressed">
                										<Storyboard>
                											<ColorAnimation Duration="0" To="#FF93D2E2" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                										</Storyboard>
                									</VisualState>
                									<VisualState x:Name="Disabled">
                										<Storyboard>
                											<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                										</Storyboard>
                									</VisualState>
                								</VisualStateGroup>
                								<VisualStateGroup x:Name="FocusStates">
                									<VisualState x:Name="Focused">
                										<Storyboard>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="FocusVisualElement" d:IsOptimized="True"/>
                										</Storyboard>
                									</VisualState>
                									<VisualState x:Name="Unfocused"/>
                								</VisualStateGroup>
                							</VisualStateManager.VisualStateGroups>
                							<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="3">
                								<Grid Margin="0">
                									<Border x:Name="BackgroundAnimation" Opacity="0" Background="{x:Null}" BorderBrush="Black"/>
                								</Grid>
                							</Border>
                							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="4,3,7,3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="Create new" HorizontalAlignment="Right"/>
                							<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                							<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                							<Image HorizontalAlignment="Left" Margin="1,1,0,0" Width="35" VerticalAlignment="Top" Source="/TrialBusinessManager;component/Assets/Resources/indent.png"/>
                						</Grid>
                					</ControlTemplate>
                				</Setter.Value>
                			</Setter>
                		</Style>
                	</Button.Resources>
                	<Button.Style>
                		<StaticResource ResourceKey="CustomImageButton"/>
                	</Button.Style>
                	<Button.BorderBrush>
                		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                			<GradientStop Color="#FFA3AEB9" Offset="0"/>
                			<GradientStop Color="#FF8399A9" Offset="0.375"/>
                			<GradientStop Color="#FF718597" Offset="0.375"/>
                			<GradientStop Color="#FF617584" Offset="1"/>
                		</LinearGradientBrush>
                	</Button.BorderBrush>
                </Button>
                <sdk:DataGrid AutoGenerateColumns="False" Height="382" HorizontalAlignment="Left" Margin="0,58,0,0" Name="dataGrid1" VerticalAlignment="Top" Width="640" >
                    <sdk:DataGrid.Columns>
                        <sdk:DataGridTextColumn  Binding="{Binding Path=NoticeSubject}" Header="Subject" Width="1*" IsReadOnly="True" />
                        <sdk:DataGridTextColumn  Binding="{Binding Path=NoticeBody}" Header="Body" Width="8*" IsReadOnly="True" />
                     </sdk:DataGrid.Columns>
                </sdk:DataGrid>
                <Button Content="View" Height="31" HorizontalAlignment="Left" Margin="548,444,0,0" Name="button1" VerticalAlignment="Top" Width="84" Click="button1_Click" />
            </Grid>
		</Viewbox>
	</Grid>
</sdk:Page>