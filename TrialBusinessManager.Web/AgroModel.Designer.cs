//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_BillBillPaymentInfo", "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Bill), "BillPaymentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.BillPaymentInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_BillPaymentBillPaymentInfo", "BillPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.BillPayment), "BillPaymentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.BillPaymentInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductBillPaymentInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "BillPaymentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.BillPaymentInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_DealerBillPayment", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Dealer), "BillPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.BillPayment), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeBillPayment", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "BillPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.BillPayment), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_BillBillProductInfo", "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Bill), "BillProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.BillProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductBillProductInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "BillProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.BillProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_BillDueInfo", "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Bill), "DueInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.DueInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_BillSalesReturnInfoes", "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Bill), "SalesReturnInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesReturnInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_BillTransportationLoss", "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Bill), "TransportationLoss", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.TransportationLoss), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_DealerBill", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Dealer), "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Bill), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeBill", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Bill), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_IndentBill", "Indent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Indent), "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Bill), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeApproveCommission", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Commission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Commission), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeCreateCommission", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Commission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Commission), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductCommission", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "Commission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Commission), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_DealerDueInfo", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Dealer), "DueInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.DueInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_DealerPlacesIndent", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Dealer), "Indent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Indent), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_DealerRegion", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Region), "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Dealer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_DealerSalesReturn", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Dealer), "SalesReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesReturn), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeDealer", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Dealer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_YearSummaryDealerDealer", "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Dealer), "YearSummaryDealer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryDealer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductDueInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "DueInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.DueInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeApprovedPackage", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Package), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeApprovesProductEdits", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "ProductEdit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductEdit), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeCreatedPackage", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Package), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditure", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Expenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Expenditure), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditure1", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Expenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Expenditure), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditureInfo", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "ExpenditureInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ExpenditureInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeInventory", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Inventory), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeInventory1", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Inventory), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeMessageDelivery", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "MessageDelivery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MessageDelivery), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeMRR", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "MRR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MRR), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeNoticeBoard", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "NoticeBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.NoticeBoard), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeePLR", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "PLR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.PLR), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeePLR1", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "PLR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.PLR), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeProductEdit", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "ProductEdit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductEdit), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeRegion", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Region), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Employee), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeRequisition", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Requisition), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeRequisition1", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Requisition), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeSalesOfficerTarget", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "SalesOfficerTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesOfficerTarget), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeSalesReturn", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "SalesReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesReturn), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_EmployeeTransferIndents", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "TransferIndent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.TransferIndent), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_MessageDeliveryEmployee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "MessageDelivery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MessageDelivery), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PersonEmployee", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Person), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Employee), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductTransferEmployee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "ProductTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductTransfer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_RMVerifiesIndent", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "Indent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Indent), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_YearSummarySOExpenditureEmployee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Employee), "YearSummarySOExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummarySOExpenditure), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ExpenditureExpenditureInfo", "Expenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Expenditure), "ExpenditureInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ExpenditureInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_RegionExpenditure", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Region), "Expenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Expenditure), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_IndentProductInfoIndent", "Indent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Indent), "IndentProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.IndentProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_IndentProductInfoProduct", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "IndentProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.IndentProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryLog", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "InventoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.InventoryLog), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryPackageInfo", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "InventoryPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.InventoryPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryProductInfo", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "InventoryProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.InventoryProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryMRR", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "MRR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MRR), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryPLR", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "PLR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.PLR), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryRequisition", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Requisition), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventorySalesReturns", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "SalesReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesReturn), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryTransferIndents", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "TransferIndent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.TransferIndent), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryYearSummaryInventoryPackage", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "YearSummaryInventoryPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryInventoryPackage), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_InventoryYearSummaryInventoryProduct", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "YearSummaryInventoryProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryInventoryProduct), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductTransferSendInventory", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Inventory), "ProductTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductTransfer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_RegionInventory", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Region), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Inventory), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductInventoryLog", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "InventoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.InventoryLog), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PackageInventoryPackageInfo", "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Package), "InventoryPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.InventoryPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductInventoryProductInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "InventoryProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.InventoryProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductLedger", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "Ledger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Ledger), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_MessageDeliveryMessage", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Message), "MessageDelivery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MessageDelivery), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_MRRMRRPackageInfo", "MRR", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.MRR), "MRRPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MRRPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PackageMRRPackageInfo", "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Package), "MRRPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MRRPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_MRRMRRProductInfo", "MRR", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.MRR), "MRRProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MRRProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductMRRProductInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "MRRProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.MRRProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PackagePLRPackageInfo", "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Package), "PLRPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.PLRPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PackageRequisitionPackageInfo", "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Package), "RequisitionPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.RequisitionPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PackageYearSummaryInventoryPackage", "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Package), "YearSummaryInventoryPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryInventoryPackage), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PLRPLRPackageInfo", "PLR", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.PLR), "PLRPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.PLRPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_PLRPLRProductInfo", "PLR", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.PLR), "PLRProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.PLRProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductPLRProductInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "PLRProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.PLRProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductProductEdit", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "ProductEdit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductEdit), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductPromotion", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "Promotion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.Promotion), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductRegionTarget", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "RegionTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.RegionTarget), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductRequisitionProductInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "RequisitionProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.RequisitionProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductSalesReturnInfo", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "SalesReturnInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesReturnInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductTransferDetail_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "ProductTransferDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductTransferDetail), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductTransferIndentDetails", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "TransferIndentDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.TransferIndentDetail), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductTransportationLoss", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "TransportationLoss", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.TransportationLoss), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductYearSummaryDealer", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "YearSummaryDealer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryDealer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductYearSummaryInventoryProduct", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "YearSummaryInventoryProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryInventoryProduct), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SalesOfficerTargetProduct", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Product), "SalesOfficerTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesOfficerTarget), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_ProductTransferDetail_ProductTransfer", "ProductTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.ProductTransfer), "ProductTransferDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductTransferDetail), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_TransferIndent_ProductTransfer", "TransferIndent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.TransferIndent), "ProductTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.ProductTransfer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_RegionRegionTarget", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Region), "RegionTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.RegionTarget), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SeasonRegionTargets", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Season), "RegionTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.RegionTarget), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_RequisitionRequisitionPackageInfo", "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Requisition), "RequisitionPackageInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.RequisitionPackageInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_RequisitionRequisitionProductInfo", "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Requisition), "RequisitionProductInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.RequisitionProductInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SeasonSalesOfficerTargets", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Season), "SalesOfficerTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesOfficerTarget), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SalesReturnSalesReturnInfo", "SalesReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.SalesReturn), "SalesReturnInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.SalesReturnInfo), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryDealers", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Season), "YearSummaryDealer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryDealer), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryInventoryPackages", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Season), "YearSummaryInventoryPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryInventoryPackage), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryInventoryProducts", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Season), "YearSummaryInventoryProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummaryInventoryProduct), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummarySOExpenditures", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.Season), "YearSummarySOExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.YearSummarySOExpenditure), true)]
[assembly: EdmRelationshipAttribute("IspahaniAgroLTDModel", "FK_TransferIndentTransferIndentDetails", "TransferIndent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrialBusinessManager.Web.TransferIndent), "TransferIndentDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrialBusinessManager.Web.TransferIndentDetail), true)]

#endregion

namespace TrialBusinessManager.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IspahaniAgroLTDEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IspahaniAgroLTDEntities object using the connection string found in the 'IspahaniAgroLTDEntities' section of the application configuration file.
        /// </summary>
        public IspahaniAgroLTDEntities() : base("name=IspahaniAgroLTDEntities", "IspahaniAgroLTDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IspahaniAgroLTDEntities object.
        /// </summary>
        public IspahaniAgroLTDEntities(string connectionString) : base(connectionString, "IspahaniAgroLTDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IspahaniAgroLTDEntities object.
        /// </summary>
        public IspahaniAgroLTDEntities(EntityConnection connection) : base(connection, "IspahaniAgroLTDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillPaymentInfo> BillPaymentInfoes
        {
            get
            {
                if ((_BillPaymentInfoes == null))
                {
                    _BillPaymentInfoes = base.CreateObjectSet<BillPaymentInfo>("BillPaymentInfoes");
                }
                return _BillPaymentInfoes;
            }
        }
        private ObjectSet<BillPaymentInfo> _BillPaymentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillPayment> BillPayments
        {
            get
            {
                if ((_BillPayments == null))
                {
                    _BillPayments = base.CreateObjectSet<BillPayment>("BillPayments");
                }
                return _BillPayments;
            }
        }
        private ObjectSet<BillPayment> _BillPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillProductInfo> BillProductInfoes
        {
            get
            {
                if ((_BillProductInfoes == null))
                {
                    _BillProductInfoes = base.CreateObjectSet<BillProductInfo>("BillProductInfoes");
                }
                return _BillProductInfoes;
            }
        }
        private ObjectSet<BillProductInfo> _BillProductInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bill> Bills
        {
            get
            {
                if ((_Bills == null))
                {
                    _Bills = base.CreateObjectSet<Bill>("Bills");
                }
                return _Bills;
            }
        }
        private ObjectSet<Bill> _Bills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Commission> Commissions
        {
            get
            {
                if ((_Commissions == null))
                {
                    _Commissions = base.CreateObjectSet<Commission>("Commissions");
                }
                return _Commissions;
            }
        }
        private ObjectSet<Commission> _Commissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dealer> Dealers
        {
            get
            {
                if ((_Dealers == null))
                {
                    _Dealers = base.CreateObjectSet<Dealer>("Dealers");
                }
                return _Dealers;
            }
        }
        private ObjectSet<Dealer> _Dealers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DueInfo> DueInfoes
        {
            get
            {
                if ((_DueInfoes == null))
                {
                    _DueInfoes = base.CreateObjectSet<DueInfo>("DueInfoes");
                }
                return _DueInfoes;
            }
        }
        private ObjectSet<DueInfo> _DueInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenditureInfo> ExpenditureInfoes
        {
            get
            {
                if ((_ExpenditureInfoes == null))
                {
                    _ExpenditureInfoes = base.CreateObjectSet<ExpenditureInfo>("ExpenditureInfoes");
                }
                return _ExpenditureInfoes;
            }
        }
        private ObjectSet<ExpenditureInfo> _ExpenditureInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Expenditure> Expenditures
        {
            get
            {
                if ((_Expenditures == null))
                {
                    _Expenditures = base.CreateObjectSet<Expenditure>("Expenditures");
                }
                return _Expenditures;
            }
        }
        private ObjectSet<Expenditure> _Expenditures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IndentProductInfo> IndentProductInfoes
        {
            get
            {
                if ((_IndentProductInfoes == null))
                {
                    _IndentProductInfoes = base.CreateObjectSet<IndentProductInfo>("IndentProductInfoes");
                }
                return _IndentProductInfoes;
            }
        }
        private ObjectSet<IndentProductInfo> _IndentProductInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Indent> Indents
        {
            get
            {
                if ((_Indents == null))
                {
                    _Indents = base.CreateObjectSet<Indent>("Indents");
                }
                return _Indents;
            }
        }
        private ObjectSet<Indent> _Indents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryLog> InventoryLogs
        {
            get
            {
                if ((_InventoryLogs == null))
                {
                    _InventoryLogs = base.CreateObjectSet<InventoryLog>("InventoryLogs");
                }
                return _InventoryLogs;
            }
        }
        private ObjectSet<InventoryLog> _InventoryLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryPackageInfo> InventoryPackageInfoes
        {
            get
            {
                if ((_InventoryPackageInfoes == null))
                {
                    _InventoryPackageInfoes = base.CreateObjectSet<InventoryPackageInfo>("InventoryPackageInfoes");
                }
                return _InventoryPackageInfoes;
            }
        }
        private ObjectSet<InventoryPackageInfo> _InventoryPackageInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryProductInfo> InventoryProductInfoes
        {
            get
            {
                if ((_InventoryProductInfoes == null))
                {
                    _InventoryProductInfoes = base.CreateObjectSet<InventoryProductInfo>("InventoryProductInfoes");
                }
                return _InventoryProductInfoes;
            }
        }
        private ObjectSet<InventoryProductInfo> _InventoryProductInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ledger> Ledgers
        {
            get
            {
                if ((_Ledgers == null))
                {
                    _Ledgers = base.CreateObjectSet<Ledger>("Ledgers");
                }
                return _Ledgers;
            }
        }
        private ObjectSet<Ledger> _Ledgers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageDelivery> MessageDeliveries
        {
            get
            {
                if ((_MessageDeliveries == null))
                {
                    _MessageDeliveries = base.CreateObjectSet<MessageDelivery>("MessageDeliveries");
                }
                return _MessageDeliveries;
            }
        }
        private ObjectSet<MessageDelivery> _MessageDeliveries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MRRPackageInfo> MRRPackageInfoes
        {
            get
            {
                if ((_MRRPackageInfoes == null))
                {
                    _MRRPackageInfoes = base.CreateObjectSet<MRRPackageInfo>("MRRPackageInfoes");
                }
                return _MRRPackageInfoes;
            }
        }
        private ObjectSet<MRRPackageInfo> _MRRPackageInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MRRProductInfo> MRRProductInfoes
        {
            get
            {
                if ((_MRRProductInfoes == null))
                {
                    _MRRProductInfoes = base.CreateObjectSet<MRRProductInfo>("MRRProductInfoes");
                }
                return _MRRProductInfoes;
            }
        }
        private ObjectSet<MRRProductInfo> _MRRProductInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MRR> MRRs
        {
            get
            {
                if ((_MRRs == null))
                {
                    _MRRs = base.CreateObjectSet<MRR>("MRRs");
                }
                return _MRRs;
            }
        }
        private ObjectSet<MRR> _MRRs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NoticeBoard> NoticeBoards
        {
            get
            {
                if ((_NoticeBoards == null))
                {
                    _NoticeBoards = base.CreateObjectSet<NoticeBoard>("NoticeBoards");
                }
                return _NoticeBoards;
            }
        }
        private ObjectSet<NoticeBoard> _NoticeBoards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Package> Packages
        {
            get
            {
                if ((_Packages == null))
                {
                    _Packages = base.CreateObjectSet<Package>("Packages");
                }
                return _Packages;
            }
        }
        private ObjectSet<Package> _Packages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PLRPackageInfo> PLRPackageInfoes
        {
            get
            {
                if ((_PLRPackageInfoes == null))
                {
                    _PLRPackageInfoes = base.CreateObjectSet<PLRPackageInfo>("PLRPackageInfoes");
                }
                return _PLRPackageInfoes;
            }
        }
        private ObjectSet<PLRPackageInfo> _PLRPackageInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PLRProductInfo> PLRProductInfoes
        {
            get
            {
                if ((_PLRProductInfoes == null))
                {
                    _PLRProductInfoes = base.CreateObjectSet<PLRProductInfo>("PLRProductInfoes");
                }
                return _PLRProductInfoes;
            }
        }
        private ObjectSet<PLRProductInfo> _PLRProductInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PLR> PLRs
        {
            get
            {
                if ((_PLRs == null))
                {
                    _PLRs = base.CreateObjectSet<PLR>("PLRs");
                }
                return _PLRs;
            }
        }
        private ObjectSet<PLR> _PLRs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductEdit> ProductEdits
        {
            get
            {
                if ((_ProductEdits == null))
                {
                    _ProductEdits = base.CreateObjectSet<ProductEdit>("ProductEdits");
                }
                return _ProductEdits;
            }
        }
        private ObjectSet<ProductEdit> _ProductEdits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductTransferDetail> ProductTransferDetails
        {
            get
            {
                if ((_ProductTransferDetails == null))
                {
                    _ProductTransferDetails = base.CreateObjectSet<ProductTransferDetail>("ProductTransferDetails");
                }
                return _ProductTransferDetails;
            }
        }
        private ObjectSet<ProductTransferDetail> _ProductTransferDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductTransfer> ProductTransfers
        {
            get
            {
                if ((_ProductTransfers == null))
                {
                    _ProductTransfers = base.CreateObjectSet<ProductTransfer>("ProductTransfers");
                }
                return _ProductTransfers;
            }
        }
        private ObjectSet<ProductTransfer> _ProductTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Promotion> Promotions
        {
            get
            {
                if ((_Promotions == null))
                {
                    _Promotions = base.CreateObjectSet<Promotion>("Promotions");
                }
                return _Promotions;
            }
        }
        private ObjectSet<Promotion> _Promotions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionTarget> RegionTargets
        {
            get
            {
                if ((_RegionTargets == null))
                {
                    _RegionTargets = base.CreateObjectSet<RegionTarget>("RegionTargets");
                }
                return _RegionTargets;
            }
        }
        private ObjectSet<RegionTarget> _RegionTargets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequisitionPackageInfo> RequisitionPackageInfoes
        {
            get
            {
                if ((_RequisitionPackageInfoes == null))
                {
                    _RequisitionPackageInfoes = base.CreateObjectSet<RequisitionPackageInfo>("RequisitionPackageInfoes");
                }
                return _RequisitionPackageInfoes;
            }
        }
        private ObjectSet<RequisitionPackageInfo> _RequisitionPackageInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequisitionProductInfo> RequisitionProductInfoes
        {
            get
            {
                if ((_RequisitionProductInfoes == null))
                {
                    _RequisitionProductInfoes = base.CreateObjectSet<RequisitionProductInfo>("RequisitionProductInfoes");
                }
                return _RequisitionProductInfoes;
            }
        }
        private ObjectSet<RequisitionProductInfo> _RequisitionProductInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Requisition> Requisitions
        {
            get
            {
                if ((_Requisitions == null))
                {
                    _Requisitions = base.CreateObjectSet<Requisition>("Requisitions");
                }
                return _Requisitions;
            }
        }
        private ObjectSet<Requisition> _Requisitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOfficerTarget> SalesOfficerTargets
        {
            get
            {
                if ((_SalesOfficerTargets == null))
                {
                    _SalesOfficerTargets = base.CreateObjectSet<SalesOfficerTarget>("SalesOfficerTargets");
                }
                return _SalesOfficerTargets;
            }
        }
        private ObjectSet<SalesOfficerTarget> _SalesOfficerTargets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesReturnInfo> SalesReturnInfoes
        {
            get
            {
                if ((_SalesReturnInfoes == null))
                {
                    _SalesReturnInfoes = base.CreateObjectSet<SalesReturnInfo>("SalesReturnInfoes");
                }
                return _SalesReturnInfoes;
            }
        }
        private ObjectSet<SalesReturnInfo> _SalesReturnInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesReturn> SalesReturns
        {
            get
            {
                if ((_SalesReturns == null))
                {
                    _SalesReturns = base.CreateObjectSet<SalesReturn>("SalesReturns");
                }
                return _SalesReturns;
            }
        }
        private ObjectSet<SalesReturn> _SalesReturns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Season> Seasons
        {
            get
            {
                if ((_Seasons == null))
                {
                    _Seasons = base.CreateObjectSet<Season>("Seasons");
                }
                return _Seasons;
            }
        }
        private ObjectSet<Season> _Seasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransferIndentDetail> TransferIndentDetails
        {
            get
            {
                if ((_TransferIndentDetails == null))
                {
                    _TransferIndentDetails = base.CreateObjectSet<TransferIndentDetail>("TransferIndentDetails");
                }
                return _TransferIndentDetails;
            }
        }
        private ObjectSet<TransferIndentDetail> _TransferIndentDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransferIndent> TransferIndents
        {
            get
            {
                if ((_TransferIndents == null))
                {
                    _TransferIndents = base.CreateObjectSet<TransferIndent>("TransferIndents");
                }
                return _TransferIndents;
            }
        }
        private ObjectSet<TransferIndent> _TransferIndents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransportationLoss> TransportationLosses
        {
            get
            {
                if ((_TransportationLosses == null))
                {
                    _TransportationLosses = base.CreateObjectSet<TransportationLoss>("TransportationLosses");
                }
                return _TransportationLosses;
            }
        }
        private ObjectSet<TransportationLoss> _TransportationLosses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<YearSummaryDealer> YearSummaryDealers
        {
            get
            {
                if ((_YearSummaryDealers == null))
                {
                    _YearSummaryDealers = base.CreateObjectSet<YearSummaryDealer>("YearSummaryDealers");
                }
                return _YearSummaryDealers;
            }
        }
        private ObjectSet<YearSummaryDealer> _YearSummaryDealers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<YearSummaryInventoryPackage> YearSummaryInventoryPackages
        {
            get
            {
                if ((_YearSummaryInventoryPackages == null))
                {
                    _YearSummaryInventoryPackages = base.CreateObjectSet<YearSummaryInventoryPackage>("YearSummaryInventoryPackages");
                }
                return _YearSummaryInventoryPackages;
            }
        }
        private ObjectSet<YearSummaryInventoryPackage> _YearSummaryInventoryPackages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<YearSummaryInventoryProduct> YearSummaryInventoryProducts
        {
            get
            {
                if ((_YearSummaryInventoryProducts == null))
                {
                    _YearSummaryInventoryProducts = base.CreateObjectSet<YearSummaryInventoryProduct>("YearSummaryInventoryProducts");
                }
                return _YearSummaryInventoryProducts;
            }
        }
        private ObjectSet<YearSummaryInventoryProduct> _YearSummaryInventoryProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<YearSummarySOExpenditure> YearSummarySOExpenditures
        {
            get
            {
                if ((_YearSummarySOExpenditures == null))
                {
                    _YearSummarySOExpenditures = base.CreateObjectSet<YearSummarySOExpenditure>("YearSummarySOExpenditures");
                }
                return _YearSummarySOExpenditures;
            }
        }
        private ObjectSet<YearSummarySOExpenditure> _YearSummarySOExpenditures;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillPaymentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillPaymentInfoes(BillPaymentInfo billPaymentInfo)
        {
            base.AddObject("BillPaymentInfoes", billPaymentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillPayments(BillPayment billPayment)
        {
            base.AddObject("BillPayments", billPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillProductInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillProductInfoes(BillProductInfo billProductInfo)
        {
            base.AddObject("BillProductInfoes", billProductInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBills(Bill bill)
        {
            base.AddObject("Bills", bill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Commissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommissions(Commission commission)
        {
            base.AddObject("Commissions", commission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dealers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealers(Dealer dealer)
        {
            base.AddObject("Dealers", dealer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DueInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDueInfoes(DueInfo dueInfo)
        {
            base.AddObject("DueInfoes", dueInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenditureInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenditureInfoes(ExpenditureInfo expenditureInfo)
        {
            base.AddObject("ExpenditureInfoes", expenditureInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Expenditures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenditures(Expenditure expenditure)
        {
            base.AddObject("Expenditures", expenditure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IndentProductInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndentProductInfoes(IndentProductInfo indentProductInfo)
        {
            base.AddObject("IndentProductInfoes", indentProductInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Indents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndents(Indent indent)
        {
            base.AddObject("Indents", indent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryLogs(InventoryLog inventoryLog)
        {
            base.AddObject("InventoryLogs", inventoryLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryPackageInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryPackageInfoes(InventoryPackageInfo inventoryPackageInfo)
        {
            base.AddObject("InventoryPackageInfoes", inventoryPackageInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryProductInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryProductInfoes(InventoryProductInfo inventoryProductInfo)
        {
            base.AddObject("InventoryProductInfoes", inventoryProductInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ledgers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLedgers(Ledger ledger)
        {
            base.AddObject("Ledgers", ledger);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageDeliveries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageDeliveries(MessageDelivery messageDelivery)
        {
            base.AddObject("MessageDeliveries", messageDelivery);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MRRPackageInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMRRPackageInfoes(MRRPackageInfo mRRPackageInfo)
        {
            base.AddObject("MRRPackageInfoes", mRRPackageInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MRRProductInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMRRProductInfoes(MRRProductInfo mRRProductInfo)
        {
            base.AddObject("MRRProductInfoes", mRRProductInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MRRs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMRRs(MRR mRR)
        {
            base.AddObject("MRRs", mRR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NoticeBoards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNoticeBoards(NoticeBoard noticeBoard)
        {
            base.AddObject("NoticeBoards", noticeBoard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Packages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackages(Package package)
        {
            base.AddObject("Packages", package);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PLRPackageInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPLRPackageInfoes(PLRPackageInfo pLRPackageInfo)
        {
            base.AddObject("PLRPackageInfoes", pLRPackageInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PLRProductInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPLRProductInfoes(PLRProductInfo pLRProductInfo)
        {
            base.AddObject("PLRProductInfoes", pLRProductInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PLRs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPLRs(PLR pLR)
        {
            base.AddObject("PLRs", pLR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductEdits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductEdits(ProductEdit productEdit)
        {
            base.AddObject("ProductEdits", productEdit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTransferDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTransferDetails(ProductTransferDetail productTransferDetail)
        {
            base.AddObject("ProductTransferDetails", productTransferDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTransfers(ProductTransfer productTransfer)
        {
            base.AddObject("ProductTransfers", productTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Promotions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromotions(Promotion promotion)
        {
            base.AddObject("Promotions", promotion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionTargets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionTargets(RegionTarget regionTarget)
        {
            base.AddObject("RegionTargets", regionTarget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequisitionPackageInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequisitionPackageInfoes(RequisitionPackageInfo requisitionPackageInfo)
        {
            base.AddObject("RequisitionPackageInfoes", requisitionPackageInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequisitionProductInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequisitionProductInfoes(RequisitionProductInfo requisitionProductInfo)
        {
            base.AddObject("RequisitionProductInfoes", requisitionProductInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requisitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequisitions(Requisition requisition)
        {
            base.AddObject("Requisitions", requisition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOfficerTargets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesOfficerTargets(SalesOfficerTarget salesOfficerTarget)
        {
            base.AddObject("SalesOfficerTargets", salesOfficerTarget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesReturnInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesReturnInfoes(SalesReturnInfo salesReturnInfo)
        {
            base.AddObject("SalesReturnInfoes", salesReturnInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesReturns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesReturns(SalesReturn salesReturn)
        {
            base.AddObject("SalesReturns", salesReturn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeasons(Season season)
        {
            base.AddObject("Seasons", season);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransferIndentDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransferIndentDetails(TransferIndentDetail transferIndentDetail)
        {
            base.AddObject("TransferIndentDetails", transferIndentDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransferIndents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransferIndents(TransferIndent transferIndent)
        {
            base.AddObject("TransferIndents", transferIndent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransportationLosses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransportationLosses(TransportationLoss transportationLoss)
        {
            base.AddObject("TransportationLosses", transportationLoss);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the YearSummaryDealers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYearSummaryDealers(YearSummaryDealer yearSummaryDealer)
        {
            base.AddObject("YearSummaryDealers", yearSummaryDealer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the YearSummaryInventoryPackages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYearSummaryInventoryPackages(YearSummaryInventoryPackage yearSummaryInventoryPackage)
        {
            base.AddObject("YearSummaryInventoryPackages", yearSummaryInventoryPackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the YearSummaryInventoryProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYearSummaryInventoryProducts(YearSummaryInventoryProduct yearSummaryInventoryProduct)
        {
            base.AddObject("YearSummaryInventoryProducts", yearSummaryInventoryProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the YearSummarySOExpenditures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYearSummarySOExpenditures(YearSummarySOExpenditure yearSummarySOExpenditure)
        {
            base.AddObject("YearSummarySOExpenditures", yearSummarySOExpenditure);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Bill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bill object.
        /// </summary>
        /// <param name="billId">Initial value of the BillId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="indentId">Initial value of the IndentId property.</param>
        /// <param name="transportType">Initial value of the TransportType property.</param>
        /// <param name="transportCost">Initial value of the TransportCost property.</param>
        /// <param name="vehicleNo">Initial value of the VehicleNo property.</param>
        /// <param name="emergencyContactNo">Initial value of the EmergencyContactNo property.</param>
        /// <param name="totalProductCost">Initial value of the TotalProductCost property.</param>
        /// <param name="totalPaid">Initial value of the TotalPaid property.</param>
        /// <param name="paymentDeadline">Initial value of the PaymentDeadline property.</param>
        /// <param name="billStatus">Initial value of the BillStatus property.</param>
        /// <param name="hasProductLoss">Initial value of the HasProductLoss property.</param>
        /// <param name="productLossCost">Initial value of the ProductLossCost property.</param>
        /// <param name="dispatchedById">Initial value of the DispatchedById property.</param>
        /// <param name="hasSalesReturn">Initial value of the HasSalesReturn property.</param>
        /// <param name="salesReturnCost">Initial value of the SalesReturnCost property.</param>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        public static Bill CreateBill(global::System.Int64 billId, global::System.DateTime dateOfIssue, global::System.Int64 indentId, global::System.String transportType, global::System.Double transportCost, global::System.String vehicleNo, global::System.String emergencyContactNo, global::System.Double totalProductCost, global::System.Double totalPaid, global::System.DateTime paymentDeadline, global::System.String billStatus, global::System.Boolean hasProductLoss, global::System.Double productLossCost, global::System.Int64 dispatchedById, global::System.Boolean hasSalesReturn, global::System.Double salesReturnCost, global::System.Int64 dealerId)
        {
            Bill bill = new Bill();
            bill.BillId = billId;
            bill.DateOfIssue = dateOfIssue;
            bill.IndentId = indentId;
            bill.TransportType = transportType;
            bill.TransportCost = transportCost;
            bill.VehicleNo = vehicleNo;
            bill.EmergencyContactNo = emergencyContactNo;
            bill.TotalProductCost = totalProductCost;
            bill.TotalPaid = totalPaid;
            bill.PaymentDeadline = paymentDeadline;
            bill.BillStatus = billStatus;
            bill.HasProductLoss = hasProductLoss;
            bill.ProductLossCost = productLossCost;
            bill.DispatchedById = dispatchedById;
            bill.HasSalesReturn = hasSalesReturn;
            bill.SalesReturnCost = salesReturnCost;
            bill.DealerId = dealerId;
            return bill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillId
        {
            get
            {
                return _BillId;
            }
            set
            {
                if (_BillId != value)
                {
                    OnBillIdChanging(value);
                    ReportPropertyChanging("BillId");
                    _BillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillId");
                    OnBillIdChanged();
                }
            }
        }
        private global::System.Int64 _BillId;
        partial void OnBillIdChanging(global::System.Int64 value);
        partial void OnBillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IndentId
        {
            get
            {
                return _IndentId;
            }
            set
            {
                OnIndentIdChanging(value);
                ReportPropertyChanging("IndentId");
                _IndentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndentId");
                OnIndentIdChanged();
            }
        }
        private global::System.Int64 _IndentId;
        partial void OnIndentIdChanging(global::System.Int64 value);
        partial void OnIndentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransportType
        {
            get
            {
                return _TransportType;
            }
            set
            {
                OnTransportTypeChanging(value);
                ReportPropertyChanging("TransportType");
                _TransportType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransportType");
                OnTransportTypeChanged();
            }
        }
        private global::System.String _TransportType;
        partial void OnTransportTypeChanging(global::System.String value);
        partial void OnTransportTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransportCost
        {
            get
            {
                return _TransportCost;
            }
            set
            {
                OnTransportCostChanging(value);
                ReportPropertyChanging("TransportCost");
                _TransportCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransportCost");
                OnTransportCostChanged();
            }
        }
        private global::System.Double _TransportCost;
        partial void OnTransportCostChanging(global::System.Double value);
        partial void OnTransportCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VehicleNo
        {
            get
            {
                return _VehicleNo;
            }
            set
            {
                OnVehicleNoChanging(value);
                ReportPropertyChanging("VehicleNo");
                _VehicleNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VehicleNo");
                OnVehicleNoChanged();
            }
        }
        private global::System.String _VehicleNo;
        partial void OnVehicleNoChanging(global::System.String value);
        partial void OnVehicleNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactNo
        {
            get
            {
                return _EmergencyContactNo;
            }
            set
            {
                OnEmergencyContactNoChanging(value);
                ReportPropertyChanging("EmergencyContactNo");
                _EmergencyContactNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmergencyContactNo");
                OnEmergencyContactNoChanged();
            }
        }
        private global::System.String _EmergencyContactNo;
        partial void OnEmergencyContactNoChanging(global::System.String value);
        partial void OnEmergencyContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalProductCost
        {
            get
            {
                return _TotalProductCost;
            }
            set
            {
                OnTotalProductCostChanging(value);
                ReportPropertyChanging("TotalProductCost");
                _TotalProductCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalProductCost");
                OnTotalProductCostChanged();
            }
        }
        private global::System.Double _TotalProductCost;
        partial void OnTotalProductCostChanging(global::System.Double value);
        partial void OnTotalProductCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalPaid
        {
            get
            {
                return _TotalPaid;
            }
            set
            {
                OnTotalPaidChanging(value);
                ReportPropertyChanging("TotalPaid");
                _TotalPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPaid");
                OnTotalPaidChanged();
            }
        }
        private global::System.Double _TotalPaid;
        partial void OnTotalPaidChanging(global::System.Double value);
        partial void OnTotalPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDeadline
        {
            get
            {
                return _PaymentDeadline;
            }
            set
            {
                OnPaymentDeadlineChanging(value);
                ReportPropertyChanging("PaymentDeadline");
                _PaymentDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDeadline");
                OnPaymentDeadlineChanged();
            }
        }
        private global::System.DateTime _PaymentDeadline;
        partial void OnPaymentDeadlineChanging(global::System.DateTime value);
        partial void OnPaymentDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillStatus
        {
            get
            {
                return _BillStatus;
            }
            set
            {
                OnBillStatusChanging(value);
                ReportPropertyChanging("BillStatus");
                _BillStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillStatus");
                OnBillStatusChanged();
            }
        }
        private global::System.String _BillStatus;
        partial void OnBillStatusChanging(global::System.String value);
        partial void OnBillStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasProductLoss
        {
            get
            {
                return _HasProductLoss;
            }
            set
            {
                OnHasProductLossChanging(value);
                ReportPropertyChanging("HasProductLoss");
                _HasProductLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasProductLoss");
                OnHasProductLossChanged();
            }
        }
        private global::System.Boolean _HasProductLoss;
        partial void OnHasProductLossChanging(global::System.Boolean value);
        partial void OnHasProductLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductLossCost
        {
            get
            {
                return _ProductLossCost;
            }
            set
            {
                OnProductLossCostChanging(value);
                ReportPropertyChanging("ProductLossCost");
                _ProductLossCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductLossCost");
                OnProductLossCostChanged();
            }
        }
        private global::System.Double _ProductLossCost;
        partial void OnProductLossCostChanging(global::System.Double value);
        partial void OnProductLossCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DispatchedById
        {
            get
            {
                return _DispatchedById;
            }
            set
            {
                OnDispatchedByIdChanging(value);
                ReportPropertyChanging("DispatchedById");
                _DispatchedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DispatchedById");
                OnDispatchedByIdChanged();
            }
        }
        private global::System.Int64 _DispatchedById;
        partial void OnDispatchedByIdChanging(global::System.Int64 value);
        partial void OnDispatchedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillCode
        {
            get
            {
                return _BillCode;
            }
            set
            {
                OnBillCodeChanging(value);
                ReportPropertyChanging("BillCode");
                _BillCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillCode");
                OnBillCodeChanged();
            }
        }
        private global::System.String _BillCode;
        partial void OnBillCodeChanging(global::System.String value);
        partial void OnBillCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasSalesReturn
        {
            get
            {
                return _HasSalesReturn;
            }
            set
            {
                OnHasSalesReturnChanging(value);
                ReportPropertyChanging("HasSalesReturn");
                _HasSalesReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasSalesReturn");
                OnHasSalesReturnChanged();
            }
        }
        private global::System.Boolean _HasSalesReturn;
        partial void OnHasSalesReturnChanging(global::System.Boolean value);
        partial void OnHasSalesReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SalesReturnCost
        {
            get
            {
                return _SalesReturnCost;
            }
            set
            {
                OnSalesReturnCostChanging(value);
                ReportPropertyChanging("SalesReturnCost");
                _SalesReturnCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesReturnCost");
                OnSalesReturnCostChanged();
            }
        }
        private global::System.Double _SalesReturnCost;
        partial void OnSalesReturnCostChanging(global::System.Double value);
        partial void OnSalesReturnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int64 _DealerId;
        partial void OnDealerIdChanging(global::System.Int64 value);
        partial void OnDealerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillBillPaymentInfo", "BillPaymentInfo")]
        public EntityCollection<BillPaymentInfo> BillPaymentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillPaymentInfo>("IspahaniAgroLTDModel.FK_BillBillPaymentInfo", "BillPaymentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillPaymentInfo>("IspahaniAgroLTDModel.FK_BillBillPaymentInfo", "BillPaymentInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillBillProductInfo", "BillProductInfo")]
        public EntityCollection<BillProductInfo> BillProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillProductInfo>("IspahaniAgroLTDModel.FK_BillBillProductInfo", "BillProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillProductInfo>("IspahaniAgroLTDModel.FK_BillBillProductInfo", "BillProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillDueInfo", "DueInfo")]
        public EntityCollection<DueInfo> DueInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DueInfo>("IspahaniAgroLTDModel.FK_BillDueInfo", "DueInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DueInfo>("IspahaniAgroLTDModel.FK_BillDueInfo", "DueInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillSalesReturnInfoes", "SalesReturnInfo")]
        public EntityCollection<SalesReturnInfo> SalesReturnInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesReturnInfo>("IspahaniAgroLTDModel.FK_BillSalesReturnInfoes", "SalesReturnInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesReturnInfo>("IspahaniAgroLTDModel.FK_BillSalesReturnInfoes", "SalesReturnInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillTransportationLoss", "TransportationLoss")]
        public EntityCollection<TransportationLoss> TransportationLosses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransportationLoss>("IspahaniAgroLTDModel.FK_BillTransportationLoss", "TransportationLoss");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransportationLoss>("IspahaniAgroLTDModel.FK_BillTransportationLoss", "TransportationLoss", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerBill", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBill", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBill", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBill", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBill", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeBill", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBill", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBill", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBill", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBill", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_IndentBill", "Indent")]
        public Indent Indent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentBill", "Indent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentBill", "Indent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Indent> IndentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentBill", "Indent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentBill", "Indent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="BillPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillPayment object.
        /// </summary>
        /// <param name="billPaymentId">Initial value of the BillPaymentId property.</param>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="rMId">Initial value of the RMId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="accountantId">Initial value of the AccountantId property.</param>
        /// <param name="accountantFinalizeDate">Initial value of the AccountantFinalizeDate property.</param>
        public static BillPayment CreateBillPayment(global::System.Int64 billPaymentId, global::System.Int64 dealerId, global::System.Int64 rMId, global::System.DateTime dateOfIssue, global::System.Double totalAmount, global::System.String paymentMethod, global::System.String status, global::System.Int64 accountantId, global::System.DateTime accountantFinalizeDate)
        {
            BillPayment billPayment = new BillPayment();
            billPayment.BillPaymentId = billPaymentId;
            billPayment.DealerId = dealerId;
            billPayment.RMId = rMId;
            billPayment.DateOfIssue = dateOfIssue;
            billPayment.TotalAmount = totalAmount;
            billPayment.PaymentMethod = paymentMethod;
            billPayment.Status = status;
            billPayment.AccountantId = accountantId;
            billPayment.AccountantFinalizeDate = accountantFinalizeDate;
            return billPayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillPaymentId
        {
            get
            {
                return _BillPaymentId;
            }
            set
            {
                if (_BillPaymentId != value)
                {
                    OnBillPaymentIdChanging(value);
                    ReportPropertyChanging("BillPaymentId");
                    _BillPaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillPaymentId");
                    OnBillPaymentIdChanged();
                }
            }
        }
        private global::System.Int64 _BillPaymentId;
        partial void OnBillPaymentIdChanging(global::System.Int64 value);
        partial void OnBillPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int64 _DealerId;
        partial void OnDealerIdChanging(global::System.Int64 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RMId
        {
            get
            {
                return _RMId;
            }
            set
            {
                OnRMIdChanging(value);
                ReportPropertyChanging("RMId");
                _RMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RMId");
                OnRMIdChanged();
            }
        }
        private global::System.Int64 _RMId;
        partial void OnRMIdChanging(global::System.Int64 value);
        partial void OnRMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BranchName
        {
            get
            {
                return _BranchName;
            }
            set
            {
                OnBranchNameChanging(value);
                ReportPropertyChanging("BranchName");
                _BranchName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BranchName");
                OnBranchNameChanged();
            }
        }
        private global::System.String _BranchName;
        partial void OnBranchNameChanging(global::System.String value);
        partial void OnBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DDNumber
        {
            get
            {
                return _DDNumber;
            }
            set
            {
                OnDDNumberChanging(value);
                ReportPropertyChanging("DDNumber");
                _DDNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DDNumber");
                OnDDNumberChanged();
            }
        }
        private global::System.String _DDNumber;
        partial void OnDDNumberChanging(global::System.String value);
        partial void OnDDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountantId
        {
            get
            {
                return _AccountantId;
            }
            set
            {
                OnAccountantIdChanging(value);
                ReportPropertyChanging("AccountantId");
                _AccountantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountantId");
                OnAccountantIdChanged();
            }
        }
        private global::System.Int64 _AccountantId;
        partial void OnAccountantIdChanging(global::System.Int64 value);
        partial void OnAccountantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AccountantFinalizeDate
        {
            get
            {
                return _AccountantFinalizeDate;
            }
            set
            {
                OnAccountantFinalizeDateChanging(value);
                ReportPropertyChanging("AccountantFinalizeDate");
                _AccountantFinalizeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountantFinalizeDate");
                OnAccountantFinalizeDateChanged();
            }
        }
        private global::System.DateTime _AccountantFinalizeDate;
        partial void OnAccountantFinalizeDateChanging(global::System.DateTime value);
        partial void OnAccountantFinalizeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillPaymentCode
        {
            get
            {
                return _BillPaymentCode;
            }
            set
            {
                OnBillPaymentCodeChanging(value);
                ReportPropertyChanging("BillPaymentCode");
                _BillPaymentCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillPaymentCode");
                OnBillPaymentCodeChanged();
            }
        }
        private global::System.String _BillPaymentCode;
        partial void OnBillPaymentCodeChanging(global::System.String value);
        partial void OnBillPaymentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MoneyReciept
        {
            get
            {
                return _MoneyReciept;
            }
            set
            {
                OnMoneyRecieptChanging(value);
                ReportPropertyChanging("MoneyReciept");
                _MoneyReciept = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MoneyReciept");
                OnMoneyRecieptChanged();
            }
        }
        private global::System.String _MoneyReciept;
        partial void OnMoneyRecieptChanging(global::System.String value);
        partial void OnMoneyRecieptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfDeposit
        {
            get
            {
                return _DateOfDeposit;
            }
            set
            {
                OnDateOfDepositChanging(value);
                ReportPropertyChanging("DateOfDeposit");
                _DateOfDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfDeposit");
                OnDateOfDepositChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfDeposit;
        partial void OnDateOfDepositChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfDepositChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillPaymentBillPaymentInfo", "BillPaymentInfo")]
        public EntityCollection<BillPaymentInfo> BillPaymentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillPaymentInfo>("IspahaniAgroLTDModel.FK_BillPaymentBillPaymentInfo", "BillPaymentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillPaymentInfo>("IspahaniAgroLTDModel.FK_BillPaymentBillPaymentInfo", "BillPaymentInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerBillPayment", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBillPayment", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBillPayment", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBillPayment", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerBillPayment", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeBillPayment", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBillPayment", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBillPayment", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBillPayment", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeBillPayment", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="BillPaymentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillPaymentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillPaymentInfo object.
        /// </summary>
        /// <param name="billPaymentId">Initial value of the BillPaymentId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="billId">Initial value of the BillId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="hasRejected">Initial value of the HasRejected property.</param>
        public static BillPaymentInfo CreateBillPaymentInfo(global::System.Int64 billPaymentId, global::System.Int64 productId, global::System.Int64 billId, global::System.Double amount, global::System.Boolean hasRejected)
        {
            BillPaymentInfo billPaymentInfo = new BillPaymentInfo();
            billPaymentInfo.BillPaymentId = billPaymentId;
            billPaymentInfo.ProductId = productId;
            billPaymentInfo.BillId = billId;
            billPaymentInfo.Amount = amount;
            billPaymentInfo.HasRejected = hasRejected;
            return billPaymentInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillPaymentId
        {
            get
            {
                return _BillPaymentId;
            }
            set
            {
                if (_BillPaymentId != value)
                {
                    OnBillPaymentIdChanging(value);
                    ReportPropertyChanging("BillPaymentId");
                    _BillPaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillPaymentId");
                    OnBillPaymentIdChanged();
                }
            }
        }
        private global::System.Int64 _BillPaymentId;
        partial void OnBillPaymentIdChanging(global::System.Int64 value);
        partial void OnBillPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillId
        {
            get
            {
                return _BillId;
            }
            set
            {
                if (_BillId != value)
                {
                    OnBillIdChanging(value);
                    ReportPropertyChanging("BillId");
                    _BillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillId");
                    OnBillIdChanged();
                }
            }
        }
        private global::System.Int64 _BillId;
        partial void OnBillIdChanging(global::System.Int64 value);
        partial void OnBillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasRejected
        {
            get
            {
                return _HasRejected;
            }
            set
            {
                OnHasRejectedChanging(value);
                ReportPropertyChanging("HasRejected");
                _HasRejected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasRejected");
                OnHasRejectedChanged();
            }
        }
        private global::System.Boolean _HasRejected;
        partial void OnHasRejectedChanging(global::System.Boolean value);
        partial void OnHasRejectedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillBillPaymentInfo", "Bill")]
        public Bill Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillPaymentInfo", "Bill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillPaymentInfo", "Bill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> BillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillPaymentInfo", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillPaymentInfo", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillPaymentBillPaymentInfo", "BillPayment")]
        public BillPayment BillPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillPayment>("IspahaniAgroLTDModel.FK_BillPaymentBillPaymentInfo", "BillPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillPayment>("IspahaniAgroLTDModel.FK_BillPaymentBillPaymentInfo", "BillPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BillPayment> BillPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillPayment>("IspahaniAgroLTDModel.FK_BillPaymentBillPaymentInfo", "BillPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BillPayment>("IspahaniAgroLTDModel.FK_BillPaymentBillPaymentInfo", "BillPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductBillPaymentInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillPaymentInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillPaymentInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillPaymentInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillPaymentInfo", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="BillProductInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillProductInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillProductInfo object.
        /// </summary>
        /// <param name="billId">Initial value of the BillId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="productPrice">Initial value of the ProductPrice property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="lotQuantity">Initial value of the LotQuantity property.</param>
        /// <param name="comissionPercentage">Initial value of the ComissionPercentage property.</param>
        public static BillProductInfo CreateBillProductInfo(global::System.Int64 billId, global::System.Int64 productId, global::System.Double productPrice, global::System.String lotId, global::System.Double lotQuantity, global::System.Double comissionPercentage)
        {
            BillProductInfo billProductInfo = new BillProductInfo();
            billProductInfo.BillId = billId;
            billProductInfo.ProductId = productId;
            billProductInfo.ProductPrice = productPrice;
            billProductInfo.LotId = lotId;
            billProductInfo.LotQuantity = lotQuantity;
            billProductInfo.ComissionPercentage = comissionPercentage;
            return billProductInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillId
        {
            get
            {
                return _BillId;
            }
            set
            {
                if (_BillId != value)
                {
                    OnBillIdChanging(value);
                    ReportPropertyChanging("BillId");
                    _BillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillId");
                    OnBillIdChanged();
                }
            }
        }
        private global::System.Int64 _BillId;
        partial void OnBillIdChanging(global::System.Int64 value);
        partial void OnBillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductPrice
        {
            get
            {
                return _ProductPrice;
            }
            set
            {
                OnProductPriceChanging(value);
                ReportPropertyChanging("ProductPrice");
                _ProductPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPrice");
                OnProductPriceChanged();
            }
        }
        private global::System.Double _ProductPrice;
        partial void OnProductPriceChanging(global::System.Double value);
        partial void OnProductPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LotQuantity
        {
            get
            {
                return _LotQuantity;
            }
            set
            {
                OnLotQuantityChanging(value);
                ReportPropertyChanging("LotQuantity");
                _LotQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LotQuantity");
                OnLotQuantityChanged();
            }
        }
        private global::System.Double _LotQuantity;
        partial void OnLotQuantityChanging(global::System.Double value);
        partial void OnLotQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ComissionPercentage
        {
            get
            {
                return _ComissionPercentage;
            }
            set
            {
                OnComissionPercentageChanging(value);
                ReportPropertyChanging("ComissionPercentage");
                _ComissionPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComissionPercentage");
                OnComissionPercentageChanged();
            }
        }
        private global::System.Double _ComissionPercentage;
        partial void OnComissionPercentageChanging(global::System.Double value);
        partial void OnComissionPercentageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillBillProductInfo", "Bill")]
        public Bill Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillProductInfo", "Bill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillProductInfo", "Bill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> BillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillProductInfo", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillBillProductInfo", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductBillProductInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillProductInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillProductInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillProductInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductBillProductInfo", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Commission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Commission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Commission object.
        /// </summary>
        /// <param name="commissionId">Initial value of the CommissionId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="commissionName">Initial value of the CommissionName property.</param>
        /// <param name="nSMId">Initial value of the NSMId property.</param>
        /// <param name="adminId">Initial value of the AdminId property.</param>
        public static Commission CreateCommission(global::System.Int64 commissionId, global::System.Int64 productId, global::System.Double percentage, global::System.Int16 duration, global::System.String commissionName, global::System.Int64 nSMId, global::System.Int64 adminId)
        {
            Commission commission = new Commission();
            commission.CommissionId = commissionId;
            commission.ProductId = productId;
            commission.Percentage = percentage;
            commission.Duration = duration;
            commission.CommissionName = commissionName;
            commission.NSMId = nSMId;
            commission.AdminId = adminId;
            return commission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CommissionId
        {
            get
            {
                return _CommissionId;
            }
            set
            {
                if (_CommissionId != value)
                {
                    OnCommissionIdChanging(value);
                    ReportPropertyChanging("CommissionId");
                    _CommissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommissionId");
                    OnCommissionIdChanged();
                }
            }
        }
        private global::System.Int64 _CommissionId;
        partial void OnCommissionIdChanging(global::System.Int64 value);
        partial void OnCommissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Double _Percentage;
        partial void OnPercentageChanging(global::System.Double value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int16 _Duration;
        partial void OnDurationChanging(global::System.Int16 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommissionName
        {
            get
            {
                return _CommissionName;
            }
            set
            {
                OnCommissionNameChanging(value);
                ReportPropertyChanging("CommissionName");
                _CommissionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommissionName");
                OnCommissionNameChanged();
            }
        }
        private global::System.String _CommissionName;
        partial void OnCommissionNameChanging(global::System.String value);
        partial void OnCommissionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommissionStatus
        {
            get
            {
                return _CommissionStatus;
            }
            set
            {
                OnCommissionStatusChanging(value);
                ReportPropertyChanging("CommissionStatus");
                _CommissionStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommissionStatus");
                OnCommissionStatusChanged();
            }
        }
        private global::System.String _CommissionStatus;
        partial void OnCommissionStatusChanging(global::System.String value);
        partial void OnCommissionStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IntroducedDate
        {
            get
            {
                return _IntroducedDate;
            }
            set
            {
                OnIntroducedDateChanging(value);
                ReportPropertyChanging("IntroducedDate");
                _IntroducedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntroducedDate");
                OnIntroducedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IntroducedDate;
        partial void OnIntroducedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIntroducedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NSMId
        {
            get
            {
                return _NSMId;
            }
            set
            {
                OnNSMIdChanging(value);
                ReportPropertyChanging("NSMId");
                _NSMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NSMId");
                OnNSMIdChanged();
            }
        }
        private global::System.Int64 _NSMId;
        partial void OnNSMIdChanging(global::System.Int64 value);
        partial void OnNSMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdminId
        {
            get
            {
                return _AdminId;
            }
            set
            {
                OnAdminIdChanging(value);
                ReportPropertyChanging("AdminId");
                _AdminId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdminId");
                OnAdminIdChanged();
            }
        }
        private global::System.Int64 _AdminId;
        partial void OnAdminIdChanging(global::System.Int64 value);
        partial void OnAdminIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeApproveCommission", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApproveCommission", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApproveCommission", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApproveCommission", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApproveCommission", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeCreateCommission", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreateCommission", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreateCommission", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreateCommission", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreateCommission", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductCommission", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductCommission", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductCommission", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductCommission", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductCommission", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Dealer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dealer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dealer object.
        /// </summary>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="fatherName">Initial value of the FatherName property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="contactNo">Initial value of the ContactNo property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="companyAddress">Initial value of the CompanyAddress property.</param>
        /// <param name="licenseNo">Initial value of the LicenseNo property.</param>
        /// <param name="creditLimit">Initial value of the CreditLimit property.</param>
        /// <param name="expectedDefaulterDate">Initial value of the ExpectedDefaulterDate property.</param>
        /// <param name="activityStatus">Initial value of the ActivityStatus property.</param>
        /// <param name="totalDue">Initial value of the TotalDue property.</param>
        /// <param name="dateOfAdminApproval">Initial value of the DateOfAdminApproval property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="salesOfficerId">Initial value of the SalesOfficerId property.</param>
        /// <param name="totalCollection">Initial value of the TotalCollection property.</param>
        public static Dealer CreateDealer(global::System.Int64 dealerId, global::System.String name, global::System.String fatherName, global::System.DateTime dateOfBirth, global::System.String contactNo, global::System.String companyName, global::System.String companyAddress, global::System.String licenseNo, global::System.Double creditLimit, global::System.DateTime expectedDefaulterDate, global::System.String activityStatus, global::System.Double totalDue, global::System.DateTime dateOfAdminApproval, global::System.Int64 regionId, global::System.Int64 salesOfficerId, global::System.Double totalCollection)
        {
            Dealer dealer = new Dealer();
            dealer.DealerId = dealerId;
            dealer.Name = name;
            dealer.FatherName = fatherName;
            dealer.DateOfBirth = dateOfBirth;
            dealer.ContactNo = contactNo;
            dealer.CompanyName = companyName;
            dealer.CompanyAddress = companyAddress;
            dealer.LicenseNo = licenseNo;
            dealer.CreditLimit = creditLimit;
            dealer.ExpectedDefaulterDate = expectedDefaulterDate;
            dealer.ActivityStatus = activityStatus;
            dealer.TotalDue = totalDue;
            dealer.DateOfAdminApproval = dateOfAdminApproval;
            dealer.RegionId = regionId;
            dealer.SalesOfficerId = salesOfficerId;
            dealer.TotalCollection = totalCollection;
            return dealer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                if (_DealerId != value)
                {
                    OnDealerIdChanging(value);
                    ReportPropertyChanging("DealerId");
                    _DealerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealerId");
                    OnDealerIdChanged();
                }
            }
        }
        private global::System.Int64 _DealerId;
        partial void OnDealerIdChanging(global::System.Int64 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherName
        {
            get
            {
                return _FatherName;
            }
            set
            {
                OnFatherNameChanging(value);
                ReportPropertyChanging("FatherName");
                _FatherName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherName");
                OnFatherNameChanged();
            }
        }
        private global::System.String _FatherName;
        partial void OnFatherNameChanging(global::System.String value);
        partial void OnFatherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.String _ContactNo;
        partial void OnContactNoChanging(global::System.String value);
        partial void OnContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyAddress
        {
            get
            {
                return _CompanyAddress;
            }
            set
            {
                OnCompanyAddressChanging(value);
                ReportPropertyChanging("CompanyAddress");
                _CompanyAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyAddress");
                OnCompanyAddressChanged();
            }
        }
        private global::System.String _CompanyAddress;
        partial void OnCompanyAddressChanging(global::System.String value);
        partial void OnCompanyAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseNo
        {
            get
            {
                return _LicenseNo;
            }
            set
            {
                OnLicenseNoChanging(value);
                ReportPropertyChanging("LicenseNo");
                _LicenseNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseNo");
                OnLicenseNoChanged();
            }
        }
        private global::System.String _LicenseNo;
        partial void OnLicenseNoChanging(global::System.String value);
        partial void OnLicenseNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CreditLimit
        {
            get
            {
                return _CreditLimit;
            }
            set
            {
                OnCreditLimitChanging(value);
                ReportPropertyChanging("CreditLimit");
                _CreditLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditLimit");
                OnCreditLimitChanged();
            }
        }
        private global::System.Double _CreditLimit;
        partial void OnCreditLimitChanging(global::System.Double value);
        partial void OnCreditLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpectedDefaulterDate
        {
            get
            {
                return _ExpectedDefaulterDate;
            }
            set
            {
                OnExpectedDefaulterDateChanging(value);
                ReportPropertyChanging("ExpectedDefaulterDate");
                _ExpectedDefaulterDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedDefaulterDate");
                OnExpectedDefaulterDateChanged();
            }
        }
        private global::System.DateTime _ExpectedDefaulterDate;
        partial void OnExpectedDefaulterDateChanging(global::System.DateTime value);
        partial void OnExpectedDefaulterDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActivityStatus
        {
            get
            {
                return _ActivityStatus;
            }
            set
            {
                OnActivityStatusChanging(value);
                ReportPropertyChanging("ActivityStatus");
                _ActivityStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActivityStatus");
                OnActivityStatusChanged();
            }
        }
        private global::System.String _ActivityStatus;
        partial void OnActivityStatusChanging(global::System.String value);
        partial void OnActivityStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalDue
        {
            get
            {
                return _TotalDue;
            }
            set
            {
                OnTotalDueChanging(value);
                ReportPropertyChanging("TotalDue");
                _TotalDue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalDue");
                OnTotalDueChanged();
            }
        }
        private global::System.Double _TotalDue;
        partial void OnTotalDueChanging(global::System.Double value);
        partial void OnTotalDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfAdminApproval
        {
            get
            {
                return _DateOfAdminApproval;
            }
            set
            {
                OnDateOfAdminApprovalChanging(value);
                ReportPropertyChanging("DateOfAdminApproval");
                _DateOfAdminApproval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfAdminApproval");
                OnDateOfAdminApprovalChanged();
            }
        }
        private global::System.DateTime _DateOfAdminApproval;
        partial void OnDateOfAdminApprovalChanging(global::System.DateTime value);
        partial void OnDateOfAdminApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int64 _RegionId;
        partial void OnRegionIdChanging(global::System.Int64 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesOfficerId
        {
            get
            {
                return _SalesOfficerId;
            }
            set
            {
                OnSalesOfficerIdChanging(value);
                ReportPropertyChanging("SalesOfficerId");
                _SalesOfficerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesOfficerId");
                OnSalesOfficerIdChanged();
            }
        }
        private global::System.Int64 _SalesOfficerId;
        partial void OnSalesOfficerIdChanging(global::System.Int64 value);
        partial void OnSalesOfficerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalCollection
        {
            get
            {
                return _TotalCollection;
            }
            set
            {
                OnTotalCollectionChanging(value);
                ReportPropertyChanging("TotalCollection");
                _TotalCollection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCollection");
                OnTotalCollectionChanged();
            }
        }
        private global::System.Double _TotalCollection;
        partial void OnTotalCollectionChanging(global::System.Double value);
        partial void OnTotalCollectionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerBillPayment", "BillPayment")]
        public EntityCollection<BillPayment> BillPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillPayment>("IspahaniAgroLTDModel.FK_DealerBillPayment", "BillPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillPayment>("IspahaniAgroLTDModel.FK_DealerBillPayment", "BillPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerBill", "Bill")]
        public EntityCollection<Bill> Bills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("IspahaniAgroLTDModel.FK_DealerBill", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("IspahaniAgroLTDModel.FK_DealerBill", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerDueInfo", "DueInfo")]
        public EntityCollection<DueInfo> DueInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DueInfo>("IspahaniAgroLTDModel.FK_DealerDueInfo", "DueInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DueInfo>("IspahaniAgroLTDModel.FK_DealerDueInfo", "DueInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerPlacesIndent", "Indent")]
        public EntityCollection<Indent> Indents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Indent>("IspahaniAgroLTDModel.FK_DealerPlacesIndent", "Indent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Indent>("IspahaniAgroLTDModel.FK_DealerPlacesIndent", "Indent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerRegion", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_DealerRegion", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_DealerRegion", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_DealerRegion", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("IspahaniAgroLTDModel.FK_DealerRegion", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerSalesReturn", "SalesReturn")]
        public EntityCollection<SalesReturn> SalesReturns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesReturn>("IspahaniAgroLTDModel.FK_DealerSalesReturn", "SalesReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesReturn>("IspahaniAgroLTDModel.FK_DealerSalesReturn", "SalesReturn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeDealer", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeDealer", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeDealer", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeDealer", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeDealer", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_YearSummaryDealerDealer", "YearSummaryDealer")]
        public EntityCollection<YearSummaryDealer> YearSummaryDealers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryDealer>("IspahaniAgroLTDModel.FK_YearSummaryDealerDealer", "YearSummaryDealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryDealer>("IspahaniAgroLTDModel.FK_YearSummaryDealerDealer", "YearSummaryDealer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="DueInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DueInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DueInfo object.
        /// </summary>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="billId">Initial value of the BillId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="dueStatus">Initial value of the DueStatus property.</param>
        /// <param name="productCost">Initial value of the ProductCost property.</param>
        /// <param name="transportationLoss">Initial value of the TransportationLoss property.</param>
        /// <param name="salesReturn">Initial value of the SalesReturn property.</param>
        /// <param name="paid">Initial value of the Paid property.</param>
        /// <param name="commissionOnSell">Initial value of the CommissionOnSell property.</param>
        /// <param name="commissionOnBenefit">Initial value of the CommissionOnBenefit property.</param>
        /// <param name="paymentDeadLine">Initial value of the PaymentDeadLine property.</param>
        public static DueInfo CreateDueInfo(global::System.Int64 dealerId, global::System.Int64 billId, global::System.Int64 productId, global::System.String dueStatus, global::System.Double productCost, global::System.Double transportationLoss, global::System.Double salesReturn, global::System.Double paid, global::System.Double commissionOnSell, global::System.Double commissionOnBenefit, global::System.DateTime paymentDeadLine)
        {
            DueInfo dueInfo = new DueInfo();
            dueInfo.DealerId = dealerId;
            dueInfo.BillId = billId;
            dueInfo.ProductId = productId;
            dueInfo.DueStatus = dueStatus;
            dueInfo.ProductCost = productCost;
            dueInfo.TransportationLoss = transportationLoss;
            dueInfo.SalesReturn = salesReturn;
            dueInfo.Paid = paid;
            dueInfo.CommissionOnSell = commissionOnSell;
            dueInfo.CommissionOnBenefit = commissionOnBenefit;
            dueInfo.PaymentDeadLine = paymentDeadLine;
            return dueInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int64 _DealerId;
        partial void OnDealerIdChanging(global::System.Int64 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillId
        {
            get
            {
                return _BillId;
            }
            set
            {
                if (_BillId != value)
                {
                    OnBillIdChanging(value);
                    ReportPropertyChanging("BillId");
                    _BillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillId");
                    OnBillIdChanged();
                }
            }
        }
        private global::System.Int64 _BillId;
        partial void OnBillIdChanging(global::System.Int64 value);
        partial void OnBillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DueStatus
        {
            get
            {
                return _DueStatus;
            }
            set
            {
                OnDueStatusChanging(value);
                ReportPropertyChanging("DueStatus");
                _DueStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DueStatus");
                OnDueStatusChanged();
            }
        }
        private global::System.String _DueStatus;
        partial void OnDueStatusChanging(global::System.String value);
        partial void OnDueStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductCost
        {
            get
            {
                return _ProductCost;
            }
            set
            {
                OnProductCostChanging(value);
                ReportPropertyChanging("ProductCost");
                _ProductCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCost");
                OnProductCostChanged();
            }
        }
        private global::System.Double _ProductCost;
        partial void OnProductCostChanging(global::System.Double value);
        partial void OnProductCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransportationLoss
        {
            get
            {
                return _TransportationLoss;
            }
            set
            {
                OnTransportationLossChanging(value);
                ReportPropertyChanging("TransportationLoss");
                _TransportationLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransportationLoss");
                OnTransportationLossChanged();
            }
        }
        private global::System.Double _TransportationLoss;
        partial void OnTransportationLossChanging(global::System.Double value);
        partial void OnTransportationLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SalesReturn
        {
            get
            {
                return _SalesReturn;
            }
            set
            {
                OnSalesReturnChanging(value);
                ReportPropertyChanging("SalesReturn");
                _SalesReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesReturn");
                OnSalesReturnChanged();
            }
        }
        private global::System.Double _SalesReturn;
        partial void OnSalesReturnChanging(global::System.Double value);
        partial void OnSalesReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Paid
        {
            get
            {
                return _Paid;
            }
            set
            {
                OnPaidChanging(value);
                ReportPropertyChanging("Paid");
                _Paid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Paid");
                OnPaidChanged();
            }
        }
        private global::System.Double _Paid;
        partial void OnPaidChanging(global::System.Double value);
        partial void OnPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CommissionOnSell
        {
            get
            {
                return _CommissionOnSell;
            }
            set
            {
                OnCommissionOnSellChanging(value);
                ReportPropertyChanging("CommissionOnSell");
                _CommissionOnSell = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionOnSell");
                OnCommissionOnSellChanged();
            }
        }
        private global::System.Double _CommissionOnSell;
        partial void OnCommissionOnSellChanging(global::System.Double value);
        partial void OnCommissionOnSellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CommissionOnBenefit
        {
            get
            {
                return _CommissionOnBenefit;
            }
            set
            {
                OnCommissionOnBenefitChanging(value);
                ReportPropertyChanging("CommissionOnBenefit");
                _CommissionOnBenefit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionOnBenefit");
                OnCommissionOnBenefitChanged();
            }
        }
        private global::System.Double _CommissionOnBenefit;
        partial void OnCommissionOnBenefitChanging(global::System.Double value);
        partial void OnCommissionOnBenefitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDeadLine
        {
            get
            {
                return _PaymentDeadLine;
            }
            set
            {
                OnPaymentDeadLineChanging(value);
                ReportPropertyChanging("PaymentDeadLine");
                _PaymentDeadLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDeadLine");
                OnPaymentDeadLineChanged();
            }
        }
        private global::System.DateTime _PaymentDeadLine;
        partial void OnPaymentDeadLineChanging(global::System.DateTime value);
        partial void OnPaymentDeadLineChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillDueInfo", "Bill")]
        public Bill Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillDueInfo", "Bill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillDueInfo", "Bill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> BillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillDueInfo", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillDueInfo", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerDueInfo", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerDueInfo", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerDueInfo", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerDueInfo", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerDueInfo", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductDueInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductDueInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductDueInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductDueInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductDueInfo", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="designation">Initial value of the Designation property.</param>
        /// <param name="activityStatus">Initial value of the ActivityStatus property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Employee CreateEmployee(global::System.Int64 employeeId, global::System.Int64 personId, global::System.Int64 regionId, global::System.String designation, global::System.String activityStatus, global::System.String userName, global::System.String password)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            employee.PersonId = personId;
            employee.RegionId = regionId;
            employee.Designation = designation;
            employee.ActivityStatus = activityStatus;
            employee.UserName = userName;
            employee.Password = password;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int64 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int64 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int64 _PersonId;
        partial void OnPersonIdChanging(global::System.Int64 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int64 _RegionId;
        partial void OnRegionIdChanging(global::System.Int64 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActivityStatus
        {
            get
            {
                return _ActivityStatus;
            }
            set
            {
                OnActivityStatusChanging(value);
                ReportPropertyChanging("ActivityStatus");
                _ActivityStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActivityStatus");
                OnActivityStatusChanged();
            }
        }
        private global::System.String _ActivityStatus;
        partial void OnActivityStatusChanging(global::System.String value);
        partial void OnActivityStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeBillPayment", "BillPayment")]
        public EntityCollection<BillPayment> BillPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillPayment>("IspahaniAgroLTDModel.FK_EmployeeBillPayment", "BillPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillPayment>("IspahaniAgroLTDModel.FK_EmployeeBillPayment", "BillPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeBill", "Bill")]
        public EntityCollection<Bill> Bills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("IspahaniAgroLTDModel.FK_EmployeeBill", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("IspahaniAgroLTDModel.FK_EmployeeBill", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeApproveCommission", "Commission")]
        public EntityCollection<Commission> Commissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commission>("IspahaniAgroLTDModel.FK_EmployeeApproveCommission", "Commission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commission>("IspahaniAgroLTDModel.FK_EmployeeApproveCommission", "Commission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeCreateCommission", "Commission")]
        public EntityCollection<Commission> Commissions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commission>("IspahaniAgroLTDModel.FK_EmployeeCreateCommission", "Commission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commission>("IspahaniAgroLTDModel.FK_EmployeeCreateCommission", "Commission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeDealer", "Dealer")]
        public EntityCollection<Dealer> Dealers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dealer>("IspahaniAgroLTDModel.FK_EmployeeDealer", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dealer>("IspahaniAgroLTDModel.FK_EmployeeDealer", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeApprovedPackage", "Package")]
        public EntityCollection<Package> Packages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Package>("IspahaniAgroLTDModel.FK_EmployeeApprovedPackage", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Package>("IspahaniAgroLTDModel.FK_EmployeeApprovedPackage", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeApprovesProductEdits", "ProductEdit")]
        public EntityCollection<ProductEdit> ProductEdits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductEdit>("IspahaniAgroLTDModel.FK_EmployeeApprovesProductEdits", "ProductEdit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductEdit>("IspahaniAgroLTDModel.FK_EmployeeApprovesProductEdits", "ProductEdit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeCreatedPackage", "Package")]
        public EntityCollection<Package> Packages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Package>("IspahaniAgroLTDModel.FK_EmployeeCreatedPackage", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Package>("IspahaniAgroLTDModel.FK_EmployeeCreatedPackage", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditure", "Expenditure")]
        public EntityCollection<Expenditure> Expenditures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expenditure>("IspahaniAgroLTDModel.FK_EmployeeExpenditure", "Expenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expenditure>("IspahaniAgroLTDModel.FK_EmployeeExpenditure", "Expenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditure1", "Expenditure")]
        public EntityCollection<Expenditure> Expenditures1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expenditure>("IspahaniAgroLTDModel.FK_EmployeeExpenditure1", "Expenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expenditure>("IspahaniAgroLTDModel.FK_EmployeeExpenditure1", "Expenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditureInfo", "ExpenditureInfo")]
        public EntityCollection<ExpenditureInfo> ExpenditureInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenditureInfo>("IspahaniAgroLTDModel.FK_EmployeeExpenditureInfo", "ExpenditureInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenditureInfo>("IspahaniAgroLTDModel.FK_EmployeeExpenditureInfo", "ExpenditureInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeInventory", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("IspahaniAgroLTDModel.FK_EmployeeInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("IspahaniAgroLTDModel.FK_EmployeeInventory", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeInventory1", "Inventory")]
        public EntityCollection<Inventory> Inventories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("IspahaniAgroLTDModel.FK_EmployeeInventory1", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("IspahaniAgroLTDModel.FK_EmployeeInventory1", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeMessageDelivery", "MessageDelivery")]
        public EntityCollection<MessageDelivery> MessageDeliveries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageDelivery>("IspahaniAgroLTDModel.FK_EmployeeMessageDelivery", "MessageDelivery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageDelivery>("IspahaniAgroLTDModel.FK_EmployeeMessageDelivery", "MessageDelivery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeMRR", "MRR")]
        public EntityCollection<MRR> MRRs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRR>("IspahaniAgroLTDModel.FK_EmployeeMRR", "MRR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRR>("IspahaniAgroLTDModel.FK_EmployeeMRR", "MRR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeNoticeBoard", "NoticeBoard")]
        public EntityCollection<NoticeBoard> NoticeBoards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NoticeBoard>("IspahaniAgroLTDModel.FK_EmployeeNoticeBoard", "NoticeBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NoticeBoard>("IspahaniAgroLTDModel.FK_EmployeeNoticeBoard", "NoticeBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeePLR", "PLR")]
        public EntityCollection<PLR> PLRs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLR>("IspahaniAgroLTDModel.FK_EmployeePLR", "PLR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLR>("IspahaniAgroLTDModel.FK_EmployeePLR", "PLR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeePLR1", "PLR")]
        public EntityCollection<PLR> PLRs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLR>("IspahaniAgroLTDModel.FK_EmployeePLR1", "PLR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLR>("IspahaniAgroLTDModel.FK_EmployeePLR1", "PLR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeProductEdit", "ProductEdit")]
        public EntityCollection<ProductEdit> ProductEdits1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductEdit>("IspahaniAgroLTDModel.FK_EmployeeProductEdit", "ProductEdit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductEdit>("IspahaniAgroLTDModel.FK_EmployeeProductEdit", "ProductEdit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeRegion", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_EmployeeRegion", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_EmployeeRegion", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_EmployeeRegion", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("IspahaniAgroLTDModel.FK_EmployeeRegion", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeRequisition", "Requisition")]
        public EntityCollection<Requisition> Requisitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Requisition>("IspahaniAgroLTDModel.FK_EmployeeRequisition", "Requisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Requisition>("IspahaniAgroLTDModel.FK_EmployeeRequisition", "Requisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeRequisition1", "Requisition")]
        public EntityCollection<Requisition> Requisitions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Requisition>("IspahaniAgroLTDModel.FK_EmployeeRequisition1", "Requisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Requisition>("IspahaniAgroLTDModel.FK_EmployeeRequisition1", "Requisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeSalesOfficerTarget", "SalesOfficerTarget")]
        public EntityCollection<SalesOfficerTarget> SalesOfficerTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOfficerTarget>("IspahaniAgroLTDModel.FK_EmployeeSalesOfficerTarget", "SalesOfficerTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOfficerTarget>("IspahaniAgroLTDModel.FK_EmployeeSalesOfficerTarget", "SalesOfficerTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeSalesReturn", "SalesReturn")]
        public EntityCollection<SalesReturn> SalesReturns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesReturn>("IspahaniAgroLTDModel.FK_EmployeeSalesReturn", "SalesReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesReturn>("IspahaniAgroLTDModel.FK_EmployeeSalesReturn", "SalesReturn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeTransferIndents", "TransferIndent")]
        public EntityCollection<TransferIndent> TransferIndents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferIndent>("IspahaniAgroLTDModel.FK_EmployeeTransferIndents", "TransferIndent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferIndent>("IspahaniAgroLTDModel.FK_EmployeeTransferIndents", "TransferIndent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MessageDeliveryEmployee", "MessageDelivery")]
        public EntityCollection<MessageDelivery> MessageDeliveries1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageDelivery>("IspahaniAgroLTDModel.FK_MessageDeliveryEmployee", "MessageDelivery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageDelivery>("IspahaniAgroLTDModel.FK_MessageDeliveryEmployee", "MessageDelivery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PersonEmployee", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("IspahaniAgroLTDModel.FK_PersonEmployee", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("IspahaniAgroLTDModel.FK_PersonEmployee", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("IspahaniAgroLTDModel.FK_PersonEmployee", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("IspahaniAgroLTDModel.FK_PersonEmployee", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferEmployee", "ProductTransfer")]
        public EntityCollection<ProductTransfer> ProductTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferEmployee", "ProductTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferEmployee", "ProductTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RMVerifiesIndent", "Indent")]
        public EntityCollection<Indent> Indents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Indent>("IspahaniAgroLTDModel.FK_RMVerifiesIndent", "Indent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Indent>("IspahaniAgroLTDModel.FK_RMVerifiesIndent", "Indent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_YearSummarySOExpenditureEmployee", "YearSummarySOExpenditure")]
        public EntityCollection<YearSummarySOExpenditure> YearSummarySOExpenditures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummarySOExpenditure>("IspahaniAgroLTDModel.FK_YearSummarySOExpenditureEmployee", "YearSummarySOExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummarySOExpenditure>("IspahaniAgroLTDModel.FK_YearSummarySOExpenditureEmployee", "YearSummarySOExpenditure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Expenditure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Expenditure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Expenditure object.
        /// </summary>
        /// <param name="expenditureId">Initial value of the ExpenditureId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="placedById">Initial value of the PlacedById property.</param>
        /// <param name="placedToId">Initial value of the PlacedToId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="totalPlacedAmount">Initial value of the TotalPlacedAmount property.</param>
        /// <param name="totalAcceptedAmount">Initial value of the TotalAcceptedAmount property.</param>
        public static Expenditure CreateExpenditure(global::System.Int64 expenditureId, global::System.DateTime dateOfIssue, global::System.Int64 regionId, global::System.Int64 placedById, global::System.Int64 placedToId, global::System.String status, global::System.Double totalPlacedAmount, global::System.Double totalAcceptedAmount)
        {
            Expenditure expenditure = new Expenditure();
            expenditure.ExpenditureId = expenditureId;
            expenditure.DateOfIssue = dateOfIssue;
            expenditure.RegionId = regionId;
            expenditure.PlacedById = placedById;
            expenditure.PlacedToId = placedToId;
            expenditure.Status = status;
            expenditure.TotalPlacedAmount = totalPlacedAmount;
            expenditure.TotalAcceptedAmount = totalAcceptedAmount;
            return expenditure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenditureId
        {
            get
            {
                return _ExpenditureId;
            }
            set
            {
                if (_ExpenditureId != value)
                {
                    OnExpenditureIdChanging(value);
                    ReportPropertyChanging("ExpenditureId");
                    _ExpenditureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenditureId");
                    OnExpenditureIdChanged();
                }
            }
        }
        private global::System.Int64 _ExpenditureId;
        partial void OnExpenditureIdChanging(global::System.Int64 value);
        partial void OnExpenditureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int64 _RegionId;
        partial void OnRegionIdChanging(global::System.Int64 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlacedById
        {
            get
            {
                return _PlacedById;
            }
            set
            {
                OnPlacedByIdChanging(value);
                ReportPropertyChanging("PlacedById");
                _PlacedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedById");
                OnPlacedByIdChanged();
            }
        }
        private global::System.Int64 _PlacedById;
        partial void OnPlacedByIdChanging(global::System.Int64 value);
        partial void OnPlacedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlacedToId
        {
            get
            {
                return _PlacedToId;
            }
            set
            {
                OnPlacedToIdChanging(value);
                ReportPropertyChanging("PlacedToId");
                _PlacedToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedToId");
                OnPlacedToIdChanged();
            }
        }
        private global::System.Int64 _PlacedToId;
        partial void OnPlacedToIdChanging(global::System.Int64 value);
        partial void OnPlacedToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalPlacedAmount
        {
            get
            {
                return _TotalPlacedAmount;
            }
            set
            {
                OnTotalPlacedAmountChanging(value);
                ReportPropertyChanging("TotalPlacedAmount");
                _TotalPlacedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPlacedAmount");
                OnTotalPlacedAmountChanged();
            }
        }
        private global::System.Double _TotalPlacedAmount;
        partial void OnTotalPlacedAmountChanging(global::System.Double value);
        partial void OnTotalPlacedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAcceptedAmount
        {
            get
            {
                return _TotalAcceptedAmount;
            }
            set
            {
                OnTotalAcceptedAmountChanging(value);
                ReportPropertyChanging("TotalAcceptedAmount");
                _TotalAcceptedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAcceptedAmount");
                OnTotalAcceptedAmountChanged();
            }
        }
        private global::System.Double _TotalAcceptedAmount;
        partial void OnTotalAcceptedAmountChanging(global::System.Double value);
        partial void OnTotalAcceptedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpenditureCode
        {
            get
            {
                return _ExpenditureCode;
            }
            set
            {
                OnExpenditureCodeChanging(value);
                ReportPropertyChanging("ExpenditureCode");
                _ExpenditureCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExpenditureCode");
                OnExpenditureCodeChanged();
            }
        }
        private global::System.String _ExpenditureCode;
        partial void OnExpenditureCodeChanging(global::System.String value);
        partial void OnExpenditureCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditure", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditure1", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure1", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure1", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditure1", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ExpenditureExpenditureInfo", "ExpenditureInfo")]
        public EntityCollection<ExpenditureInfo> ExpenditureInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenditureInfo>("IspahaniAgroLTDModel.FK_ExpenditureExpenditureInfo", "ExpenditureInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenditureInfo>("IspahaniAgroLTDModel.FK_ExpenditureExpenditureInfo", "ExpenditureInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RegionExpenditure", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionExpenditure", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionExpenditure", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionExpenditure", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionExpenditure", "Region", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="ExpenditureInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenditureInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenditureInfo object.
        /// </summary>
        /// <param name="expenditureId">Initial value of the ExpenditureId property.</param>
        /// <param name="salesOfficerId">Initial value of the SalesOfficerId property.</param>
        /// <param name="placedAmount">Initial value of the PlacedAmount property.</param>
        /// <param name="remarks">Initial value of the Remarks property.</param>
        /// <param name="nSMAcceptedAmount">Initial value of the NSMAcceptedAmount property.</param>
        /// <param name="accountAcceptedAmount">Initial value of the AccountAcceptedAmount property.</param>
        public static ExpenditureInfo CreateExpenditureInfo(global::System.Int64 expenditureId, global::System.Int64 salesOfficerId, global::System.Double placedAmount, global::System.String remarks, global::System.Double nSMAcceptedAmount, global::System.Double accountAcceptedAmount)
        {
            ExpenditureInfo expenditureInfo = new ExpenditureInfo();
            expenditureInfo.ExpenditureId = expenditureId;
            expenditureInfo.SalesOfficerId = salesOfficerId;
            expenditureInfo.PlacedAmount = placedAmount;
            expenditureInfo.Remarks = remarks;
            expenditureInfo.NSMAcceptedAmount = nSMAcceptedAmount;
            expenditureInfo.AccountAcceptedAmount = accountAcceptedAmount;
            return expenditureInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenditureId
        {
            get
            {
                return _ExpenditureId;
            }
            set
            {
                if (_ExpenditureId != value)
                {
                    OnExpenditureIdChanging(value);
                    ReportPropertyChanging("ExpenditureId");
                    _ExpenditureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenditureId");
                    OnExpenditureIdChanged();
                }
            }
        }
        private global::System.Int64 _ExpenditureId;
        partial void OnExpenditureIdChanging(global::System.Int64 value);
        partial void OnExpenditureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesOfficerId
        {
            get
            {
                return _SalesOfficerId;
            }
            set
            {
                if (_SalesOfficerId != value)
                {
                    OnSalesOfficerIdChanging(value);
                    ReportPropertyChanging("SalesOfficerId");
                    _SalesOfficerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesOfficerId");
                    OnSalesOfficerIdChanged();
                }
            }
        }
        private global::System.Int64 _SalesOfficerId;
        partial void OnSalesOfficerIdChanging(global::System.Int64 value);
        partial void OnSalesOfficerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PlacedAmount
        {
            get
            {
                return _PlacedAmount;
            }
            set
            {
                OnPlacedAmountChanging(value);
                ReportPropertyChanging("PlacedAmount");
                _PlacedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedAmount");
                OnPlacedAmountChanged();
            }
        }
        private global::System.Double _PlacedAmount;
        partial void OnPlacedAmountChanging(global::System.Double value);
        partial void OnPlacedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double NSMAcceptedAmount
        {
            get
            {
                return _NSMAcceptedAmount;
            }
            set
            {
                OnNSMAcceptedAmountChanging(value);
                ReportPropertyChanging("NSMAcceptedAmount");
                _NSMAcceptedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NSMAcceptedAmount");
                OnNSMAcceptedAmountChanged();
            }
        }
        private global::System.Double _NSMAcceptedAmount;
        partial void OnNSMAcceptedAmountChanging(global::System.Double value);
        partial void OnNSMAcceptedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AccountAcceptedAmount
        {
            get
            {
                return _AccountAcceptedAmount;
            }
            set
            {
                OnAccountAcceptedAmountChanging(value);
                ReportPropertyChanging("AccountAcceptedAmount");
                _AccountAcceptedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountAcceptedAmount");
                OnAccountAcceptedAmountChanged();
            }
        }
        private global::System.Double _AccountAcceptedAmount;
        partial void OnAccountAcceptedAmountChanging(global::System.Double value);
        partial void OnAccountAcceptedAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeExpenditureInfo", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditureInfo", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditureInfo", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditureInfo", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeExpenditureInfo", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ExpenditureExpenditureInfo", "Expenditure")]
        public Expenditure Expenditure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Expenditure>("IspahaniAgroLTDModel.FK_ExpenditureExpenditureInfo", "Expenditure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Expenditure>("IspahaniAgroLTDModel.FK_ExpenditureExpenditureInfo", "Expenditure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Expenditure> ExpenditureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Expenditure>("IspahaniAgroLTDModel.FK_ExpenditureExpenditureInfo", "Expenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Expenditure>("IspahaniAgroLTDModel.FK_ExpenditureExpenditureInfo", "Expenditure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Indent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Indent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Indent object.
        /// </summary>
        /// <param name="indentId">Initial value of the IndentId property.</param>
        /// <param name="dateOfPlace">Initial value of the DateOfPlace property.</param>
        /// <param name="indentStatus">Initial value of the IndentStatus property.</param>
        /// <param name="issuedById">Initial value of the IssuedById property.</param>
        /// <param name="issuedToId">Initial value of the IssuedToId property.</param>
        /// <param name="forwardedToId">Initial value of the ForwardedToId property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        /// <param name="isConsideredByNSM">Initial value of the IsConsideredByNSM property.</param>
        /// <param name="forwardedToInventoryId">Initial value of the ForwardedToInventoryId property.</param>
        public static Indent CreateIndent(global::System.Int64 indentId, global::System.DateTime dateOfPlace, global::System.String indentStatus, global::System.Int64 issuedById, global::System.Int64 issuedToId, global::System.Int64 forwardedToId, global::System.String paymentMethod, global::System.Boolean isConsideredByNSM, global::System.Int64 forwardedToInventoryId)
        {
            Indent indent = new Indent();
            indent.IndentId = indentId;
            indent.DateOfPlace = dateOfPlace;
            indent.IndentStatus = indentStatus;
            indent.IssuedById = issuedById;
            indent.IssuedToId = issuedToId;
            indent.ForwardedToId = forwardedToId;
            indent.PaymentMethod = paymentMethod;
            indent.IsConsideredByNSM = isConsideredByNSM;
            indent.ForwardedToInventoryId = forwardedToInventoryId;
            return indent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IndentId
        {
            get
            {
                return _IndentId;
            }
            set
            {
                if (_IndentId != value)
                {
                    OnIndentIdChanging(value);
                    ReportPropertyChanging("IndentId");
                    _IndentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndentId");
                    OnIndentIdChanged();
                }
            }
        }
        private global::System.Int64 _IndentId;
        partial void OnIndentIdChanging(global::System.Int64 value);
        partial void OnIndentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfPlace
        {
            get
            {
                return _DateOfPlace;
            }
            set
            {
                OnDateOfPlaceChanging(value);
                ReportPropertyChanging("DateOfPlace");
                _DateOfPlace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfPlace");
                OnDateOfPlaceChanged();
            }
        }
        private global::System.DateTime _DateOfPlace;
        partial void OnDateOfPlaceChanging(global::System.DateTime value);
        partial void OnDateOfPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IndentStatus
        {
            get
            {
                return _IndentStatus;
            }
            set
            {
                OnIndentStatusChanging(value);
                ReportPropertyChanging("IndentStatus");
                _IndentStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IndentStatus");
                OnIndentStatusChanged();
            }
        }
        private global::System.String _IndentStatus;
        partial void OnIndentStatusChanging(global::System.String value);
        partial void OnIndentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedById
        {
            get
            {
                return _IssuedById;
            }
            set
            {
                OnIssuedByIdChanging(value);
                ReportPropertyChanging("IssuedById");
                _IssuedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedById");
                OnIssuedByIdChanged();
            }
        }
        private global::System.Int64 _IssuedById;
        partial void OnIssuedByIdChanging(global::System.Int64 value);
        partial void OnIssuedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedToId
        {
            get
            {
                return _IssuedToId;
            }
            set
            {
                OnIssuedToIdChanging(value);
                ReportPropertyChanging("IssuedToId");
                _IssuedToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedToId");
                OnIssuedToIdChanged();
            }
        }
        private global::System.Int64 _IssuedToId;
        partial void OnIssuedToIdChanging(global::System.Int64 value);
        partial void OnIssuedToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ForwardedToId
        {
            get
            {
                return _ForwardedToId;
            }
            set
            {
                OnForwardedToIdChanging(value);
                ReportPropertyChanging("ForwardedToId");
                _ForwardedToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForwardedToId");
                OnForwardedToIdChanged();
            }
        }
        private global::System.Int64 _ForwardedToId;
        partial void OnForwardedToIdChanging(global::System.Int64 value);
        partial void OnForwardedToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsConsideredByNSM
        {
            get
            {
                return _IsConsideredByNSM;
            }
            set
            {
                OnIsConsideredByNSMChanging(value);
                ReportPropertyChanging("IsConsideredByNSM");
                _IsConsideredByNSM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConsideredByNSM");
                OnIsConsideredByNSMChanged();
            }
        }
        private global::System.Boolean _IsConsideredByNSM;
        partial void OnIsConsideredByNSMChanging(global::System.Boolean value);
        partial void OnIsConsideredByNSMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndentCode
        {
            get
            {
                return _IndentCode;
            }
            set
            {
                OnIndentCodeChanging(value);
                ReportPropertyChanging("IndentCode");
                _IndentCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IndentCode");
                OnIndentCodeChanged();
            }
        }
        private global::System.String _IndentCode;
        partial void OnIndentCodeChanging(global::System.String value);
        partial void OnIndentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ForwardedToInventoryId
        {
            get
            {
                return _ForwardedToInventoryId;
            }
            set
            {
                OnForwardedToInventoryIdChanging(value);
                ReportPropertyChanging("ForwardedToInventoryId");
                _ForwardedToInventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForwardedToInventoryId");
                OnForwardedToInventoryIdChanged();
            }
        }
        private global::System.Int64 _ForwardedToInventoryId;
        partial void OnForwardedToInventoryIdChanging(global::System.Int64 value);
        partial void OnForwardedToInventoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_IndentBill", "Bill")]
        public EntityCollection<Bill> Bills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("IspahaniAgroLTDModel.FK_IndentBill", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("IspahaniAgroLTDModel.FK_IndentBill", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerPlacesIndent", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerPlacesIndent", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerPlacesIndent", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerPlacesIndent", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerPlacesIndent", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RMVerifiesIndent", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_RMVerifiesIndent", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_RMVerifiesIndent", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_RMVerifiesIndent", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_RMVerifiesIndent", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_IndentProductInfoIndent", "IndentProductInfo")]
        public EntityCollection<IndentProductInfo> IndentProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IndentProductInfo>("IspahaniAgroLTDModel.FK_IndentProductInfoIndent", "IndentProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IndentProductInfo>("IspahaniAgroLTDModel.FK_IndentProductInfoIndent", "IndentProductInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="IndentProductInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IndentProductInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IndentProductInfo object.
        /// </summary>
        /// <param name="indentId">Initial value of the IndentId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="productPrice">Initial value of the ProductPrice property.</param>
        /// <param name="productQuantity">Initial value of the ProductQuantity property.</param>
        /// <param name="editTime">Initial value of the EditTime property.</param>
        /// <param name="commissionPercentage">Initial value of the CommissionPercentage property.</param>
        public static IndentProductInfo CreateIndentProductInfo(global::System.Int64 indentId, global::System.Int64 productId, global::System.Double productPrice, global::System.Double productQuantity, global::System.DateTime editTime, global::System.Double commissionPercentage)
        {
            IndentProductInfo indentProductInfo = new IndentProductInfo();
            indentProductInfo.IndentId = indentId;
            indentProductInfo.ProductId = productId;
            indentProductInfo.ProductPrice = productPrice;
            indentProductInfo.ProductQuantity = productQuantity;
            indentProductInfo.EditTime = editTime;
            indentProductInfo.CommissionPercentage = commissionPercentage;
            return indentProductInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IndentId
        {
            get
            {
                return _IndentId;
            }
            set
            {
                if (_IndentId != value)
                {
                    OnIndentIdChanging(value);
                    ReportPropertyChanging("IndentId");
                    _IndentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndentId");
                    OnIndentIdChanged();
                }
            }
        }
        private global::System.Int64 _IndentId;
        partial void OnIndentIdChanging(global::System.Int64 value);
        partial void OnIndentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductPrice
        {
            get
            {
                return _ProductPrice;
            }
            set
            {
                OnProductPriceChanging(value);
                ReportPropertyChanging("ProductPrice");
                _ProductPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPrice");
                OnProductPriceChanged();
            }
        }
        private global::System.Double _ProductPrice;
        partial void OnProductPriceChanging(global::System.Double value);
        partial void OnProductPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductQuantity
        {
            get
            {
                return _ProductQuantity;
            }
            set
            {
                OnProductQuantityChanging(value);
                ReportPropertyChanging("ProductQuantity");
                _ProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductQuantity");
                OnProductQuantityChanged();
            }
        }
        private global::System.Double _ProductQuantity;
        partial void OnProductQuantityChanging(global::System.Double value);
        partial void OnProductQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EditTime
        {
            get
            {
                return _EditTime;
            }
            set
            {
                OnEditTimeChanging(value);
                ReportPropertyChanging("EditTime");
                _EditTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditTime");
                OnEditTimeChanged();
            }
        }
        private global::System.DateTime _EditTime;
        partial void OnEditTimeChanging(global::System.DateTime value);
        partial void OnEditTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CommissionPercentage
        {
            get
            {
                return _CommissionPercentage;
            }
            set
            {
                OnCommissionPercentageChanging(value);
                ReportPropertyChanging("CommissionPercentage");
                _CommissionPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionPercentage");
                OnCommissionPercentageChanged();
            }
        }
        private global::System.Double _CommissionPercentage;
        partial void OnCommissionPercentageChanging(global::System.Double value);
        partial void OnCommissionPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ProductQuantityByRM
        {
            get
            {
                return _ProductQuantityByRM;
            }
            set
            {
                OnProductQuantityByRMChanging(value);
                ReportPropertyChanging("ProductQuantityByRM");
                _ProductQuantityByRM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductQuantityByRM");
                OnProductQuantityByRMChanged();
            }
        }
        private Nullable<global::System.Double> _ProductQuantityByRM;
        partial void OnProductQuantityByRMChanging(Nullable<global::System.Double> value);
        partial void OnProductQuantityByRMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ProductQuantityBySIC
        {
            get
            {
                return _ProductQuantityBySIC;
            }
            set
            {
                OnProductQuantityBySICChanging(value);
                ReportPropertyChanging("ProductQuantityBySIC");
                _ProductQuantityBySIC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductQuantityBySIC");
                OnProductQuantityBySICChanged();
            }
        }
        private Nullable<global::System.Double> _ProductQuantityBySIC;
        partial void OnProductQuantityBySICChanging(Nullable<global::System.Double> value);
        partial void OnProductQuantityBySICChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EditTimeRM
        {
            get
            {
                return _EditTimeRM;
            }
            set
            {
                OnEditTimeRMChanging(value);
                ReportPropertyChanging("EditTimeRM");
                _EditTimeRM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditTimeRM");
                OnEditTimeRMChanged();
            }
        }
        private Nullable<global::System.DateTime> _EditTimeRM;
        partial void OnEditTimeRMChanging(Nullable<global::System.DateTime> value);
        partial void OnEditTimeRMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EditTimeSIC
        {
            get
            {
                return _EditTimeSIC;
            }
            set
            {
                OnEditTimeSICChanging(value);
                ReportPropertyChanging("EditTimeSIC");
                _EditTimeSIC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditTimeSIC");
                OnEditTimeSICChanged();
            }
        }
        private Nullable<global::System.DateTime> _EditTimeSIC;
        partial void OnEditTimeSICChanging(Nullable<global::System.DateTime> value);
        partial void OnEditTimeSICChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_IndentProductInfoIndent", "Indent")]
        public Indent Indent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentProductInfoIndent", "Indent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentProductInfoIndent", "Indent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Indent> IndentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentProductInfoIndent", "Indent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Indent>("IspahaniAgroLTDModel.FK_IndentProductInfoIndent", "Indent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_IndentProductInfoProduct", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_IndentProductInfoProduct", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_IndentProductInfoProduct", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_IndentProductInfoProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_IndentProductInfoProduct", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="storeInChargeId">Initial value of the StoreInChargeId property.</param>
        /// <param name="dispatchOfficerId">Initial value of the DispatchOfficerId property.</param>
        /// <param name="inventoryName">Initial value of the InventoryName property.</param>
        /// <param name="inventoryAddress">Initial value of the InventoryAddress property.</param>
        /// <param name="dateOfEstablished">Initial value of the DateOfEstablished property.</param>
        public static Inventory CreateInventory(global::System.Int64 inventoryId, global::System.Int64 regionId, global::System.Int64 storeInChargeId, global::System.Int64 dispatchOfficerId, global::System.String inventoryName, global::System.String inventoryAddress, global::System.DateTime dateOfEstablished)
        {
            Inventory inventory = new Inventory();
            inventory.InventoryId = inventoryId;
            inventory.RegionId = regionId;
            inventory.StoreInChargeId = storeInChargeId;
            inventory.DispatchOfficerId = dispatchOfficerId;
            inventory.InventoryName = inventoryName;
            inventory.InventoryAddress = inventoryAddress;
            inventory.DateOfEstablished = dateOfEstablished;
            return inventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                if (_InventoryId != value)
                {
                    OnInventoryIdChanging(value);
                    ReportPropertyChanging("InventoryId");
                    _InventoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryId");
                    OnInventoryIdChanged();
                }
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int64 _RegionId;
        partial void OnRegionIdChanging(global::System.Int64 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StoreInChargeId
        {
            get
            {
                return _StoreInChargeId;
            }
            set
            {
                OnStoreInChargeIdChanging(value);
                ReportPropertyChanging("StoreInChargeId");
                _StoreInChargeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreInChargeId");
                OnStoreInChargeIdChanged();
            }
        }
        private global::System.Int64 _StoreInChargeId;
        partial void OnStoreInChargeIdChanging(global::System.Int64 value);
        partial void OnStoreInChargeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DispatchOfficerId
        {
            get
            {
                return _DispatchOfficerId;
            }
            set
            {
                OnDispatchOfficerIdChanging(value);
                ReportPropertyChanging("DispatchOfficerId");
                _DispatchOfficerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DispatchOfficerId");
                OnDispatchOfficerIdChanged();
            }
        }
        private global::System.Int64 _DispatchOfficerId;
        partial void OnDispatchOfficerIdChanging(global::System.Int64 value);
        partial void OnDispatchOfficerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InventoryName
        {
            get
            {
                return _InventoryName;
            }
            set
            {
                OnInventoryNameChanging(value);
                ReportPropertyChanging("InventoryName");
                _InventoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InventoryName");
                OnInventoryNameChanged();
            }
        }
        private global::System.String _InventoryName;
        partial void OnInventoryNameChanging(global::System.String value);
        partial void OnInventoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InventoryAddress
        {
            get
            {
                return _InventoryAddress;
            }
            set
            {
                OnInventoryAddressChanging(value);
                ReportPropertyChanging("InventoryAddress");
                _InventoryAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InventoryAddress");
                OnInventoryAddressChanged();
            }
        }
        private global::System.String _InventoryAddress;
        partial void OnInventoryAddressChanging(global::System.String value);
        partial void OnInventoryAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfEstablished
        {
            get
            {
                return _DateOfEstablished;
            }
            set
            {
                OnDateOfEstablishedChanging(value);
                ReportPropertyChanging("DateOfEstablished");
                _DateOfEstablished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfEstablished");
                OnDateOfEstablishedChanged();
            }
        }
        private global::System.DateTime _DateOfEstablished;
        partial void OnDateOfEstablishedChanging(global::System.DateTime value);
        partial void OnDateOfEstablishedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeInventory", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeInventory1", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory1", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory1", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeInventory1", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryLog", "InventoryLog")]
        public EntityCollection<InventoryLog> InventoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryLog>("IspahaniAgroLTDModel.FK_InventoryInventoryLog", "InventoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryLog>("IspahaniAgroLTDModel.FK_InventoryInventoryLog", "InventoryLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryPackageInfo", "InventoryPackageInfo")]
        public EntityCollection<InventoryPackageInfo> InventoryPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryPackageInfo>("IspahaniAgroLTDModel.FK_InventoryInventoryPackageInfo", "InventoryPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryPackageInfo>("IspahaniAgroLTDModel.FK_InventoryInventoryPackageInfo", "InventoryPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryProductInfo", "InventoryProductInfo")]
        public EntityCollection<InventoryProductInfo> InventoryProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryProductInfo>("IspahaniAgroLTDModel.FK_InventoryInventoryProductInfo", "InventoryProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryProductInfo>("IspahaniAgroLTDModel.FK_InventoryInventoryProductInfo", "InventoryProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryMRR", "MRR")]
        public EntityCollection<MRR> MRRs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRR>("IspahaniAgroLTDModel.FK_InventoryMRR", "MRR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRR>("IspahaniAgroLTDModel.FK_InventoryMRR", "MRR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryPLR", "PLR")]
        public EntityCollection<PLR> PLRs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLR>("IspahaniAgroLTDModel.FK_InventoryPLR", "PLR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLR>("IspahaniAgroLTDModel.FK_InventoryPLR", "PLR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryRequisition", "Requisition")]
        public EntityCollection<Requisition> Requisitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Requisition>("IspahaniAgroLTDModel.FK_InventoryRequisition", "Requisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Requisition>("IspahaniAgroLTDModel.FK_InventoryRequisition", "Requisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventorySalesReturns", "SalesReturn")]
        public EntityCollection<SalesReturn> SalesReturns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesReturn>("IspahaniAgroLTDModel.FK_InventorySalesReturns", "SalesReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesReturn>("IspahaniAgroLTDModel.FK_InventorySalesReturns", "SalesReturn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryTransferIndents", "TransferIndent")]
        public EntityCollection<TransferIndent> TransferIndents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferIndent>("IspahaniAgroLTDModel.FK_InventoryTransferIndents", "TransferIndent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferIndent>("IspahaniAgroLTDModel.FK_InventoryTransferIndents", "TransferIndent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryYearSummaryInventoryPackage", "YearSummaryInventoryPackage")]
        public EntityCollection<YearSummaryInventoryPackage> YearSummaryInventoryPackages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryInventoryPackage>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryPackage", "YearSummaryInventoryPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryInventoryPackage>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryPackage", "YearSummaryInventoryPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryYearSummaryInventoryProduct", "YearSummaryInventoryProduct")]
        public EntityCollection<YearSummaryInventoryProduct> YearSummaryInventoryProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryInventoryProduct>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryProduct", "YearSummaryInventoryProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryInventoryProduct>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryProduct", "YearSummaryInventoryProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferSendInventory", "ProductTransfer")]
        public EntityCollection<ProductTransfer> ProductTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferSendInventory", "ProductTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferSendInventory", "ProductTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RegionInventory", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionInventory", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionInventory", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionInventory", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionInventory", "Region", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="InventoryLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryLog object.
        /// </summary>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="method">Initial value of the Method property.</param>
        /// <param name="memoNo">Initial value of the MemoNo property.</param>
        /// <param name="productQuantity">Initial value of the ProductQuantity property.</param>
        /// <param name="productCost">Initial value of the ProductCost property.</param>
        /// <param name="inventoryLogId">Initial value of the InventoryLogId property.</param>
        public static InventoryLog CreateInventoryLog(global::System.DateTime date, global::System.Int64 productId, global::System.Int64 inventoryId, global::System.String lotId, global::System.String method, global::System.Int64 memoNo, global::System.Double productQuantity, global::System.Double productCost, global::System.Int64 inventoryLogId)
        {
            InventoryLog inventoryLog = new InventoryLog();
            inventoryLog.Date = date;
            inventoryLog.ProductId = productId;
            inventoryLog.InventoryId = inventoryId;
            inventoryLog.LotId = lotId;
            inventoryLog.Method = method;
            inventoryLog.MemoNo = memoNo;
            inventoryLog.ProductQuantity = productQuantity;
            inventoryLog.ProductCost = productCost;
            inventoryLog.InventoryLogId = inventoryLogId;
            return inventoryLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                OnInventoryIdChanging(value);
                ReportPropertyChanging("InventoryId");
                _InventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryId");
                OnInventoryIdChanged();
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                OnLotIdChanging(value);
                ReportPropertyChanging("LotId");
                _LotId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LotId");
                OnLotIdChanged();
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MemoNo
        {
            get
            {
                return _MemoNo;
            }
            set
            {
                OnMemoNoChanging(value);
                ReportPropertyChanging("MemoNo");
                _MemoNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemoNo");
                OnMemoNoChanged();
            }
        }
        private global::System.Int64 _MemoNo;
        partial void OnMemoNoChanging(global::System.Int64 value);
        partial void OnMemoNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductQuantity
        {
            get
            {
                return _ProductQuantity;
            }
            set
            {
                OnProductQuantityChanging(value);
                ReportPropertyChanging("ProductQuantity");
                _ProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductQuantity");
                OnProductQuantityChanged();
            }
        }
        private global::System.Double _ProductQuantity;
        partial void OnProductQuantityChanging(global::System.Double value);
        partial void OnProductQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductCost
        {
            get
            {
                return _ProductCost;
            }
            set
            {
                OnProductCostChanging(value);
                ReportPropertyChanging("ProductCost");
                _ProductCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCost");
                OnProductCostChanged();
            }
        }
        private global::System.Double _ProductCost;
        partial void OnProductCostChanging(global::System.Double value);
        partial void OnProductCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryLogId
        {
            get
            {
                return _InventoryLogId;
            }
            set
            {
                if (_InventoryLogId != value)
                {
                    OnInventoryLogIdChanging(value);
                    ReportPropertyChanging("InventoryLogId");
                    _InventoryLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryLogId");
                    OnInventoryLogIdChanged();
                }
            }
        }
        private global::System.Int64 _InventoryLogId;
        partial void OnInventoryLogIdChanging(global::System.Int64 value);
        partial void OnInventoryLogIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryLog", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryLog", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryLog", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryLog", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryLog", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductInventoryLog", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryLog", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryLog", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryLog", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryLog", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="InventoryPackageInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryPackageInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryPackageInfo object.
        /// </summary>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="packageId">Initial value of the PackageId property.</param>
        /// <param name="unfinishedQuantity">Initial value of the UnfinishedQuantity property.</param>
        /// <param name="onProcessingQuantity">Initial value of the OnProcessingQuantity property.</param>
        /// <param name="finishedQuantity">Initial value of the FinishedQuantity property.</param>
        public static InventoryPackageInfo CreateInventoryPackageInfo(global::System.Int64 inventoryId, global::System.Int64 packageId, global::System.Double unfinishedQuantity, global::System.Double onProcessingQuantity, global::System.Double finishedQuantity)
        {
            InventoryPackageInfo inventoryPackageInfo = new InventoryPackageInfo();
            inventoryPackageInfo.InventoryId = inventoryId;
            inventoryPackageInfo.PackageId = packageId;
            inventoryPackageInfo.UnfinishedQuantity = unfinishedQuantity;
            inventoryPackageInfo.OnProcessingQuantity = onProcessingQuantity;
            inventoryPackageInfo.FinishedQuantity = finishedQuantity;
            return inventoryPackageInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                if (_InventoryId != value)
                {
                    OnInventoryIdChanging(value);
                    ReportPropertyChanging("InventoryId");
                    _InventoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryId");
                    OnInventoryIdChanged();
                }
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PackageId
        {
            get
            {
                return _PackageId;
            }
            set
            {
                if (_PackageId != value)
                {
                    OnPackageIdChanging(value);
                    ReportPropertyChanging("PackageId");
                    _PackageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageId");
                    OnPackageIdChanged();
                }
            }
        }
        private global::System.Int64 _PackageId;
        partial void OnPackageIdChanging(global::System.Int64 value);
        partial void OnPackageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnfinishedQuantity
        {
            get
            {
                return _UnfinishedQuantity;
            }
            set
            {
                OnUnfinishedQuantityChanging(value);
                ReportPropertyChanging("UnfinishedQuantity");
                _UnfinishedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnfinishedQuantity");
                OnUnfinishedQuantityChanged();
            }
        }
        private global::System.Double _UnfinishedQuantity;
        partial void OnUnfinishedQuantityChanging(global::System.Double value);
        partial void OnUnfinishedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OnProcessingQuantity
        {
            get
            {
                return _OnProcessingQuantity;
            }
            set
            {
                OnOnProcessingQuantityChanging(value);
                ReportPropertyChanging("OnProcessingQuantity");
                _OnProcessingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnProcessingQuantity");
                OnOnProcessingQuantityChanged();
            }
        }
        private global::System.Double _OnProcessingQuantity;
        partial void OnOnProcessingQuantityChanging(global::System.Double value);
        partial void OnOnProcessingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FinishedQuantity
        {
            get
            {
                return _FinishedQuantity;
            }
            set
            {
                OnFinishedQuantityChanging(value);
                ReportPropertyChanging("FinishedQuantity");
                _FinishedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishedQuantity");
                OnFinishedQuantityChanged();
            }
        }
        private global::System.Double _FinishedQuantity;
        partial void OnFinishedQuantityChanging(global::System.Double value);
        partial void OnFinishedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> UnitCost
        {
            get
            {
                return _UnitCost;
            }
            set
            {
                OnUnitCostChanging(value);
                ReportPropertyChanging("UnitCost");
                _UnitCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitCost");
                OnUnitCostChanged();
            }
        }
        private Nullable<global::System.Double> _UnitCost;
        partial void OnUnitCostChanging(Nullable<global::System.Double> value);
        partial void OnUnitCostChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryPackageInfo", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryPackageInfo", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryPackageInfo", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryPackageInfo", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryPackageInfo", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageInventoryPackageInfo", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageInventoryPackageInfo", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageInventoryPackageInfo", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageInventoryPackageInfo", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageInventoryPackageInfo", "Package", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="InventoryProductInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryProductInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryProductInfo object.
        /// </summary>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="unfinishedQuantity">Initial value of the UnfinishedQuantity property.</param>
        /// <param name="onProcessingQuantity">Initial value of the OnProcessingQuantity property.</param>
        /// <param name="finishedQuantity">Initial value of the FinishedQuantity property.</param>
        public static InventoryProductInfo CreateInventoryProductInfo(global::System.Int64 inventoryId, global::System.Int64 productId, global::System.String lotId, global::System.Double unfinishedQuantity, global::System.Double onProcessingQuantity, global::System.Double finishedQuantity)
        {
            InventoryProductInfo inventoryProductInfo = new InventoryProductInfo();
            inventoryProductInfo.InventoryId = inventoryId;
            inventoryProductInfo.ProductId = productId;
            inventoryProductInfo.LotId = lotId;
            inventoryProductInfo.UnfinishedQuantity = unfinishedQuantity;
            inventoryProductInfo.OnProcessingQuantity = onProcessingQuantity;
            inventoryProductInfo.FinishedQuantity = finishedQuantity;
            return inventoryProductInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                if (_InventoryId != value)
                {
                    OnInventoryIdChanging(value);
                    ReportPropertyChanging("InventoryId");
                    _InventoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryId");
                    OnInventoryIdChanged();
                }
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnfinishedQuantity
        {
            get
            {
                return _UnfinishedQuantity;
            }
            set
            {
                OnUnfinishedQuantityChanging(value);
                ReportPropertyChanging("UnfinishedQuantity");
                _UnfinishedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnfinishedQuantity");
                OnUnfinishedQuantityChanged();
            }
        }
        private global::System.Double _UnfinishedQuantity;
        partial void OnUnfinishedQuantityChanging(global::System.Double value);
        partial void OnUnfinishedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OnProcessingQuantity
        {
            get
            {
                return _OnProcessingQuantity;
            }
            set
            {
                OnOnProcessingQuantityChanging(value);
                ReportPropertyChanging("OnProcessingQuantity");
                _OnProcessingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnProcessingQuantity");
                OnOnProcessingQuantityChanged();
            }
        }
        private global::System.Double _OnProcessingQuantity;
        partial void OnOnProcessingQuantityChanging(global::System.Double value);
        partial void OnOnProcessingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FinishedQuantity
        {
            get
            {
                return _FinishedQuantity;
            }
            set
            {
                OnFinishedQuantityChanging(value);
                ReportPropertyChanging("FinishedQuantity");
                _FinishedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishedQuantity");
                OnFinishedQuantityChanged();
            }
        }
        private global::System.Double _FinishedQuantity;
        partial void OnFinishedQuantityChanging(global::System.Double value);
        partial void OnFinishedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> UnitLotCost
        {
            get
            {
                return _UnitLotCost;
            }
            set
            {
                OnUnitLotCostChanging(value);
                ReportPropertyChanging("UnitLotCost");
                _UnitLotCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitLotCost");
                OnUnitLotCostChanged();
            }
        }
        private Nullable<global::System.Double> _UnitLotCost;
        partial void OnUnitLotCostChanging(Nullable<global::System.Double> value);
        partial void OnUnitLotCostChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryInventoryProductInfo", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryProductInfo", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryProductInfo", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryProductInfo", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryInventoryProductInfo", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductInventoryProductInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryProductInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryProductInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryProductInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductInventoryProductInfo", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Ledger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ledger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ledger object.
        /// </summary>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="method">Initial value of the Method property.</param>
        /// <param name="isDealerOrEmployee">Initial value of the IsDealerOrEmployee property.</param>
        /// <param name="isDebitOrCredit">Initial value of the IsDebitOrCredit property.</param>
        /// <param name="partyId">Initial value of the PartyId property.</param>
        /// <param name="memoNo">Initial value of the MemoNo property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="productQuantity">Initial value of the ProductQuantity property.</param>
        /// <param name="creditAmount">Initial value of the CreditAmount property.</param>
        /// <param name="ledgerId">Initial value of the LedgerId property.</param>
        public static Ledger CreateLedger(global::System.DateTime date, global::System.String method, global::System.Boolean isDealerOrEmployee, global::System.Boolean isDebitOrCredit, global::System.Int64 partyId, global::System.String memoNo, global::System.Int64 productId, global::System.Double productQuantity, global::System.Double creditAmount, global::System.Int64 ledgerId)
        {
            Ledger ledger = new Ledger();
            ledger.Date = date;
            ledger.Method = method;
            ledger.IsDealerOrEmployee = isDealerOrEmployee;
            ledger.IsDebitOrCredit = isDebitOrCredit;
            ledger.PartyId = partyId;
            ledger.MemoNo = memoNo;
            ledger.ProductId = productId;
            ledger.ProductQuantity = productQuantity;
            ledger.CreditAmount = creditAmount;
            ledger.LedgerId = ledgerId;
            return ledger;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDealerOrEmployee
        {
            get
            {
                return _IsDealerOrEmployee;
            }
            set
            {
                OnIsDealerOrEmployeeChanging(value);
                ReportPropertyChanging("IsDealerOrEmployee");
                _IsDealerOrEmployee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDealerOrEmployee");
                OnIsDealerOrEmployeeChanged();
            }
        }
        private global::System.Boolean _IsDealerOrEmployee;
        partial void OnIsDealerOrEmployeeChanging(global::System.Boolean value);
        partial void OnIsDealerOrEmployeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDebitOrCredit
        {
            get
            {
                return _IsDebitOrCredit;
            }
            set
            {
                OnIsDebitOrCreditChanging(value);
                ReportPropertyChanging("IsDebitOrCredit");
                _IsDebitOrCredit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDebitOrCredit");
                OnIsDebitOrCreditChanged();
            }
        }
        private global::System.Boolean _IsDebitOrCredit;
        partial void OnIsDebitOrCreditChanging(global::System.Boolean value);
        partial void OnIsDebitOrCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PartyId
        {
            get
            {
                return _PartyId;
            }
            set
            {
                OnPartyIdChanging(value);
                ReportPropertyChanging("PartyId");
                _PartyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartyId");
                OnPartyIdChanged();
            }
        }
        private global::System.Int64 _PartyId;
        partial void OnPartyIdChanging(global::System.Int64 value);
        partial void OnPartyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemoNo
        {
            get
            {
                return _MemoNo;
            }
            set
            {
                OnMemoNoChanging(value);
                ReportPropertyChanging("MemoNo");
                _MemoNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MemoNo");
                OnMemoNoChanged();
            }
        }
        private global::System.String _MemoNo;
        partial void OnMemoNoChanging(global::System.String value);
        partial void OnMemoNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductQuantity
        {
            get
            {
                return _ProductQuantity;
            }
            set
            {
                OnProductQuantityChanging(value);
                ReportPropertyChanging("ProductQuantity");
                _ProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductQuantity");
                OnProductQuantityChanged();
            }
        }
        private global::System.Double _ProductQuantity;
        partial void OnProductQuantityChanging(global::System.Double value);
        partial void OnProductQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CreditAmount
        {
            get
            {
                return _CreditAmount;
            }
            set
            {
                OnCreditAmountChanging(value);
                ReportPropertyChanging("CreditAmount");
                _CreditAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditAmount");
                OnCreditAmountChanged();
            }
        }
        private global::System.Double _CreditAmount;
        partial void OnCreditAmountChanging(global::System.Double value);
        partial void OnCreditAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LedgerId
        {
            get
            {
                return _LedgerId;
            }
            set
            {
                if (_LedgerId != value)
                {
                    OnLedgerIdChanging(value);
                    ReportPropertyChanging("LedgerId");
                    _LedgerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LedgerId");
                    OnLedgerIdChanged();
                }
            }
        }
        private global::System.Int64 _LedgerId;
        partial void OnLedgerIdChanging(global::System.Int64 value);
        partial void OnLedgerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductLedger", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductLedger", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductLedger", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductLedger", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductLedger", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        public static Message CreateMessage(global::System.Int64 messageId, global::System.String messageType, global::System.String subject, global::System.String body)
        {
            Message message = new Message();
            message.MessageId = messageId;
            message.MessageType = messageType;
            message.Subject = subject;
            message.Body = body;
            return message;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int64 _MessageId;
        partial void OnMessageIdChanging(global::System.Int64 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                OnMessageTypeChanging(value);
                ReportPropertyChanging("MessageType");
                _MessageType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageType");
                OnMessageTypeChanged();
            }
        }
        private global::System.String _MessageType;
        partial void OnMessageTypeChanging(global::System.String value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MessageDeliveryMessage", "MessageDelivery")]
        public EntityCollection<MessageDelivery> MessageDeliveries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageDelivery>("IspahaniAgroLTDModel.FK_MessageDeliveryMessage", "MessageDelivery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageDelivery>("IspahaniAgroLTDModel.FK_MessageDeliveryMessage", "MessageDelivery", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="MessageDelivery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageDelivery : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageDelivery object.
        /// </summary>
        /// <param name="officeCode">Initial value of the OfficeCode property.</param>
        /// <param name="sendFromId">Initial value of the SendFromId property.</param>
        /// <param name="sendToId">Initial value of the SendToId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        public static MessageDelivery CreateMessageDelivery(global::System.String officeCode, global::System.Int64 sendFromId, global::System.Int64 sendToId, global::System.DateTime dateOfIssue, global::System.Int64 messageId)
        {
            MessageDelivery messageDelivery = new MessageDelivery();
            messageDelivery.OfficeCode = officeCode;
            messageDelivery.SendFromId = sendFromId;
            messageDelivery.SendToId = sendToId;
            messageDelivery.DateOfIssue = dateOfIssue;
            messageDelivery.MessageId = messageId;
            return messageDelivery;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OfficeCode
        {
            get
            {
                return _OfficeCode;
            }
            set
            {
                if (_OfficeCode != value)
                {
                    OnOfficeCodeChanging(value);
                    ReportPropertyChanging("OfficeCode");
                    _OfficeCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OfficeCode");
                    OnOfficeCodeChanged();
                }
            }
        }
        private global::System.String _OfficeCode;
        partial void OnOfficeCodeChanging(global::System.String value);
        partial void OnOfficeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SendFromId
        {
            get
            {
                return _SendFromId;
            }
            set
            {
                OnSendFromIdChanging(value);
                ReportPropertyChanging("SendFromId");
                _SendFromId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendFromId");
                OnSendFromIdChanged();
            }
        }
        private global::System.Int64 _SendFromId;
        partial void OnSendFromIdChanging(global::System.Int64 value);
        partial void OnSendFromIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SendToId
        {
            get
            {
                return _SendToId;
            }
            set
            {
                OnSendToIdChanging(value);
                ReportPropertyChanging("SendToId");
                _SendToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendToId");
                OnSendToIdChanged();
            }
        }
        private global::System.Int64 _SendToId;
        partial void OnSendToIdChanging(global::System.Int64 value);
        partial void OnSendToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                OnMessageIdChanging(value);
                ReportPropertyChanging("MessageId");
                _MessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageId");
                OnMessageIdChanged();
            }
        }
        private global::System.Int64 _MessageId;
        partial void OnMessageIdChanging(global::System.Int64 value);
        partial void OnMessageIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeMessageDelivery", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMessageDelivery", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMessageDelivery", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMessageDelivery", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMessageDelivery", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MessageDeliveryEmployee", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_MessageDeliveryEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_MessageDeliveryEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_MessageDeliveryEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_MessageDeliveryEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MessageDeliveryMessage", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("IspahaniAgroLTDModel.FK_MessageDeliveryMessage", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("IspahaniAgroLTDModel.FK_MessageDeliveryMessage", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("IspahaniAgroLTDModel.FK_MessageDeliveryMessage", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("IspahaniAgroLTDModel.FK_MessageDeliveryMessage", "Message", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="MRR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MRR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MRR object.
        /// </summary>
        /// <param name="mRRId">Initial value of the MRRId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="issuedById">Initial value of the IssuedById property.</param>
        /// <param name="issuedToId">Initial value of the IssuedToId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="dateOfApproval">Initial value of the DateOfApproval property.</param>
        /// <param name="purchaseOrderNo">Initial value of the PurchaseOrderNo property.</param>
        /// <param name="challanNo">Initial value of the ChallanNo property.</param>
        /// <param name="wing">Initial value of the Wing property.</param>
        /// <param name="retailerName">Initial value of the RetailerName property.</param>
        /// <param name="mRRType">Initial value of the MRRType property.</param>
        public static MRR CreateMRR(global::System.Int64 mRRId, global::System.DateTime dateOfIssue, global::System.Int64 inventoryId, global::System.Int64 issuedById, global::System.Int64 issuedToId, global::System.String status, global::System.DateTime dateOfApproval, global::System.String purchaseOrderNo, global::System.String challanNo, global::System.String wing, global::System.String retailerName, global::System.String mRRType)
        {
            MRR mRR = new MRR();
            mRR.MRRId = mRRId;
            mRR.DateOfIssue = dateOfIssue;
            mRR.InventoryId = inventoryId;
            mRR.IssuedById = issuedById;
            mRR.IssuedToId = issuedToId;
            mRR.Status = status;
            mRR.DateOfApproval = dateOfApproval;
            mRR.PurchaseOrderNo = purchaseOrderNo;
            mRR.ChallanNo = challanNo;
            mRR.Wing = wing;
            mRR.RetailerName = retailerName;
            mRR.MRRType = mRRType;
            return mRR;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MRRId
        {
            get
            {
                return _MRRId;
            }
            set
            {
                if (_MRRId != value)
                {
                    OnMRRIdChanging(value);
                    ReportPropertyChanging("MRRId");
                    _MRRId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MRRId");
                    OnMRRIdChanged();
                }
            }
        }
        private global::System.Int64 _MRRId;
        partial void OnMRRIdChanging(global::System.Int64 value);
        partial void OnMRRIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                OnInventoryIdChanging(value);
                ReportPropertyChanging("InventoryId");
                _InventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryId");
                OnInventoryIdChanged();
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedById
        {
            get
            {
                return _IssuedById;
            }
            set
            {
                OnIssuedByIdChanging(value);
                ReportPropertyChanging("IssuedById");
                _IssuedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedById");
                OnIssuedByIdChanged();
            }
        }
        private global::System.Int64 _IssuedById;
        partial void OnIssuedByIdChanging(global::System.Int64 value);
        partial void OnIssuedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedToId
        {
            get
            {
                return _IssuedToId;
            }
            set
            {
                OnIssuedToIdChanging(value);
                ReportPropertyChanging("IssuedToId");
                _IssuedToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedToId");
                OnIssuedToIdChanged();
            }
        }
        private global::System.Int64 _IssuedToId;
        partial void OnIssuedToIdChanging(global::System.Int64 value);
        partial void OnIssuedToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfApproval
        {
            get
            {
                return _DateOfApproval;
            }
            set
            {
                OnDateOfApprovalChanging(value);
                ReportPropertyChanging("DateOfApproval");
                _DateOfApproval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfApproval");
                OnDateOfApprovalChanged();
            }
        }
        private global::System.DateTime _DateOfApproval;
        partial void OnDateOfApprovalChanging(global::System.DateTime value);
        partial void OnDateOfApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MRRCode
        {
            get
            {
                return _MRRCode;
            }
            set
            {
                OnMRRCodeChanging(value);
                ReportPropertyChanging("MRRCode");
                _MRRCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MRRCode");
                OnMRRCodeChanged();
            }
        }
        private global::System.String _MRRCode;
        partial void OnMRRCodeChanging(global::System.String value);
        partial void OnMRRCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PurchaseOrderNo
        {
            get
            {
                return _PurchaseOrderNo;
            }
            set
            {
                OnPurchaseOrderNoChanging(value);
                ReportPropertyChanging("PurchaseOrderNo");
                _PurchaseOrderNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PurchaseOrderNo");
                OnPurchaseOrderNoChanged();
            }
        }
        private global::System.String _PurchaseOrderNo;
        partial void OnPurchaseOrderNoChanging(global::System.String value);
        partial void OnPurchaseOrderNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChallanNo
        {
            get
            {
                return _ChallanNo;
            }
            set
            {
                OnChallanNoChanging(value);
                ReportPropertyChanging("ChallanNo");
                _ChallanNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChallanNo");
                OnChallanNoChanged();
            }
        }
        private global::System.String _ChallanNo;
        partial void OnChallanNoChanging(global::System.String value);
        partial void OnChallanNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Wing
        {
            get
            {
                return _Wing;
            }
            set
            {
                OnWingChanging(value);
                ReportPropertyChanging("Wing");
                _Wing = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Wing");
                OnWingChanged();
            }
        }
        private global::System.String _Wing;
        partial void OnWingChanging(global::System.String value);
        partial void OnWingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RetailerName
        {
            get
            {
                return _RetailerName;
            }
            set
            {
                OnRetailerNameChanging(value);
                ReportPropertyChanging("RetailerName");
                _RetailerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RetailerName");
                OnRetailerNameChanged();
            }
        }
        private global::System.String _RetailerName;
        partial void OnRetailerNameChanging(global::System.String value);
        partial void OnRetailerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MRRType
        {
            get
            {
                return _MRRType;
            }
            set
            {
                OnMRRTypeChanging(value);
                ReportPropertyChanging("MRRType");
                _MRRType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MRRType");
                OnMRRTypeChanged();
            }
        }
        private global::System.String _MRRType;
        partial void OnMRRTypeChanging(global::System.String value);
        partial void OnMRRTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeMRR", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMRR", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMRR", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMRR", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeMRR", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryMRR", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryMRR", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryMRR", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryMRR", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryMRR", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MRRMRRPackageInfo", "MRRPackageInfo")]
        public EntityCollection<MRRPackageInfo> MRRPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRRPackageInfo>("IspahaniAgroLTDModel.FK_MRRMRRPackageInfo", "MRRPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRRPackageInfo>("IspahaniAgroLTDModel.FK_MRRMRRPackageInfo", "MRRPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MRRMRRProductInfo", "MRRProductInfo")]
        public EntityCollection<MRRProductInfo> MRRProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRRProductInfo>("IspahaniAgroLTDModel.FK_MRRMRRProductInfo", "MRRProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRRProductInfo>("IspahaniAgroLTDModel.FK_MRRMRRProductInfo", "MRRProductInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="MRRPackageInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MRRPackageInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MRRPackageInfo object.
        /// </summary>
        /// <param name="mRRId">Initial value of the MRRId property.</param>
        /// <param name="packageId">Initial value of the PackageId property.</param>
        /// <param name="placedQuantity">Initial value of the PlacedQuantity property.</param>
        /// <param name="acceptedQuantity">Initial value of the AcceptedQuantity property.</param>
        public static MRRPackageInfo CreateMRRPackageInfo(global::System.Int64 mRRId, global::System.Int64 packageId, global::System.Double placedQuantity, global::System.Double acceptedQuantity)
        {
            MRRPackageInfo mRRPackageInfo = new MRRPackageInfo();
            mRRPackageInfo.MRRId = mRRId;
            mRRPackageInfo.PackageId = packageId;
            mRRPackageInfo.PlacedQuantity = placedQuantity;
            mRRPackageInfo.AcceptedQuantity = acceptedQuantity;
            return mRRPackageInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MRRId
        {
            get
            {
                return _MRRId;
            }
            set
            {
                if (_MRRId != value)
                {
                    OnMRRIdChanging(value);
                    ReportPropertyChanging("MRRId");
                    _MRRId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MRRId");
                    OnMRRIdChanged();
                }
            }
        }
        private global::System.Int64 _MRRId;
        partial void OnMRRIdChanging(global::System.Int64 value);
        partial void OnMRRIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PackageId
        {
            get
            {
                return _PackageId;
            }
            set
            {
                if (_PackageId != value)
                {
                    OnPackageIdChanging(value);
                    ReportPropertyChanging("PackageId");
                    _PackageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageId");
                    OnPackageIdChanged();
                }
            }
        }
        private global::System.Int64 _PackageId;
        partial void OnPackageIdChanging(global::System.Int64 value);
        partial void OnPackageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PlacedQuantity
        {
            get
            {
                return _PlacedQuantity;
            }
            set
            {
                OnPlacedQuantityChanging(value);
                ReportPropertyChanging("PlacedQuantity");
                _PlacedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedQuantity");
                OnPlacedQuantityChanged();
            }
        }
        private global::System.Double _PlacedQuantity;
        partial void OnPlacedQuantityChanging(global::System.Double value);
        partial void OnPlacedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AcceptedQuantity
        {
            get
            {
                return _AcceptedQuantity;
            }
            set
            {
                OnAcceptedQuantityChanging(value);
                ReportPropertyChanging("AcceptedQuantity");
                _AcceptedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedQuantity");
                OnAcceptedQuantityChanged();
            }
        }
        private global::System.Double _AcceptedQuantity;
        partial void OnAcceptedQuantityChanging(global::System.Double value);
        partial void OnAcceptedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Double> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Double> value);
        partial void OnPurchasePriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MRRMRRPackageInfo", "MRR")]
        public MRR MRR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRPackageInfo", "MRR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRPackageInfo", "MRR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MRR> MRRReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRPackageInfo", "MRR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRPackageInfo", "MRR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageMRRPackageInfo", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageMRRPackageInfo", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageMRRPackageInfo", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageMRRPackageInfo", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageMRRPackageInfo", "Package", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="MRRProductInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MRRProductInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MRRProductInfo object.
        /// </summary>
        /// <param name="mRRId">Initial value of the MRRId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="placedQuantity">Initial value of the PlacedQuantity property.</param>
        /// <param name="acceptedQuantity">Initial value of the AcceptedQuantity property.</param>
        public static MRRProductInfo CreateMRRProductInfo(global::System.Int64 mRRId, global::System.Int64 productId, global::System.String lotId, global::System.Double placedQuantity, global::System.Double acceptedQuantity)
        {
            MRRProductInfo mRRProductInfo = new MRRProductInfo();
            mRRProductInfo.MRRId = mRRId;
            mRRProductInfo.ProductId = productId;
            mRRProductInfo.LotId = lotId;
            mRRProductInfo.PlacedQuantity = placedQuantity;
            mRRProductInfo.AcceptedQuantity = acceptedQuantity;
            return mRRProductInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MRRId
        {
            get
            {
                return _MRRId;
            }
            set
            {
                if (_MRRId != value)
                {
                    OnMRRIdChanging(value);
                    ReportPropertyChanging("MRRId");
                    _MRRId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MRRId");
                    OnMRRIdChanged();
                }
            }
        }
        private global::System.Int64 _MRRId;
        partial void OnMRRIdChanging(global::System.Int64 value);
        partial void OnMRRIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PlacedQuantity
        {
            get
            {
                return _PlacedQuantity;
            }
            set
            {
                OnPlacedQuantityChanging(value);
                ReportPropertyChanging("PlacedQuantity");
                _PlacedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedQuantity");
                OnPlacedQuantityChanged();
            }
        }
        private global::System.Double _PlacedQuantity;
        partial void OnPlacedQuantityChanging(global::System.Double value);
        partial void OnPlacedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AcceptedQuantity
        {
            get
            {
                return _AcceptedQuantity;
            }
            set
            {
                OnAcceptedQuantityChanging(value);
                ReportPropertyChanging("AcceptedQuantity");
                _AcceptedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedQuantity");
                OnAcceptedQuantityChanged();
            }
        }
        private global::System.Double _AcceptedQuantity;
        partial void OnAcceptedQuantityChanging(global::System.Double value);
        partial void OnAcceptedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Double> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Double> value);
        partial void OnPurchasePriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_MRRMRRProductInfo", "MRR")]
        public MRR MRR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRProductInfo", "MRR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRProductInfo", "MRR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MRR> MRRReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRProductInfo", "MRR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MRR>("IspahaniAgroLTDModel.FK_MRRMRRProductInfo", "MRR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductMRRProductInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductMRRProductInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductMRRProductInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductMRRProductInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductMRRProductInfo", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="NoticeBoard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NoticeBoard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NoticeBoard object.
        /// </summary>
        /// <param name="noticeId">Initial value of the NoticeId property.</param>
        /// <param name="noticeSubject">Initial value of the NoticeSubject property.</param>
        /// <param name="noticeBody">Initial value of the NoticeBody property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="issuedById">Initial value of the IssuedById property.</param>
        public static NoticeBoard CreateNoticeBoard(global::System.Int64 noticeId, global::System.String noticeSubject, global::System.String noticeBody, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean isActive, global::System.Int64 issuedById)
        {
            NoticeBoard noticeBoard = new NoticeBoard();
            noticeBoard.NoticeId = noticeId;
            noticeBoard.NoticeSubject = noticeSubject;
            noticeBoard.NoticeBody = noticeBody;
            noticeBoard.StartDate = startDate;
            noticeBoard.EndDate = endDate;
            noticeBoard.IsActive = isActive;
            noticeBoard.IssuedById = issuedById;
            return noticeBoard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NoticeId
        {
            get
            {
                return _NoticeId;
            }
            set
            {
                if (_NoticeId != value)
                {
                    OnNoticeIdChanging(value);
                    ReportPropertyChanging("NoticeId");
                    _NoticeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoticeId");
                    OnNoticeIdChanged();
                }
            }
        }
        private global::System.Int64 _NoticeId;
        partial void OnNoticeIdChanging(global::System.Int64 value);
        partial void OnNoticeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoticeSubject
        {
            get
            {
                return _NoticeSubject;
            }
            set
            {
                OnNoticeSubjectChanging(value);
                ReportPropertyChanging("NoticeSubject");
                _NoticeSubject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NoticeSubject");
                OnNoticeSubjectChanged();
            }
        }
        private global::System.String _NoticeSubject;
        partial void OnNoticeSubjectChanging(global::System.String value);
        partial void OnNoticeSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoticeBody
        {
            get
            {
                return _NoticeBody;
            }
            set
            {
                OnNoticeBodyChanging(value);
                ReportPropertyChanging("NoticeBody");
                _NoticeBody = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NoticeBody");
                OnNoticeBodyChanged();
            }
        }
        private global::System.String _NoticeBody;
        partial void OnNoticeBodyChanging(global::System.String value);
        partial void OnNoticeBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedById
        {
            get
            {
                return _IssuedById;
            }
            set
            {
                OnIssuedByIdChanging(value);
                ReportPropertyChanging("IssuedById");
                _IssuedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedById");
                OnIssuedByIdChanged();
            }
        }
        private global::System.Int64 _IssuedById;
        partial void OnIssuedByIdChanging(global::System.Int64 value);
        partial void OnIssuedByIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeNoticeBoard", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeNoticeBoard", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeNoticeBoard", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeNoticeBoard", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeNoticeBoard", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Package")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Package : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Package object.
        /// </summary>
        /// <param name="packageId">Initial value of the PackageId property.</param>
        /// <param name="packageName">Initial value of the PackageName property.</param>
        /// <param name="packageCode">Initial value of the PackageCode property.</param>
        /// <param name="packageStatus">Initial value of the PackageStatus property.</param>
        /// <param name="nSMId">Initial value of the NSMId property.</param>
        /// <param name="adminId">Initial value of the AdminId property.</param>
        /// <param name="introducedDate">Initial value of the IntroducedDate property.</param>
        public static Package CreatePackage(global::System.Int64 packageId, global::System.String packageName, global::System.String packageCode, global::System.String packageStatus, global::System.Int64 nSMId, global::System.Int64 adminId, global::System.DateTime introducedDate)
        {
            Package package = new Package();
            package.PackageId = packageId;
            package.PackageName = packageName;
            package.PackageCode = packageCode;
            package.PackageStatus = packageStatus;
            package.NSMId = nSMId;
            package.AdminId = adminId;
            package.IntroducedDate = introducedDate;
            return package;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PackageId
        {
            get
            {
                return _PackageId;
            }
            set
            {
                if (_PackageId != value)
                {
                    OnPackageIdChanging(value);
                    ReportPropertyChanging("PackageId");
                    _PackageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageId");
                    OnPackageIdChanged();
                }
            }
        }
        private global::System.Int64 _PackageId;
        partial void OnPackageIdChanging(global::System.Int64 value);
        partial void OnPackageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageName
        {
            get
            {
                return _PackageName;
            }
            set
            {
                OnPackageNameChanging(value);
                ReportPropertyChanging("PackageName");
                _PackageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PackageName");
                OnPackageNameChanged();
            }
        }
        private global::System.String _PackageName;
        partial void OnPackageNameChanging(global::System.String value);
        partial void OnPackageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageCode
        {
            get
            {
                return _PackageCode;
            }
            set
            {
                OnPackageCodeChanging(value);
                ReportPropertyChanging("PackageCode");
                _PackageCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PackageCode");
                OnPackageCodeChanged();
            }
        }
        private global::System.String _PackageCode;
        partial void OnPackageCodeChanging(global::System.String value);
        partial void OnPackageCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageStatus
        {
            get
            {
                return _PackageStatus;
            }
            set
            {
                OnPackageStatusChanging(value);
                ReportPropertyChanging("PackageStatus");
                _PackageStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PackageStatus");
                OnPackageStatusChanged();
            }
        }
        private global::System.String _PackageStatus;
        partial void OnPackageStatusChanging(global::System.String value);
        partial void OnPackageStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NSMId
        {
            get
            {
                return _NSMId;
            }
            set
            {
                OnNSMIdChanging(value);
                ReportPropertyChanging("NSMId");
                _NSMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NSMId");
                OnNSMIdChanged();
            }
        }
        private global::System.Int64 _NSMId;
        partial void OnNSMIdChanging(global::System.Int64 value);
        partial void OnNSMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdminId
        {
            get
            {
                return _AdminId;
            }
            set
            {
                OnAdminIdChanging(value);
                ReportPropertyChanging("AdminId");
                _AdminId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdminId");
                OnAdminIdChanged();
            }
        }
        private global::System.Int64 _AdminId;
        partial void OnAdminIdChanging(global::System.Int64 value);
        partial void OnAdminIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntroducedDate
        {
            get
            {
                return _IntroducedDate;
            }
            set
            {
                OnIntroducedDateChanging(value);
                ReportPropertyChanging("IntroducedDate");
                _IntroducedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntroducedDate");
                OnIntroducedDateChanged();
            }
        }
        private global::System.DateTime _IntroducedDate;
        partial void OnIntroducedDateChanging(global::System.DateTime value);
        partial void OnIntroducedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeApprovedPackage", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovedPackage", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovedPackage", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovedPackage", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovedPackage", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeCreatedPackage", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreatedPackage", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreatedPackage", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreatedPackage", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeCreatedPackage", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageInventoryPackageInfo", "InventoryPackageInfo")]
        public EntityCollection<InventoryPackageInfo> InventoryPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryPackageInfo>("IspahaniAgroLTDModel.FK_PackageInventoryPackageInfo", "InventoryPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryPackageInfo>("IspahaniAgroLTDModel.FK_PackageInventoryPackageInfo", "InventoryPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageMRRPackageInfo", "MRRPackageInfo")]
        public EntityCollection<MRRPackageInfo> MRRPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRRPackageInfo>("IspahaniAgroLTDModel.FK_PackageMRRPackageInfo", "MRRPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRRPackageInfo>("IspahaniAgroLTDModel.FK_PackageMRRPackageInfo", "MRRPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackagePLRPackageInfo", "PLRPackageInfo")]
        public EntityCollection<PLRPackageInfo> PLRPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLRPackageInfo>("IspahaniAgroLTDModel.FK_PackagePLRPackageInfo", "PLRPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLRPackageInfo>("IspahaniAgroLTDModel.FK_PackagePLRPackageInfo", "PLRPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageRequisitionPackageInfo", "RequisitionPackageInfo")]
        public EntityCollection<RequisitionPackageInfo> RequisitionPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequisitionPackageInfo>("IspahaniAgroLTDModel.FK_PackageRequisitionPackageInfo", "RequisitionPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequisitionPackageInfo>("IspahaniAgroLTDModel.FK_PackageRequisitionPackageInfo", "RequisitionPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageYearSummaryInventoryPackage", "YearSummaryInventoryPackage")]
        public EntityCollection<YearSummaryInventoryPackage> YearSummaryInventoryPackages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryInventoryPackage>("IspahaniAgroLTDModel.FK_PackageYearSummaryInventoryPackage", "YearSummaryInventoryPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryInventoryPackage>("IspahaniAgroLTDModel.FK_PackageYearSummaryInventoryPackage", "YearSummaryInventoryPackage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="dateOfJoin">Initial value of the DateOfJoin property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contactNo">Initial value of the ContactNo property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        public static Person CreatePerson(global::System.Int64 personId, global::System.String name, global::System.DateTime dateOfBirth, global::System.DateTime dateOfJoin, global::System.String address, global::System.String contactNo, global::System.String emailAddress)
        {
            Person person = new Person();
            person.PersonId = personId;
            person.Name = name;
            person.DateOfBirth = dateOfBirth;
            person.DateOfJoin = dateOfJoin;
            person.Address = address;
            person.ContactNo = contactNo;
            person.EmailAddress = emailAddress;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int64 _PersonId;
        partial void OnPersonIdChanging(global::System.Int64 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfJoin
        {
            get
            {
                return _DateOfJoin;
            }
            set
            {
                OnDateOfJoinChanging(value);
                ReportPropertyChanging("DateOfJoin");
                _DateOfJoin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfJoin");
                OnDateOfJoinChanged();
            }
        }
        private global::System.DateTime _DateOfJoin;
        partial void OnDateOfJoinChanging(global::System.DateTime value);
        partial void OnDateOfJoinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.String _ContactNo;
        partial void OnContactNoChanging(global::System.String value);
        partial void OnContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PersonEmployee", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("IspahaniAgroLTDModel.FK_PersonEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("IspahaniAgroLTDModel.FK_PersonEmployee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="PLR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PLR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PLR object.
        /// </summary>
        /// <param name="pLRId">Initial value of the PLRId property.</param>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="issuedById">Initial value of the IssuedById property.</param>
        /// <param name="issuedToId">Initial value of the IssuedToId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="dateOfApproval">Initial value of the DateOfApproval property.</param>
        public static PLR CreatePLR(global::System.Int64 pLRId, global::System.Int64 inventoryId, global::System.DateTime dateOfIssue, global::System.Int64 issuedById, global::System.Int64 issuedToId, global::System.String status, global::System.DateTime dateOfApproval)
        {
            PLR pLR = new PLR();
            pLR.PLRId = pLRId;
            pLR.InventoryId = inventoryId;
            pLR.DateOfIssue = dateOfIssue;
            pLR.IssuedById = issuedById;
            pLR.IssuedToId = issuedToId;
            pLR.Status = status;
            pLR.DateOfApproval = dateOfApproval;
            return pLR;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PLRId
        {
            get
            {
                return _PLRId;
            }
            set
            {
                if (_PLRId != value)
                {
                    OnPLRIdChanging(value);
                    ReportPropertyChanging("PLRId");
                    _PLRId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PLRId");
                    OnPLRIdChanged();
                }
            }
        }
        private global::System.Int64 _PLRId;
        partial void OnPLRIdChanging(global::System.Int64 value);
        partial void OnPLRIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                OnInventoryIdChanging(value);
                ReportPropertyChanging("InventoryId");
                _InventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryId");
                OnInventoryIdChanged();
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedById
        {
            get
            {
                return _IssuedById;
            }
            set
            {
                OnIssuedByIdChanging(value);
                ReportPropertyChanging("IssuedById");
                _IssuedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedById");
                OnIssuedByIdChanged();
            }
        }
        private global::System.Int64 _IssuedById;
        partial void OnIssuedByIdChanging(global::System.Int64 value);
        partial void OnIssuedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedToId
        {
            get
            {
                return _IssuedToId;
            }
            set
            {
                OnIssuedToIdChanging(value);
                ReportPropertyChanging("IssuedToId");
                _IssuedToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedToId");
                OnIssuedToIdChanged();
            }
        }
        private global::System.Int64 _IssuedToId;
        partial void OnIssuedToIdChanging(global::System.Int64 value);
        partial void OnIssuedToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfApproval
        {
            get
            {
                return _DateOfApproval;
            }
            set
            {
                OnDateOfApprovalChanging(value);
                ReportPropertyChanging("DateOfApproval");
                _DateOfApproval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfApproval");
                OnDateOfApprovalChanged();
            }
        }
        private global::System.DateTime _DateOfApproval;
        partial void OnDateOfApprovalChanging(global::System.DateTime value);
        partial void OnDateOfApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLRCode
        {
            get
            {
                return _PLRCode;
            }
            set
            {
                OnPLRCodeChanging(value);
                ReportPropertyChanging("PLRCode");
                _PLRCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PLRCode");
                OnPLRCodeChanged();
            }
        }
        private global::System.String _PLRCode;
        partial void OnPLRCodeChanging(global::System.String value);
        partial void OnPLRCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeePLR", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeePLR1", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR1", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR1", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeePLR1", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryPLR", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryPLR", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryPLR", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryPLR", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryPLR", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PLRPLRPackageInfo", "PLRPackageInfo")]
        public EntityCollection<PLRPackageInfo> PLRPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLRPackageInfo>("IspahaniAgroLTDModel.FK_PLRPLRPackageInfo", "PLRPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLRPackageInfo>("IspahaniAgroLTDModel.FK_PLRPLRPackageInfo", "PLRPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PLRPLRProductInfo", "PLRProductInfo")]
        public EntityCollection<PLRProductInfo> PLRProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLRProductInfo>("IspahaniAgroLTDModel.FK_PLRPLRProductInfo", "PLRProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLRProductInfo>("IspahaniAgroLTDModel.FK_PLRPLRProductInfo", "PLRProductInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="PLRPackageInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PLRPackageInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PLRPackageInfo object.
        /// </summary>
        /// <param name="pLRId">Initial value of the PLRId property.</param>
        /// <param name="packageId">Initial value of the PackageId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="remarks">Initial value of the Remarks property.</param>
        public static PLRPackageInfo CreatePLRPackageInfo(global::System.Int64 pLRId, global::System.Int64 packageId, global::System.Double quantity, global::System.String remarks)
        {
            PLRPackageInfo pLRPackageInfo = new PLRPackageInfo();
            pLRPackageInfo.PLRId = pLRId;
            pLRPackageInfo.PackageId = packageId;
            pLRPackageInfo.Quantity = quantity;
            pLRPackageInfo.Remarks = remarks;
            return pLRPackageInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PLRId
        {
            get
            {
                return _PLRId;
            }
            set
            {
                if (_PLRId != value)
                {
                    OnPLRIdChanging(value);
                    ReportPropertyChanging("PLRId");
                    _PLRId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PLRId");
                    OnPLRIdChanged();
                }
            }
        }
        private global::System.Int64 _PLRId;
        partial void OnPLRIdChanging(global::System.Int64 value);
        partial void OnPLRIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PackageId
        {
            get
            {
                return _PackageId;
            }
            set
            {
                if (_PackageId != value)
                {
                    OnPackageIdChanging(value);
                    ReportPropertyChanging("PackageId");
                    _PackageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageId");
                    OnPackageIdChanged();
                }
            }
        }
        private global::System.Int64 _PackageId;
        partial void OnPackageIdChanging(global::System.Int64 value);
        partial void OnPackageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LostAmount
        {
            get
            {
                return _LostAmount;
            }
            set
            {
                OnLostAmountChanging(value);
                ReportPropertyChanging("LostAmount");
                _LostAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LostAmount");
                OnLostAmountChanged();
            }
        }
        private Nullable<global::System.Double> _LostAmount;
        partial void OnLostAmountChanging(Nullable<global::System.Double> value);
        partial void OnLostAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackagePLRPackageInfo", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackagePLRPackageInfo", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackagePLRPackageInfo", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackagePLRPackageInfo", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackagePLRPackageInfo", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PLRPLRPackageInfo", "PLR")]
        public PLR PLR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRPackageInfo", "PLR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRPackageInfo", "PLR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PLR> PLRReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRPackageInfo", "PLR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRPackageInfo", "PLR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="PLRProductInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PLRProductInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PLRProductInfo object.
        /// </summary>
        /// <param name="pLRId">Initial value of the PLRId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="remarks">Initial value of the Remarks property.</param>
        public static PLRProductInfo CreatePLRProductInfo(global::System.Int64 pLRId, global::System.Int64 productId, global::System.String lotId, global::System.Double quantity, global::System.String remarks)
        {
            PLRProductInfo pLRProductInfo = new PLRProductInfo();
            pLRProductInfo.PLRId = pLRId;
            pLRProductInfo.ProductId = productId;
            pLRProductInfo.LotId = lotId;
            pLRProductInfo.Quantity = quantity;
            pLRProductInfo.Remarks = remarks;
            return pLRProductInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PLRId
        {
            get
            {
                return _PLRId;
            }
            set
            {
                if (_PLRId != value)
                {
                    OnPLRIdChanging(value);
                    ReportPropertyChanging("PLRId");
                    _PLRId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PLRId");
                    OnPLRIdChanged();
                }
            }
        }
        private global::System.Int64 _PLRId;
        partial void OnPLRIdChanging(global::System.Int64 value);
        partial void OnPLRIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LostAmount
        {
            get
            {
                return _LostAmount;
            }
            set
            {
                OnLostAmountChanging(value);
                ReportPropertyChanging("LostAmount");
                _LostAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LostAmount");
                OnLostAmountChanged();
            }
        }
        private Nullable<global::System.Double> _LostAmount;
        partial void OnLostAmountChanging(Nullable<global::System.Double> value);
        partial void OnLostAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PLRPLRProductInfo", "PLR")]
        public PLR PLR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRProductInfo", "PLR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRProductInfo", "PLR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PLR> PLRReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRProductInfo", "PLR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PLR>("IspahaniAgroLTDModel.FK_PLRPLRProductInfo", "PLR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductPLRProductInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPLRProductInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPLRProductInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPLRProductInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPLRProductInfo", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="productCode">Initial value of the ProductCode property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="productType">Initial value of the ProductType property.</param>
        /// <param name="productWing">Initial value of the ProductWing property.</param>
        /// <param name="stockKeepingUnit">Initial value of the StockKeepingUnit property.</param>
        /// <param name="isOpOrHibrid">Initial value of the IsOpOrHibrid property.</param>
        /// <param name="isImported">Initial value of the IsImported property.</param>
        /// <param name="purchasePeriodStart">Initial value of the PurchasePeriodStart property.</param>
        /// <param name="purchasePeriodEnd">Initial value of the PurchasePeriodEnd property.</param>
        /// <param name="salesPeriodStart">Initial value of the SalesPeriodStart property.</param>
        /// <param name="salesPeriodEnd">Initial value of the SalesPeriodEnd property.</param>
        /// <param name="introducedDate">Initial value of the IntroducedDate property.</param>
        /// <param name="productStatus">Initial value of the ProductStatus property.</param>
        /// <param name="pricePerUnit">Initial value of the PricePerUnit property.</param>
        /// <param name="brandName">Initial value of the BrandName property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="subType">Initial value of the SubType property.</param>
        public static Product CreateProduct(global::System.Int64 productId, global::System.String productCode, global::System.String productName, global::System.String productType, global::System.String productWing, global::System.Double stockKeepingUnit, global::System.Boolean isOpOrHibrid, global::System.Boolean isImported, global::System.String purchasePeriodStart, global::System.String purchasePeriodEnd, global::System.String salesPeriodStart, global::System.String salesPeriodEnd, global::System.DateTime introducedDate, global::System.String productStatus, global::System.Double pricePerUnit, global::System.String brandName, global::System.String groupName, global::System.String subType)
        {
            Product product = new Product();
            product.ProductId = productId;
            product.ProductCode = productCode;
            product.ProductName = productName;
            product.ProductType = productType;
            product.ProductWing = productWing;
            product.StockKeepingUnit = stockKeepingUnit;
            product.IsOpOrHibrid = isOpOrHibrid;
            product.IsImported = isImported;
            product.PurchasePeriodStart = purchasePeriodStart;
            product.PurchasePeriodEnd = purchasePeriodEnd;
            product.SalesPeriodStart = salesPeriodStart;
            product.SalesPeriodEnd = salesPeriodEnd;
            product.IntroducedDate = introducedDate;
            product.ProductStatus = productStatus;
            product.PricePerUnit = pricePerUnit;
            product.BrandName = brandName;
            product.GroupName = groupName;
            product.SubType = subType;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductCode
        {
            get
            {
                return _ProductCode;
            }
            set
            {
                OnProductCodeChanging(value);
                ReportPropertyChanging("ProductCode");
                _ProductCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductCode");
                OnProductCodeChanged();
            }
        }
        private global::System.String _ProductCode;
        partial void OnProductCodeChanging(global::System.String value);
        partial void OnProductCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private global::System.String _ProductType;
        partial void OnProductTypeChanging(global::System.String value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductWing
        {
            get
            {
                return _ProductWing;
            }
            set
            {
                OnProductWingChanging(value);
                ReportPropertyChanging("ProductWing");
                _ProductWing = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductWing");
                OnProductWingChanged();
            }
        }
        private global::System.String _ProductWing;
        partial void OnProductWingChanging(global::System.String value);
        partial void OnProductWingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StockKeepingUnit
        {
            get
            {
                return _StockKeepingUnit;
            }
            set
            {
                OnStockKeepingUnitChanging(value);
                ReportPropertyChanging("StockKeepingUnit");
                _StockKeepingUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockKeepingUnit");
                OnStockKeepingUnitChanged();
            }
        }
        private global::System.Double _StockKeepingUnit;
        partial void OnStockKeepingUnitChanging(global::System.Double value);
        partial void OnStockKeepingUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOpOrHibrid
        {
            get
            {
                return _IsOpOrHibrid;
            }
            set
            {
                OnIsOpOrHibridChanging(value);
                ReportPropertyChanging("IsOpOrHibrid");
                _IsOpOrHibrid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOpOrHibrid");
                OnIsOpOrHibridChanged();
            }
        }
        private global::System.Boolean _IsOpOrHibrid;
        partial void OnIsOpOrHibridChanging(global::System.Boolean value);
        partial void OnIsOpOrHibridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsImported
        {
            get
            {
                return _IsImported;
            }
            set
            {
                OnIsImportedChanging(value);
                ReportPropertyChanging("IsImported");
                _IsImported = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsImported");
                OnIsImportedChanged();
            }
        }
        private global::System.Boolean _IsImported;
        partial void OnIsImportedChanging(global::System.Boolean value);
        partial void OnIsImportedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PurchasePeriodStart
        {
            get
            {
                return _PurchasePeriodStart;
            }
            set
            {
                OnPurchasePeriodStartChanging(value);
                ReportPropertyChanging("PurchasePeriodStart");
                _PurchasePeriodStart = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PurchasePeriodStart");
                OnPurchasePeriodStartChanged();
            }
        }
        private global::System.String _PurchasePeriodStart;
        partial void OnPurchasePeriodStartChanging(global::System.String value);
        partial void OnPurchasePeriodStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PurchasePeriodEnd
        {
            get
            {
                return _PurchasePeriodEnd;
            }
            set
            {
                OnPurchasePeriodEndChanging(value);
                ReportPropertyChanging("PurchasePeriodEnd");
                _PurchasePeriodEnd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PurchasePeriodEnd");
                OnPurchasePeriodEndChanged();
            }
        }
        private global::System.String _PurchasePeriodEnd;
        partial void OnPurchasePeriodEndChanging(global::System.String value);
        partial void OnPurchasePeriodEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SalesPeriodStart
        {
            get
            {
                return _SalesPeriodStart;
            }
            set
            {
                OnSalesPeriodStartChanging(value);
                ReportPropertyChanging("SalesPeriodStart");
                _SalesPeriodStart = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SalesPeriodStart");
                OnSalesPeriodStartChanged();
            }
        }
        private global::System.String _SalesPeriodStart;
        partial void OnSalesPeriodStartChanging(global::System.String value);
        partial void OnSalesPeriodStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SalesPeriodEnd
        {
            get
            {
                return _SalesPeriodEnd;
            }
            set
            {
                OnSalesPeriodEndChanging(value);
                ReportPropertyChanging("SalesPeriodEnd");
                _SalesPeriodEnd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SalesPeriodEnd");
                OnSalesPeriodEndChanged();
            }
        }
        private global::System.String _SalesPeriodEnd;
        partial void OnSalesPeriodEndChanging(global::System.String value);
        partial void OnSalesPeriodEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntroducedDate
        {
            get
            {
                return _IntroducedDate;
            }
            set
            {
                OnIntroducedDateChanging(value);
                ReportPropertyChanging("IntroducedDate");
                _IntroducedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntroducedDate");
                OnIntroducedDateChanged();
            }
        }
        private global::System.DateTime _IntroducedDate;
        partial void OnIntroducedDateChanging(global::System.DateTime value);
        partial void OnIntroducedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductStatus
        {
            get
            {
                return _ProductStatus;
            }
            set
            {
                OnProductStatusChanging(value);
                ReportPropertyChanging("ProductStatus");
                _ProductStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductStatus");
                OnProductStatusChanged();
            }
        }
        private global::System.String _ProductStatus;
        partial void OnProductStatusChanging(global::System.String value);
        partial void OnProductStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PricePerUnit
        {
            get
            {
                return _PricePerUnit;
            }
            set
            {
                OnPricePerUnitChanging(value);
                ReportPropertyChanging("PricePerUnit");
                _PricePerUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PricePerUnit");
                OnPricePerUnitChanged();
            }
        }
        private global::System.Double _PricePerUnit;
        partial void OnPricePerUnitChanging(global::System.Double value);
        partial void OnPricePerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private global::System.String _SubType;
        partial void OnSubTypeChanging(global::System.String value);
        partial void OnSubTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductBillPaymentInfo", "BillPaymentInfo")]
        public EntityCollection<BillPaymentInfo> BillPaymentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillPaymentInfo>("IspahaniAgroLTDModel.FK_ProductBillPaymentInfo", "BillPaymentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillPaymentInfo>("IspahaniAgroLTDModel.FK_ProductBillPaymentInfo", "BillPaymentInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductBillProductInfo", "BillProductInfo")]
        public EntityCollection<BillProductInfo> BillProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillProductInfo>("IspahaniAgroLTDModel.FK_ProductBillProductInfo", "BillProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillProductInfo>("IspahaniAgroLTDModel.FK_ProductBillProductInfo", "BillProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductCommission", "Commission")]
        public EntityCollection<Commission> Commissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commission>("IspahaniAgroLTDModel.FK_ProductCommission", "Commission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commission>("IspahaniAgroLTDModel.FK_ProductCommission", "Commission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductDueInfo", "DueInfo")]
        public EntityCollection<DueInfo> DueInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DueInfo>("IspahaniAgroLTDModel.FK_ProductDueInfo", "DueInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DueInfo>("IspahaniAgroLTDModel.FK_ProductDueInfo", "DueInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_IndentProductInfoProduct", "IndentProductInfo")]
        public EntityCollection<IndentProductInfo> IndentProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IndentProductInfo>("IspahaniAgroLTDModel.FK_IndentProductInfoProduct", "IndentProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IndentProductInfo>("IspahaniAgroLTDModel.FK_IndentProductInfoProduct", "IndentProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductInventoryLog", "InventoryLog")]
        public EntityCollection<InventoryLog> InventoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryLog>("IspahaniAgroLTDModel.FK_ProductInventoryLog", "InventoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryLog>("IspahaniAgroLTDModel.FK_ProductInventoryLog", "InventoryLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductInventoryProductInfo", "InventoryProductInfo")]
        public EntityCollection<InventoryProductInfo> InventoryProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryProductInfo>("IspahaniAgroLTDModel.FK_ProductInventoryProductInfo", "InventoryProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryProductInfo>("IspahaniAgroLTDModel.FK_ProductInventoryProductInfo", "InventoryProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductLedger", "Ledger")]
        public EntityCollection<Ledger> Ledgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ledger>("IspahaniAgroLTDModel.FK_ProductLedger", "Ledger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ledger>("IspahaniAgroLTDModel.FK_ProductLedger", "Ledger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductMRRProductInfo", "MRRProductInfo")]
        public EntityCollection<MRRProductInfo> MRRProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRRProductInfo>("IspahaniAgroLTDModel.FK_ProductMRRProductInfo", "MRRProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRRProductInfo>("IspahaniAgroLTDModel.FK_ProductMRRProductInfo", "MRRProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductPLRProductInfo", "PLRProductInfo")]
        public EntityCollection<PLRProductInfo> PLRProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLRProductInfo>("IspahaniAgroLTDModel.FK_ProductPLRProductInfo", "PLRProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLRProductInfo>("IspahaniAgroLTDModel.FK_ProductPLRProductInfo", "PLRProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductProductEdit", "ProductEdit")]
        public EntityCollection<ProductEdit> ProductEdits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductEdit>("IspahaniAgroLTDModel.FK_ProductProductEdit", "ProductEdit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductEdit>("IspahaniAgroLTDModel.FK_ProductProductEdit", "ProductEdit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductPromotion", "Promotion")]
        public EntityCollection<Promotion> Promotions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Promotion>("IspahaniAgroLTDModel.FK_ProductPromotion", "Promotion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Promotion>("IspahaniAgroLTDModel.FK_ProductPromotion", "Promotion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductRegionTarget", "RegionTarget")]
        public EntityCollection<RegionTarget> RegionTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegionTarget>("IspahaniAgroLTDModel.FK_ProductRegionTarget", "RegionTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegionTarget>("IspahaniAgroLTDModel.FK_ProductRegionTarget", "RegionTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductRequisitionProductInfo", "RequisitionProductInfo")]
        public EntityCollection<RequisitionProductInfo> RequisitionProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequisitionProductInfo>("IspahaniAgroLTDModel.FK_ProductRequisitionProductInfo", "RequisitionProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequisitionProductInfo>("IspahaniAgroLTDModel.FK_ProductRequisitionProductInfo", "RequisitionProductInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductSalesReturnInfo", "SalesReturnInfo")]
        public EntityCollection<SalesReturnInfo> SalesReturnInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesReturnInfo>("IspahaniAgroLTDModel.FK_ProductSalesReturnInfo", "SalesReturnInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesReturnInfo>("IspahaniAgroLTDModel.FK_ProductSalesReturnInfo", "SalesReturnInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferDetail_Product", "ProductTransferDetail")]
        public EntityCollection<ProductTransferDetail> ProductTransferDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductTransferDetail>("IspahaniAgroLTDModel.FK_ProductTransferDetail_Product", "ProductTransferDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductTransferDetail>("IspahaniAgroLTDModel.FK_ProductTransferDetail_Product", "ProductTransferDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferIndentDetails", "TransferIndentDetail")]
        public EntityCollection<TransferIndentDetail> TransferIndentDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferIndentDetail>("IspahaniAgroLTDModel.FK_ProductTransferIndentDetails", "TransferIndentDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferIndentDetail>("IspahaniAgroLTDModel.FK_ProductTransferIndentDetails", "TransferIndentDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransportationLoss", "TransportationLoss")]
        public EntityCollection<TransportationLoss> TransportationLosses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransportationLoss>("IspahaniAgroLTDModel.FK_ProductTransportationLoss", "TransportationLoss");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransportationLoss>("IspahaniAgroLTDModel.FK_ProductTransportationLoss", "TransportationLoss", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductYearSummaryDealer", "YearSummaryDealer")]
        public EntityCollection<YearSummaryDealer> YearSummaryDealers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryDealer>("IspahaniAgroLTDModel.FK_ProductYearSummaryDealer", "YearSummaryDealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryDealer>("IspahaniAgroLTDModel.FK_ProductYearSummaryDealer", "YearSummaryDealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductYearSummaryInventoryProduct", "YearSummaryInventoryProduct")]
        public EntityCollection<YearSummaryInventoryProduct> YearSummaryInventoryProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryInventoryProduct>("IspahaniAgroLTDModel.FK_ProductYearSummaryInventoryProduct", "YearSummaryInventoryProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryInventoryProduct>("IspahaniAgroLTDModel.FK_ProductYearSummaryInventoryProduct", "YearSummaryInventoryProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SalesOfficerTargetProduct", "SalesOfficerTarget")]
        public EntityCollection<SalesOfficerTarget> SalesOfficerTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOfficerTarget>("IspahaniAgroLTDModel.FK_SalesOfficerTargetProduct", "SalesOfficerTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOfficerTarget>("IspahaniAgroLTDModel.FK_SalesOfficerTargetProduct", "SalesOfficerTarget", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="ProductEdit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductEdit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductEdit object.
        /// </summary>
        /// <param name="productEditId">Initial value of the ProductEditId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="editType">Initial value of the EditType property.</param>
        /// <param name="nSMId">Initial value of the NSMId property.</param>
        /// <param name="adminId">Initial value of the AdminId property.</param>
        /// <param name="previousValue">Initial value of the PreviousValue property.</param>
        /// <param name="editedValue">Initial value of the EditedValue property.</param>
        /// <param name="editStatus">Initial value of the EditStatus property.</param>
        /// <param name="changeApplicableFrom">Initial value of the ChangeApplicableFrom property.</param>
        public static ProductEdit CreateProductEdit(global::System.Int64 productEditId, global::System.Int64 productId, global::System.String editType, global::System.Int64 nSMId, global::System.Int64 adminId, global::System.String previousValue, global::System.String editedValue, global::System.String editStatus, global::System.DateTime changeApplicableFrom)
        {
            ProductEdit productEdit = new ProductEdit();
            productEdit.ProductEditId = productEditId;
            productEdit.ProductId = productId;
            productEdit.EditType = editType;
            productEdit.NSMId = nSMId;
            productEdit.AdminId = adminId;
            productEdit.PreviousValue = previousValue;
            productEdit.EditedValue = editedValue;
            productEdit.EditStatus = editStatus;
            productEdit.ChangeApplicableFrom = changeApplicableFrom;
            return productEdit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductEditId
        {
            get
            {
                return _ProductEditId;
            }
            set
            {
                if (_ProductEditId != value)
                {
                    OnProductEditIdChanging(value);
                    ReportPropertyChanging("ProductEditId");
                    _ProductEditId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductEditId");
                    OnProductEditIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductEditId;
        partial void OnProductEditIdChanging(global::System.Int64 value);
        partial void OnProductEditIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EditType
        {
            get
            {
                return _EditType;
            }
            set
            {
                OnEditTypeChanging(value);
                ReportPropertyChanging("EditType");
                _EditType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EditType");
                OnEditTypeChanged();
            }
        }
        private global::System.String _EditType;
        partial void OnEditTypeChanging(global::System.String value);
        partial void OnEditTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NSMId
        {
            get
            {
                return _NSMId;
            }
            set
            {
                OnNSMIdChanging(value);
                ReportPropertyChanging("NSMId");
                _NSMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NSMId");
                OnNSMIdChanged();
            }
        }
        private global::System.Int64 _NSMId;
        partial void OnNSMIdChanging(global::System.Int64 value);
        partial void OnNSMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdminId
        {
            get
            {
                return _AdminId;
            }
            set
            {
                OnAdminIdChanging(value);
                ReportPropertyChanging("AdminId");
                _AdminId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdminId");
                OnAdminIdChanged();
            }
        }
        private global::System.Int64 _AdminId;
        partial void OnAdminIdChanging(global::System.Int64 value);
        partial void OnAdminIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreviousValue
        {
            get
            {
                return _PreviousValue;
            }
            set
            {
                OnPreviousValueChanging(value);
                ReportPropertyChanging("PreviousValue");
                _PreviousValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PreviousValue");
                OnPreviousValueChanged();
            }
        }
        private global::System.String _PreviousValue;
        partial void OnPreviousValueChanging(global::System.String value);
        partial void OnPreviousValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EditedValue
        {
            get
            {
                return _EditedValue;
            }
            set
            {
                OnEditedValueChanging(value);
                ReportPropertyChanging("EditedValue");
                _EditedValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EditedValue");
                OnEditedValueChanged();
            }
        }
        private global::System.String _EditedValue;
        partial void OnEditedValueChanging(global::System.String value);
        partial void OnEditedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EditStatus
        {
            get
            {
                return _EditStatus;
            }
            set
            {
                OnEditStatusChanging(value);
                ReportPropertyChanging("EditStatus");
                _EditStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EditStatus");
                OnEditStatusChanged();
            }
        }
        private global::System.String _EditStatus;
        partial void OnEditStatusChanging(global::System.String value);
        partial void OnEditStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeApplicableFrom
        {
            get
            {
                return _ChangeApplicableFrom;
            }
            set
            {
                OnChangeApplicableFromChanging(value);
                ReportPropertyChanging("ChangeApplicableFrom");
                _ChangeApplicableFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeApplicableFrom");
                OnChangeApplicableFromChanged();
            }
        }
        private global::System.DateTime _ChangeApplicableFrom;
        partial void OnChangeApplicableFromChanging(global::System.DateTime value);
        partial void OnChangeApplicableFromChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeApprovesProductEdits", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovesProductEdits", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovesProductEdits", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovesProductEdits", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeApprovesProductEdits", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeProductEdit", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeProductEdit", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeProductEdit", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeProductEdit", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeProductEdit", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductProductEdit", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductProductEdit", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductProductEdit", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductProductEdit", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductProductEdit", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="ProductTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductTransfer object.
        /// </summary>
        /// <param name="productTransferID">Initial value of the ProductTransferID property.</param>
        /// <param name="transferIndentId">Initial value of the TransferIndentId property.</param>
        /// <param name="sendFromInventoryId">Initial value of the SendFromInventoryId property.</param>
        /// <param name="issuedByDOId">Initial value of the IssuedByDOId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="recievedToInventoryId">Initial value of the RecievedToInventoryId property.</param>
        /// <param name="recievedBySICId">Initial value of the RecievedBySICId property.</param>
        /// <param name="transportType">Initial value of the TransportType property.</param>
        /// <param name="transportCost">Initial value of the TransportCost property.</param>
        /// <param name="emergencyContactNo">Initial value of the EmergencyContactNo property.</param>
        /// <param name="hasProductLoss">Initial value of the HasProductLoss property.</param>
        /// <param name="productLossCost">Initial value of the ProductLossCost property.</param>
        /// <param name="productTransferStatus">Initial value of the ProductTransferStatus property.</param>
        public static ProductTransfer CreateProductTransfer(global::System.Int64 productTransferID, global::System.Int64 transferIndentId, global::System.Int64 sendFromInventoryId, global::System.Int64 issuedByDOId, global::System.DateTime dateOfIssue, global::System.Int64 recievedToInventoryId, global::System.Int64 recievedBySICId, global::System.String transportType, global::System.Double transportCost, global::System.String emergencyContactNo, global::System.Boolean hasProductLoss, global::System.Double productLossCost, global::System.String productTransferStatus)
        {
            ProductTransfer productTransfer = new ProductTransfer();
            productTransfer.ProductTransferID = productTransferID;
            productTransfer.TransferIndentId = transferIndentId;
            productTransfer.SendFromInventoryId = sendFromInventoryId;
            productTransfer.IssuedByDOId = issuedByDOId;
            productTransfer.DateOfIssue = dateOfIssue;
            productTransfer.RecievedToInventoryId = recievedToInventoryId;
            productTransfer.RecievedBySICId = recievedBySICId;
            productTransfer.TransportType = transportType;
            productTransfer.TransportCost = transportCost;
            productTransfer.EmergencyContactNo = emergencyContactNo;
            productTransfer.HasProductLoss = hasProductLoss;
            productTransfer.ProductLossCost = productLossCost;
            productTransfer.ProductTransferStatus = productTransferStatus;
            return productTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductTransferID
        {
            get
            {
                return _ProductTransferID;
            }
            set
            {
                if (_ProductTransferID != value)
                {
                    OnProductTransferIDChanging(value);
                    ReportPropertyChanging("ProductTransferID");
                    _ProductTransferID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductTransferID");
                    OnProductTransferIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductTransferID;
        partial void OnProductTransferIDChanging(global::System.Int64 value);
        partial void OnProductTransferIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductTransferCode
        {
            get
            {
                return _ProductTransferCode;
            }
            set
            {
                OnProductTransferCodeChanging(value);
                ReportPropertyChanging("ProductTransferCode");
                _ProductTransferCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductTransferCode");
                OnProductTransferCodeChanged();
            }
        }
        private global::System.String _ProductTransferCode;
        partial void OnProductTransferCodeChanging(global::System.String value);
        partial void OnProductTransferCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransferIndentId
        {
            get
            {
                return _TransferIndentId;
            }
            set
            {
                OnTransferIndentIdChanging(value);
                ReportPropertyChanging("TransferIndentId");
                _TransferIndentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferIndentId");
                OnTransferIndentIdChanged();
            }
        }
        private global::System.Int64 _TransferIndentId;
        partial void OnTransferIndentIdChanging(global::System.Int64 value);
        partial void OnTransferIndentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SendFromInventoryId
        {
            get
            {
                return _SendFromInventoryId;
            }
            set
            {
                OnSendFromInventoryIdChanging(value);
                ReportPropertyChanging("SendFromInventoryId");
                _SendFromInventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendFromInventoryId");
                OnSendFromInventoryIdChanged();
            }
        }
        private global::System.Int64 _SendFromInventoryId;
        partial void OnSendFromInventoryIdChanging(global::System.Int64 value);
        partial void OnSendFromInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedByDOId
        {
            get
            {
                return _IssuedByDOId;
            }
            set
            {
                OnIssuedByDOIdChanging(value);
                ReportPropertyChanging("IssuedByDOId");
                _IssuedByDOId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedByDOId");
                OnIssuedByDOIdChanged();
            }
        }
        private global::System.Int64 _IssuedByDOId;
        partial void OnIssuedByDOIdChanging(global::System.Int64 value);
        partial void OnIssuedByDOIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RecievedToInventoryId
        {
            get
            {
                return _RecievedToInventoryId;
            }
            set
            {
                OnRecievedToInventoryIdChanging(value);
                ReportPropertyChanging("RecievedToInventoryId");
                _RecievedToInventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecievedToInventoryId");
                OnRecievedToInventoryIdChanged();
            }
        }
        private global::System.Int64 _RecievedToInventoryId;
        partial void OnRecievedToInventoryIdChanging(global::System.Int64 value);
        partial void OnRecievedToInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RecievedBySICId
        {
            get
            {
                return _RecievedBySICId;
            }
            set
            {
                OnRecievedBySICIdChanging(value);
                ReportPropertyChanging("RecievedBySICId");
                _RecievedBySICId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecievedBySICId");
                OnRecievedBySICIdChanged();
            }
        }
        private global::System.Int64 _RecievedBySICId;
        partial void OnRecievedBySICIdChanging(global::System.Int64 value);
        partial void OnRecievedBySICIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfRecieve
        {
            get
            {
                return _DateOfRecieve;
            }
            set
            {
                OnDateOfRecieveChanging(value);
                ReportPropertyChanging("DateOfRecieve");
                _DateOfRecieve = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfRecieve");
                OnDateOfRecieveChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfRecieve;
        partial void OnDateOfRecieveChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfRecieveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransportType
        {
            get
            {
                return _TransportType;
            }
            set
            {
                OnTransportTypeChanging(value);
                ReportPropertyChanging("TransportType");
                _TransportType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransportType");
                OnTransportTypeChanged();
            }
        }
        private global::System.String _TransportType;
        partial void OnTransportTypeChanging(global::System.String value);
        partial void OnTransportTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleNo
        {
            get
            {
                return _VehicleNo;
            }
            set
            {
                OnVehicleNoChanging(value);
                ReportPropertyChanging("VehicleNo");
                _VehicleNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleNo");
                OnVehicleNoChanged();
            }
        }
        private global::System.String _VehicleNo;
        partial void OnVehicleNoChanging(global::System.String value);
        partial void OnVehicleNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransportCost
        {
            get
            {
                return _TransportCost;
            }
            set
            {
                OnTransportCostChanging(value);
                ReportPropertyChanging("TransportCost");
                _TransportCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransportCost");
                OnTransportCostChanged();
            }
        }
        private global::System.Double _TransportCost;
        partial void OnTransportCostChanging(global::System.Double value);
        partial void OnTransportCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContactNo
        {
            get
            {
                return _EmergencyContactNo;
            }
            set
            {
                OnEmergencyContactNoChanging(value);
                ReportPropertyChanging("EmergencyContactNo");
                _EmergencyContactNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmergencyContactNo");
                OnEmergencyContactNoChanged();
            }
        }
        private global::System.String _EmergencyContactNo;
        partial void OnEmergencyContactNoChanging(global::System.String value);
        partial void OnEmergencyContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasProductLoss
        {
            get
            {
                return _HasProductLoss;
            }
            set
            {
                OnHasProductLossChanging(value);
                ReportPropertyChanging("HasProductLoss");
                _HasProductLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasProductLoss");
                OnHasProductLossChanged();
            }
        }
        private global::System.Boolean _HasProductLoss;
        partial void OnHasProductLossChanging(global::System.Boolean value);
        partial void OnHasProductLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductLossCost
        {
            get
            {
                return _ProductLossCost;
            }
            set
            {
                OnProductLossCostChanging(value);
                ReportPropertyChanging("ProductLossCost");
                _ProductLossCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductLossCost");
                OnProductLossCostChanged();
            }
        }
        private global::System.Double _ProductLossCost;
        partial void OnProductLossCostChanging(global::System.Double value);
        partial void OnProductLossCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductTransferStatus
        {
            get
            {
                return _ProductTransferStatus;
            }
            set
            {
                OnProductTransferStatusChanging(value);
                ReportPropertyChanging("ProductTransferStatus");
                _ProductTransferStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductTransferStatus");
                OnProductTransferStatusChanged();
            }
        }
        private global::System.String _ProductTransferStatus;
        partial void OnProductTransferStatusChanging(global::System.String value);
        partial void OnProductTransferStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferEmployee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_ProductTransferEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_ProductTransferEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_ProductTransferEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_ProductTransferEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferSendInventory", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_ProductTransferSendInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_ProductTransferSendInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_ProductTransferSendInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_ProductTransferSendInventory", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferDetail_ProductTransfer", "ProductTransferDetail")]
        public EntityCollection<ProductTransferDetail> ProductTransferDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductTransferDetail>("IspahaniAgroLTDModel.FK_ProductTransferDetail_ProductTransfer", "ProductTransferDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductTransferDetail>("IspahaniAgroLTDModel.FK_ProductTransferDetail_ProductTransfer", "ProductTransferDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_TransferIndent_ProductTransfer", "TransferIndent")]
        public TransferIndent TransferIndent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndent_ProductTransfer", "TransferIndent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndent_ProductTransfer", "TransferIndent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransferIndent> TransferIndentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndent_ProductTransfer", "TransferIndent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndent_ProductTransfer", "TransferIndent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="ProductTransferDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductTransferDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductTransferDetail object.
        /// </summary>
        /// <param name="productTransferId">Initial value of the ProductTransferId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="purchasePricePerUnit">Initial value of the PurchasePricePerUnit property.</param>
        /// <param name="transferQuantity">Initial value of the TransferQuantity property.</param>
        /// <param name="recievedQuantity">Initial value of the RecievedQuantity property.</param>
        public static ProductTransferDetail CreateProductTransferDetail(global::System.Int64 productTransferId, global::System.Int64 productId, global::System.String lotId, global::System.Double purchasePricePerUnit, global::System.Double transferQuantity, global::System.Double recievedQuantity)
        {
            ProductTransferDetail productTransferDetail = new ProductTransferDetail();
            productTransferDetail.ProductTransferId = productTransferId;
            productTransferDetail.ProductId = productId;
            productTransferDetail.LotId = lotId;
            productTransferDetail.PurchasePricePerUnit = purchasePricePerUnit;
            productTransferDetail.TransferQuantity = transferQuantity;
            productTransferDetail.RecievedQuantity = recievedQuantity;
            return productTransferDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductTransferId
        {
            get
            {
                return _ProductTransferId;
            }
            set
            {
                if (_ProductTransferId != value)
                {
                    OnProductTransferIdChanging(value);
                    ReportPropertyChanging("ProductTransferId");
                    _ProductTransferId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductTransferId");
                    OnProductTransferIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductTransferId;
        partial void OnProductTransferIdChanging(global::System.Int64 value);
        partial void OnProductTransferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PurchasePricePerUnit
        {
            get
            {
                return _PurchasePricePerUnit;
            }
            set
            {
                OnPurchasePricePerUnitChanging(value);
                ReportPropertyChanging("PurchasePricePerUnit");
                _PurchasePricePerUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePricePerUnit");
                OnPurchasePricePerUnitChanged();
            }
        }
        private global::System.Double _PurchasePricePerUnit;
        partial void OnPurchasePricePerUnitChanging(global::System.Double value);
        partial void OnPurchasePricePerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransferQuantity
        {
            get
            {
                return _TransferQuantity;
            }
            set
            {
                OnTransferQuantityChanging(value);
                ReportPropertyChanging("TransferQuantity");
                _TransferQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferQuantity");
                OnTransferQuantityChanged();
            }
        }
        private global::System.Double _TransferQuantity;
        partial void OnTransferQuantityChanging(global::System.Double value);
        partial void OnTransferQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RecievedQuantity
        {
            get
            {
                return _RecievedQuantity;
            }
            set
            {
                OnRecievedQuantityChanging(value);
                ReportPropertyChanging("RecievedQuantity");
                _RecievedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecievedQuantity");
                OnRecievedQuantityChanged();
            }
        }
        private global::System.Double _RecievedQuantity;
        partial void OnRecievedQuantityChanging(global::System.Double value);
        partial void OnRecievedQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferDetail_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferDetail_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferDetail_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferDetail_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferDetail_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferDetail_ProductTransfer", "ProductTransfer")]
        public ProductTransfer ProductTransfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferDetail_ProductTransfer", "ProductTransfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferDetail_ProductTransfer", "ProductTransfer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductTransfer> ProductTransferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferDetail_ProductTransfer", "ProductTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductTransfer>("IspahaniAgroLTDModel.FK_ProductTransferDetail_ProductTransfer", "ProductTransfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Promotion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Promotion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Promotion object.
        /// </summary>
        /// <param name="promotionId">Initial value of the PromotionId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="startAt">Initial value of the StartAt property.</param>
        /// <param name="endAt">Initial value of the EndAt property.</param>
        /// <param name="promotionTitle">Initial value of the PromotionTitle property.</param>
        /// <param name="promotionProductName">Initial value of the PromotionProductName property.</param>
        /// <param name="promotionProductQuantity">Initial value of the PromotionProductQuantity property.</param>
        /// <param name="productPrice">Initial value of the ProductPrice property.</param>
        /// <param name="productQuantity">Initial value of the ProductQuantity property.</param>
        public static Promotion CreatePromotion(global::System.Int64 promotionId, global::System.Int64 productId, global::System.DateTime startAt, global::System.DateTime endAt, global::System.String promotionTitle, global::System.String promotionProductName, global::System.Double promotionProductQuantity, global::System.Double productPrice, global::System.Double productQuantity)
        {
            Promotion promotion = new Promotion();
            promotion.PromotionId = promotionId;
            promotion.ProductId = productId;
            promotion.StartAt = startAt;
            promotion.EndAt = endAt;
            promotion.PromotionTitle = promotionTitle;
            promotion.PromotionProductName = promotionProductName;
            promotion.PromotionProductQuantity = promotionProductQuantity;
            promotion.ProductPrice = productPrice;
            promotion.ProductQuantity = productQuantity;
            return promotion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PromotionId
        {
            get
            {
                return _PromotionId;
            }
            set
            {
                if (_PromotionId != value)
                {
                    OnPromotionIdChanging(value);
                    ReportPropertyChanging("PromotionId");
                    _PromotionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromotionId");
                    OnPromotionIdChanged();
                }
            }
        }
        private global::System.Int64 _PromotionId;
        partial void OnPromotionIdChanging(global::System.Int64 value);
        partial void OnPromotionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartAt
        {
            get
            {
                return _StartAt;
            }
            set
            {
                OnStartAtChanging(value);
                ReportPropertyChanging("StartAt");
                _StartAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartAt");
                OnStartAtChanged();
            }
        }
        private global::System.DateTime _StartAt;
        partial void OnStartAtChanging(global::System.DateTime value);
        partial void OnStartAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndAt
        {
            get
            {
                return _EndAt;
            }
            set
            {
                OnEndAtChanging(value);
                ReportPropertyChanging("EndAt");
                _EndAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndAt");
                OnEndAtChanged();
            }
        }
        private global::System.DateTime _EndAt;
        partial void OnEndAtChanging(global::System.DateTime value);
        partial void OnEndAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromotionTitle
        {
            get
            {
                return _PromotionTitle;
            }
            set
            {
                OnPromotionTitleChanging(value);
                ReportPropertyChanging("PromotionTitle");
                _PromotionTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromotionTitle");
                OnPromotionTitleChanged();
            }
        }
        private global::System.String _PromotionTitle;
        partial void OnPromotionTitleChanging(global::System.String value);
        partial void OnPromotionTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromotionProductName
        {
            get
            {
                return _PromotionProductName;
            }
            set
            {
                OnPromotionProductNameChanging(value);
                ReportPropertyChanging("PromotionProductName");
                _PromotionProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromotionProductName");
                OnPromotionProductNameChanged();
            }
        }
        private global::System.String _PromotionProductName;
        partial void OnPromotionProductNameChanging(global::System.String value);
        partial void OnPromotionProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PromotionProductQuantity
        {
            get
            {
                return _PromotionProductQuantity;
            }
            set
            {
                OnPromotionProductQuantityChanging(value);
                ReportPropertyChanging("PromotionProductQuantity");
                _PromotionProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromotionProductQuantity");
                OnPromotionProductQuantityChanged();
            }
        }
        private global::System.Double _PromotionProductQuantity;
        partial void OnPromotionProductQuantityChanging(global::System.Double value);
        partial void OnPromotionProductQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductPrice
        {
            get
            {
                return _ProductPrice;
            }
            set
            {
                OnProductPriceChanging(value);
                ReportPropertyChanging("ProductPrice");
                _ProductPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPrice");
                OnProductPriceChanged();
            }
        }
        private global::System.Double _ProductPrice;
        partial void OnProductPriceChanging(global::System.Double value);
        partial void OnProductPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductQuantity
        {
            get
            {
                return _ProductQuantity;
            }
            set
            {
                OnProductQuantityChanging(value);
                ReportPropertyChanging("ProductQuantity");
                _ProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductQuantity");
                OnProductQuantityChanged();
            }
        }
        private global::System.Double _ProductQuantity;
        partial void OnProductQuantityChanging(global::System.Double value);
        partial void OnProductQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductPromotion", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPromotion", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPromotion", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPromotion", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductPromotion", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="regionName">Initial value of the RegionName property.</param>
        /// <param name="districtName">Initial value of the DistrictName property.</param>
        public static Region CreateRegion(global::System.Int64 regionId, global::System.String regionName, global::System.String districtName)
        {
            Region region = new Region();
            region.RegionId = regionId;
            region.RegionName = regionName;
            region.DistrictName = districtName;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int64 _RegionId;
        partial void OnRegionIdChanging(global::System.Int64 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DistrictName
        {
            get
            {
                return _DistrictName;
            }
            set
            {
                OnDistrictNameChanging(value);
                ReportPropertyChanging("DistrictName");
                _DistrictName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DistrictName");
                OnDistrictNameChanged();
            }
        }
        private global::System.String _DistrictName;
        partial void OnDistrictNameChanging(global::System.String value);
        partial void OnDistrictNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerRegion", "Dealer")]
        public EntityCollection<Dealer> Dealers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dealer>("IspahaniAgroLTDModel.FK_DealerRegion", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dealer>("IspahaniAgroLTDModel.FK_DealerRegion", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeRegion", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("IspahaniAgroLTDModel.FK_EmployeeRegion", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("IspahaniAgroLTDModel.FK_EmployeeRegion", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RegionExpenditure", "Expenditure")]
        public EntityCollection<Expenditure> Expenditures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expenditure>("IspahaniAgroLTDModel.FK_RegionExpenditure", "Expenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expenditure>("IspahaniAgroLTDModel.FK_RegionExpenditure", "Expenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RegionInventory", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("IspahaniAgroLTDModel.FK_RegionInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("IspahaniAgroLTDModel.FK_RegionInventory", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RegionRegionTarget", "RegionTarget")]
        public EntityCollection<RegionTarget> RegionTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegionTarget>("IspahaniAgroLTDModel.FK_RegionRegionTarget", "RegionTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegionTarget>("IspahaniAgroLTDModel.FK_RegionRegionTarget", "RegionTarget", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="RegionTarget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionTarget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionTarget object.
        /// </summary>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="targetQuantity">Initial value of the TargetQuantity property.</param>
        /// <param name="achievedAmount">Initial value of the AchievedAmount property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="distributedQuantity">Initial value of the DistributedQuantity property.</param>
        /// <param name="salesReturnQuantity">Initial value of the SalesReturnQuantity property.</param>
        /// <param name="transportationLossQuantity">Initial value of the TransportationLossQuantity property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="distributedAmount">Initial value of the DistributedAmount property.</param>
        public static RegionTarget CreateRegionTarget(global::System.Int64 regionId, global::System.Double targetQuantity, global::System.Double achievedAmount, global::System.Int64 productId, global::System.Double distributedQuantity, global::System.Double salesReturnQuantity, global::System.Double transportationLossQuantity, global::System.Int64 seasonId, global::System.Double distributedAmount)
        {
            RegionTarget regionTarget = new RegionTarget();
            regionTarget.RegionId = regionId;
            regionTarget.TargetQuantity = targetQuantity;
            regionTarget.AchievedAmount = achievedAmount;
            regionTarget.ProductId = productId;
            regionTarget.DistributedQuantity = distributedQuantity;
            regionTarget.SalesReturnQuantity = salesReturnQuantity;
            regionTarget.TransportationLossQuantity = transportationLossQuantity;
            regionTarget.SeasonId = seasonId;
            regionTarget.DistributedAmount = distributedAmount;
            return regionTarget;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int64 _RegionId;
        partial void OnRegionIdChanging(global::System.Int64 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TargetQuantity
        {
            get
            {
                return _TargetQuantity;
            }
            set
            {
                OnTargetQuantityChanging(value);
                ReportPropertyChanging("TargetQuantity");
                _TargetQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetQuantity");
                OnTargetQuantityChanged();
            }
        }
        private global::System.Double _TargetQuantity;
        partial void OnTargetQuantityChanging(global::System.Double value);
        partial void OnTargetQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AchievedAmount
        {
            get
            {
                return _AchievedAmount;
            }
            set
            {
                OnAchievedAmountChanging(value);
                ReportPropertyChanging("AchievedAmount");
                _AchievedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchievedAmount");
                OnAchievedAmountChanged();
            }
        }
        private global::System.Double _AchievedAmount;
        partial void OnAchievedAmountChanging(global::System.Double value);
        partial void OnAchievedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DistributedQuantity
        {
            get
            {
                return _DistributedQuantity;
            }
            set
            {
                OnDistributedQuantityChanging(value);
                ReportPropertyChanging("DistributedQuantity");
                _DistributedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributedQuantity");
                OnDistributedQuantityChanged();
            }
        }
        private global::System.Double _DistributedQuantity;
        partial void OnDistributedQuantityChanging(global::System.Double value);
        partial void OnDistributedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SalesReturnQuantity
        {
            get
            {
                return _SalesReturnQuantity;
            }
            set
            {
                OnSalesReturnQuantityChanging(value);
                ReportPropertyChanging("SalesReturnQuantity");
                _SalesReturnQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesReturnQuantity");
                OnSalesReturnQuantityChanged();
            }
        }
        private global::System.Double _SalesReturnQuantity;
        partial void OnSalesReturnQuantityChanging(global::System.Double value);
        partial void OnSalesReturnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransportationLossQuantity
        {
            get
            {
                return _TransportationLossQuantity;
            }
            set
            {
                OnTransportationLossQuantityChanging(value);
                ReportPropertyChanging("TransportationLossQuantity");
                _TransportationLossQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransportationLossQuantity");
                OnTransportationLossQuantityChanged();
            }
        }
        private global::System.Double _TransportationLossQuantity;
        partial void OnTransportationLossQuantityChanging(global::System.Double value);
        partial void OnTransportationLossQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DistributedAmount
        {
            get
            {
                return _DistributedAmount;
            }
            set
            {
                OnDistributedAmountChanging(value);
                ReportPropertyChanging("DistributedAmount");
                _DistributedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributedAmount");
                OnDistributedAmountChanged();
            }
        }
        private global::System.Double _DistributedAmount;
        partial void OnDistributedAmountChanging(global::System.Double value);
        partial void OnDistributedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesPeriod
        {
            get
            {
                return _SalesPeriod;
            }
            set
            {
                OnSalesPeriodChanging(value);
                ReportPropertyChanging("SalesPeriod");
                _SalesPeriod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesPeriod");
                OnSalesPeriodChanged();
            }
        }
        private global::System.String _SalesPeriod;
        partial void OnSalesPeriodChanging(global::System.String value);
        partial void OnSalesPeriodChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductRegionTarget", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRegionTarget", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRegionTarget", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRegionTarget", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRegionTarget", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RegionRegionTarget", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionRegionTarget", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionRegionTarget", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionRegionTarget", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("IspahaniAgroLTDModel.FK_RegionRegionTarget", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonRegionTargets", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonRegionTargets", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonRegionTargets", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonRegionTargets", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonRegionTargets", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Requisition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Requisition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Requisition object.
        /// </summary>
        /// <param name="requisitionId">Initial value of the RequisitionId property.</param>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="issuedById">Initial value of the IssuedById property.</param>
        /// <param name="issuedToId">Initial value of the IssuedToId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="dateOfApproval">Initial value of the DateOfApproval property.</param>
        /// <param name="requisitionType">Initial value of the RequisitionType property.</param>
        public static Requisition CreateRequisition(global::System.Int64 requisitionId, global::System.Int64 inventoryId, global::System.DateTime dateOfIssue, global::System.Int64 issuedById, global::System.Int64 issuedToId, global::System.String status, global::System.DateTime dateOfApproval, global::System.String requisitionType)
        {
            Requisition requisition = new Requisition();
            requisition.RequisitionId = requisitionId;
            requisition.InventoryId = inventoryId;
            requisition.DateOfIssue = dateOfIssue;
            requisition.IssuedById = issuedById;
            requisition.IssuedToId = issuedToId;
            requisition.Status = status;
            requisition.DateOfApproval = dateOfApproval;
            requisition.RequisitionType = requisitionType;
            return requisition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequisitionId
        {
            get
            {
                return _RequisitionId;
            }
            set
            {
                if (_RequisitionId != value)
                {
                    OnRequisitionIdChanging(value);
                    ReportPropertyChanging("RequisitionId");
                    _RequisitionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequisitionId");
                    OnRequisitionIdChanged();
                }
            }
        }
        private global::System.Int64 _RequisitionId;
        partial void OnRequisitionIdChanging(global::System.Int64 value);
        partial void OnRequisitionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                OnInventoryIdChanging(value);
                ReportPropertyChanging("InventoryId");
                _InventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryId");
                OnInventoryIdChanged();
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedById
        {
            get
            {
                return _IssuedById;
            }
            set
            {
                OnIssuedByIdChanging(value);
                ReportPropertyChanging("IssuedById");
                _IssuedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedById");
                OnIssuedByIdChanged();
            }
        }
        private global::System.Int64 _IssuedById;
        partial void OnIssuedByIdChanging(global::System.Int64 value);
        partial void OnIssuedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedToId
        {
            get
            {
                return _IssuedToId;
            }
            set
            {
                OnIssuedToIdChanging(value);
                ReportPropertyChanging("IssuedToId");
                _IssuedToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedToId");
                OnIssuedToIdChanged();
            }
        }
        private global::System.Int64 _IssuedToId;
        partial void OnIssuedToIdChanging(global::System.Int64 value);
        partial void OnIssuedToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfApproval
        {
            get
            {
                return _DateOfApproval;
            }
            set
            {
                OnDateOfApprovalChanging(value);
                ReportPropertyChanging("DateOfApproval");
                _DateOfApproval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfApproval");
                OnDateOfApprovalChanged();
            }
        }
        private global::System.DateTime _DateOfApproval;
        partial void OnDateOfApprovalChanging(global::System.DateTime value);
        partial void OnDateOfApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequisitionType
        {
            get
            {
                return _RequisitionType;
            }
            set
            {
                OnRequisitionTypeChanging(value);
                ReportPropertyChanging("RequisitionType");
                _RequisitionType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RequisitionType");
                OnRequisitionTypeChanged();
            }
        }
        private global::System.String _RequisitionType;
        partial void OnRequisitionTypeChanging(global::System.String value);
        partial void OnRequisitionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequisitionCode
        {
            get
            {
                return _RequisitionCode;
            }
            set
            {
                OnRequisitionCodeChanging(value);
                ReportPropertyChanging("RequisitionCode");
                _RequisitionCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequisitionCode");
                OnRequisitionCodeChanged();
            }
        }
        private global::System.String _RequisitionCode;
        partial void OnRequisitionCodeChanging(global::System.String value);
        partial void OnRequisitionCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeRequisition", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeRequisition1", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition1", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition1", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeRequisition1", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryRequisition", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryRequisition", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryRequisition", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryRequisition", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryRequisition", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RequisitionRequisitionPackageInfo", "RequisitionPackageInfo")]
        public EntityCollection<RequisitionPackageInfo> RequisitionPackageInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequisitionPackageInfo>("IspahaniAgroLTDModel.FK_RequisitionRequisitionPackageInfo", "RequisitionPackageInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequisitionPackageInfo>("IspahaniAgroLTDModel.FK_RequisitionRequisitionPackageInfo", "RequisitionPackageInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RequisitionRequisitionProductInfo", "RequisitionProductInfo")]
        public EntityCollection<RequisitionProductInfo> RequisitionProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequisitionProductInfo>("IspahaniAgroLTDModel.FK_RequisitionRequisitionProductInfo", "RequisitionProductInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequisitionProductInfo>("IspahaniAgroLTDModel.FK_RequisitionRequisitionProductInfo", "RequisitionProductInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="RequisitionPackageInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequisitionPackageInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequisitionPackageInfo object.
        /// </summary>
        /// <param name="requisitionId">Initial value of the RequisitionId property.</param>
        /// <param name="packageId">Initial value of the PackageId property.</param>
        /// <param name="placedQuantity">Initial value of the PlacedQuantity property.</param>
        /// <param name="acceptedQuantity">Initial value of the AcceptedQuantity property.</param>
        public static RequisitionPackageInfo CreateRequisitionPackageInfo(global::System.Int64 requisitionId, global::System.Int64 packageId, global::System.Double placedQuantity, global::System.Double acceptedQuantity)
        {
            RequisitionPackageInfo requisitionPackageInfo = new RequisitionPackageInfo();
            requisitionPackageInfo.RequisitionId = requisitionId;
            requisitionPackageInfo.PackageId = packageId;
            requisitionPackageInfo.PlacedQuantity = placedQuantity;
            requisitionPackageInfo.AcceptedQuantity = acceptedQuantity;
            return requisitionPackageInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequisitionId
        {
            get
            {
                return _RequisitionId;
            }
            set
            {
                if (_RequisitionId != value)
                {
                    OnRequisitionIdChanging(value);
                    ReportPropertyChanging("RequisitionId");
                    _RequisitionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequisitionId");
                    OnRequisitionIdChanged();
                }
            }
        }
        private global::System.Int64 _RequisitionId;
        partial void OnRequisitionIdChanging(global::System.Int64 value);
        partial void OnRequisitionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PackageId
        {
            get
            {
                return _PackageId;
            }
            set
            {
                if (_PackageId != value)
                {
                    OnPackageIdChanging(value);
                    ReportPropertyChanging("PackageId");
                    _PackageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageId");
                    OnPackageIdChanged();
                }
            }
        }
        private global::System.Int64 _PackageId;
        partial void OnPackageIdChanging(global::System.Int64 value);
        partial void OnPackageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PlacedQuantity
        {
            get
            {
                return _PlacedQuantity;
            }
            set
            {
                OnPlacedQuantityChanging(value);
                ReportPropertyChanging("PlacedQuantity");
                _PlacedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedQuantity");
                OnPlacedQuantityChanged();
            }
        }
        private global::System.Double _PlacedQuantity;
        partial void OnPlacedQuantityChanging(global::System.Double value);
        partial void OnPlacedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AcceptedQuantity
        {
            get
            {
                return _AcceptedQuantity;
            }
            set
            {
                OnAcceptedQuantityChanging(value);
                ReportPropertyChanging("AcceptedQuantity");
                _AcceptedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedQuantity");
                OnAcceptedQuantityChanged();
            }
        }
        private global::System.Double _AcceptedQuantity;
        partial void OnAcceptedQuantityChanging(global::System.Double value);
        partial void OnAcceptedQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageRequisitionPackageInfo", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageRequisitionPackageInfo", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageRequisitionPackageInfo", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageRequisitionPackageInfo", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageRequisitionPackageInfo", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RequisitionRequisitionPackageInfo", "Requisition")]
        public Requisition Requisition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionPackageInfo", "Requisition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionPackageInfo", "Requisition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Requisition> RequisitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionPackageInfo", "Requisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionPackageInfo", "Requisition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="RequisitionProductInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequisitionProductInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequisitionProductInfo object.
        /// </summary>
        /// <param name="requisitionId">Initial value of the RequisitionId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="placedQuantity">Initial value of the PlacedQuantity property.</param>
        /// <param name="lotQuantity">Initial value of the LotQuantity property.</param>
        public static RequisitionProductInfo CreateRequisitionProductInfo(global::System.Int64 requisitionId, global::System.Int64 productId, global::System.String lotId, global::System.Double placedQuantity, global::System.Double lotQuantity)
        {
            RequisitionProductInfo requisitionProductInfo = new RequisitionProductInfo();
            requisitionProductInfo.RequisitionId = requisitionId;
            requisitionProductInfo.ProductId = productId;
            requisitionProductInfo.LotId = lotId;
            requisitionProductInfo.PlacedQuantity = placedQuantity;
            requisitionProductInfo.LotQuantity = lotQuantity;
            return requisitionProductInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequisitionId
        {
            get
            {
                return _RequisitionId;
            }
            set
            {
                if (_RequisitionId != value)
                {
                    OnRequisitionIdChanging(value);
                    ReportPropertyChanging("RequisitionId");
                    _RequisitionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequisitionId");
                    OnRequisitionIdChanged();
                }
            }
        }
        private global::System.Int64 _RequisitionId;
        partial void OnRequisitionIdChanging(global::System.Int64 value);
        partial void OnRequisitionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PlacedQuantity
        {
            get
            {
                return _PlacedQuantity;
            }
            set
            {
                OnPlacedQuantityChanging(value);
                ReportPropertyChanging("PlacedQuantity");
                _PlacedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedQuantity");
                OnPlacedQuantityChanged();
            }
        }
        private global::System.Double _PlacedQuantity;
        partial void OnPlacedQuantityChanging(global::System.Double value);
        partial void OnPlacedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LotQuantity
        {
            get
            {
                return _LotQuantity;
            }
            set
            {
                OnLotQuantityChanging(value);
                ReportPropertyChanging("LotQuantity");
                _LotQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LotQuantity");
                OnLotQuantityChanged();
            }
        }
        private global::System.Double _LotQuantity;
        partial void OnLotQuantityChanging(global::System.Double value);
        partial void OnLotQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductRequisitionProductInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRequisitionProductInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRequisitionProductInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRequisitionProductInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductRequisitionProductInfo", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_RequisitionRequisitionProductInfo", "Requisition")]
        public Requisition Requisition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionProductInfo", "Requisition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionProductInfo", "Requisition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Requisition> RequisitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionProductInfo", "Requisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Requisition>("IspahaniAgroLTDModel.FK_RequisitionRequisitionProductInfo", "Requisition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="SalesOfficerTarget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOfficerTarget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesOfficerTarget object.
        /// </summary>
        /// <param name="salesOfficerId">Initial value of the SalesOfficerId property.</param>
        /// <param name="targetQuantity">Initial value of the TargetQuantity property.</param>
        /// <param name="achievedAmount">Initial value of the AchievedAmount property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="distributedQuantity">Initial value of the DistributedQuantity property.</param>
        /// <param name="transportationLossQuantity">Initial value of the TransportationLossQuantity property.</param>
        /// <param name="salesReturnQuantity">Initial value of the SalesReturnQuantity property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="distributedAmount">Initial value of the DistributedAmount property.</param>
        public static SalesOfficerTarget CreateSalesOfficerTarget(global::System.Int64 salesOfficerId, global::System.Double targetQuantity, global::System.Double achievedAmount, global::System.Int64 productId, global::System.Double distributedQuantity, global::System.Double transportationLossQuantity, global::System.Double salesReturnQuantity, global::System.Int64 seasonId, global::System.Double distributedAmount)
        {
            SalesOfficerTarget salesOfficerTarget = new SalesOfficerTarget();
            salesOfficerTarget.SalesOfficerId = salesOfficerId;
            salesOfficerTarget.TargetQuantity = targetQuantity;
            salesOfficerTarget.AchievedAmount = achievedAmount;
            salesOfficerTarget.ProductId = productId;
            salesOfficerTarget.DistributedQuantity = distributedQuantity;
            salesOfficerTarget.TransportationLossQuantity = transportationLossQuantity;
            salesOfficerTarget.SalesReturnQuantity = salesReturnQuantity;
            salesOfficerTarget.SeasonId = seasonId;
            salesOfficerTarget.DistributedAmount = distributedAmount;
            return salesOfficerTarget;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesOfficerId
        {
            get
            {
                return _SalesOfficerId;
            }
            set
            {
                if (_SalesOfficerId != value)
                {
                    OnSalesOfficerIdChanging(value);
                    ReportPropertyChanging("SalesOfficerId");
                    _SalesOfficerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesOfficerId");
                    OnSalesOfficerIdChanged();
                }
            }
        }
        private global::System.Int64 _SalesOfficerId;
        partial void OnSalesOfficerIdChanging(global::System.Int64 value);
        partial void OnSalesOfficerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TargetQuantity
        {
            get
            {
                return _TargetQuantity;
            }
            set
            {
                OnTargetQuantityChanging(value);
                ReportPropertyChanging("TargetQuantity");
                _TargetQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetQuantity");
                OnTargetQuantityChanged();
            }
        }
        private global::System.Double _TargetQuantity;
        partial void OnTargetQuantityChanging(global::System.Double value);
        partial void OnTargetQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AchievedAmount
        {
            get
            {
                return _AchievedAmount;
            }
            set
            {
                OnAchievedAmountChanging(value);
                ReportPropertyChanging("AchievedAmount");
                _AchievedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchievedAmount");
                OnAchievedAmountChanged();
            }
        }
        private global::System.Double _AchievedAmount;
        partial void OnAchievedAmountChanging(global::System.Double value);
        partial void OnAchievedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DistributedQuantity
        {
            get
            {
                return _DistributedQuantity;
            }
            set
            {
                OnDistributedQuantityChanging(value);
                ReportPropertyChanging("DistributedQuantity");
                _DistributedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributedQuantity");
                OnDistributedQuantityChanged();
            }
        }
        private global::System.Double _DistributedQuantity;
        partial void OnDistributedQuantityChanging(global::System.Double value);
        partial void OnDistributedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransportationLossQuantity
        {
            get
            {
                return _TransportationLossQuantity;
            }
            set
            {
                OnTransportationLossQuantityChanging(value);
                ReportPropertyChanging("TransportationLossQuantity");
                _TransportationLossQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransportationLossQuantity");
                OnTransportationLossQuantityChanged();
            }
        }
        private global::System.Double _TransportationLossQuantity;
        partial void OnTransportationLossQuantityChanging(global::System.Double value);
        partial void OnTransportationLossQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SalesReturnQuantity
        {
            get
            {
                return _SalesReturnQuantity;
            }
            set
            {
                OnSalesReturnQuantityChanging(value);
                ReportPropertyChanging("SalesReturnQuantity");
                _SalesReturnQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesReturnQuantity");
                OnSalesReturnQuantityChanged();
            }
        }
        private global::System.Double _SalesReturnQuantity;
        partial void OnSalesReturnQuantityChanging(global::System.Double value);
        partial void OnSalesReturnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DistributedAmount
        {
            get
            {
                return _DistributedAmount;
            }
            set
            {
                OnDistributedAmountChanging(value);
                ReportPropertyChanging("DistributedAmount");
                _DistributedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributedAmount");
                OnDistributedAmountChanged();
            }
        }
        private global::System.Double _DistributedAmount;
        partial void OnDistributedAmountChanging(global::System.Double value);
        partial void OnDistributedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesPeriod
        {
            get
            {
                return _SalesPeriod;
            }
            set
            {
                OnSalesPeriodChanging(value);
                ReportPropertyChanging("SalesPeriod");
                _SalesPeriod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesPeriod");
                OnSalesPeriodChanged();
            }
        }
        private global::System.String _SalesPeriod;
        partial void OnSalesPeriodChanging(global::System.String value);
        partial void OnSalesPeriodChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeSalesOfficerTarget", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesOfficerTarget", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesOfficerTarget", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesOfficerTarget", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesOfficerTarget", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SalesOfficerTargetProduct", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_SalesOfficerTargetProduct", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_SalesOfficerTargetProduct", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_SalesOfficerTargetProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_SalesOfficerTargetProduct", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonSalesOfficerTargets", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonSalesOfficerTargets", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonSalesOfficerTargets", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonSalesOfficerTargets", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonSalesOfficerTargets", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="SalesReturn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesReturn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesReturn object.
        /// </summary>
        /// <param name="salesReturnId">Initial value of the SalesReturnId property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="rMId">Initial value of the RMId property.</param>
        /// <param name="totalPlacedAmount">Initial value of the TotalPlacedAmount property.</param>
        /// <param name="totalAcceptedAmount">Initial value of the TotalAcceptedAmount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="sendToInventoryId">Initial value of the SendToInventoryId property.</param>
        public static SalesReturn CreateSalesReturn(global::System.Int64 salesReturnId, global::System.DateTime dateOfIssue, global::System.Int64 dealerId, global::System.Int64 rMId, global::System.Double totalPlacedAmount, global::System.Double totalAcceptedAmount, global::System.String status, global::System.Int64 sendToInventoryId)
        {
            SalesReturn salesReturn = new SalesReturn();
            salesReturn.SalesReturnId = salesReturnId;
            salesReturn.DateOfIssue = dateOfIssue;
            salesReturn.DealerId = dealerId;
            salesReturn.RMId = rMId;
            salesReturn.TotalPlacedAmount = totalPlacedAmount;
            salesReturn.TotalAcceptedAmount = totalAcceptedAmount;
            salesReturn.Status = status;
            salesReturn.SendToInventoryId = sendToInventoryId;
            return salesReturn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesReturnId
        {
            get
            {
                return _SalesReturnId;
            }
            set
            {
                if (_SalesReturnId != value)
                {
                    OnSalesReturnIdChanging(value);
                    ReportPropertyChanging("SalesReturnId");
                    _SalesReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesReturnId");
                    OnSalesReturnIdChanged();
                }
            }
        }
        private global::System.Int64 _SalesReturnId;
        partial void OnSalesReturnIdChanging(global::System.Int64 value);
        partial void OnSalesReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                OnDealerIdChanging(value);
                ReportPropertyChanging("DealerId");
                _DealerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerId");
                OnDealerIdChanged();
            }
        }
        private global::System.Int64 _DealerId;
        partial void OnDealerIdChanging(global::System.Int64 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RMId
        {
            get
            {
                return _RMId;
            }
            set
            {
                OnRMIdChanging(value);
                ReportPropertyChanging("RMId");
                _RMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RMId");
                OnRMIdChanged();
            }
        }
        private global::System.Int64 _RMId;
        partial void OnRMIdChanging(global::System.Int64 value);
        partial void OnRMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalPlacedAmount
        {
            get
            {
                return _TotalPlacedAmount;
            }
            set
            {
                OnTotalPlacedAmountChanging(value);
                ReportPropertyChanging("TotalPlacedAmount");
                _TotalPlacedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPlacedAmount");
                OnTotalPlacedAmountChanged();
            }
        }
        private global::System.Double _TotalPlacedAmount;
        partial void OnTotalPlacedAmountChanging(global::System.Double value);
        partial void OnTotalPlacedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAcceptedAmount
        {
            get
            {
                return _TotalAcceptedAmount;
            }
            set
            {
                OnTotalAcceptedAmountChanging(value);
                ReportPropertyChanging("TotalAcceptedAmount");
                _TotalAcceptedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAcceptedAmount");
                OnTotalAcceptedAmountChanged();
            }
        }
        private global::System.Double _TotalAcceptedAmount;
        partial void OnTotalAcceptedAmountChanging(global::System.Double value);
        partial void OnTotalAcceptedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesReturnCode
        {
            get
            {
                return _SalesReturnCode;
            }
            set
            {
                OnSalesReturnCodeChanging(value);
                ReportPropertyChanging("SalesReturnCode");
                _SalesReturnCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesReturnCode");
                OnSalesReturnCodeChanged();
            }
        }
        private global::System.String _SalesReturnCode;
        partial void OnSalesReturnCodeChanging(global::System.String value);
        partial void OnSalesReturnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SendToInventoryId
        {
            get
            {
                return _SendToInventoryId;
            }
            set
            {
                OnSendToInventoryIdChanging(value);
                ReportPropertyChanging("SendToInventoryId");
                _SendToInventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendToInventoryId");
                OnSendToInventoryIdChanged();
            }
        }
        private global::System.Int64 _SendToInventoryId;
        partial void OnSendToInventoryIdChanging(global::System.Int64 value);
        partial void OnSendToInventoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_DealerSalesReturn", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerSalesReturn", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerSalesReturn", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerSalesReturn", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_DealerSalesReturn", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeSalesReturn", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesReturn", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesReturn", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesReturn", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeSalesReturn", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventorySalesReturns", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventorySalesReturns", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventorySalesReturns", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventorySalesReturns", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventorySalesReturns", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SalesReturnSalesReturnInfo", "SalesReturnInfo")]
        public EntityCollection<SalesReturnInfo> SalesReturnInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesReturnInfo>("IspahaniAgroLTDModel.FK_SalesReturnSalesReturnInfo", "SalesReturnInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesReturnInfo>("IspahaniAgroLTDModel.FK_SalesReturnSalesReturnInfo", "SalesReturnInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="SalesReturnInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesReturnInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesReturnInfo object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="salesReturnId">Initial value of the SalesReturnId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="productPrice">Initial value of the ProductPrice property.</param>
        /// <param name="placedQuantity">Initial value of the PlacedQuantity property.</param>
        /// <param name="acceptedQuantity">Initial value of the AcceptedQuantity property.</param>
        /// <param name="billId">Initial value of the BillId property.</param>
        public static SalesReturnInfo CreateSalesReturnInfo(global::System.Int64 productId, global::System.Int64 salesReturnId, global::System.String lotId, global::System.Double productPrice, global::System.Double placedQuantity, global::System.Double acceptedQuantity, global::System.Int64 billId)
        {
            SalesReturnInfo salesReturnInfo = new SalesReturnInfo();
            salesReturnInfo.ProductId = productId;
            salesReturnInfo.SalesReturnId = salesReturnId;
            salesReturnInfo.LotId = lotId;
            salesReturnInfo.ProductPrice = productPrice;
            salesReturnInfo.PlacedQuantity = placedQuantity;
            salesReturnInfo.AcceptedQuantity = acceptedQuantity;
            salesReturnInfo.BillId = billId;
            return salesReturnInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesReturnId
        {
            get
            {
                return _SalesReturnId;
            }
            set
            {
                if (_SalesReturnId != value)
                {
                    OnSalesReturnIdChanging(value);
                    ReportPropertyChanging("SalesReturnId");
                    _SalesReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesReturnId");
                    OnSalesReturnIdChanged();
                }
            }
        }
        private global::System.Int64 _SalesReturnId;
        partial void OnSalesReturnIdChanging(global::System.Int64 value);
        partial void OnSalesReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductPrice
        {
            get
            {
                return _ProductPrice;
            }
            set
            {
                OnProductPriceChanging(value);
                ReportPropertyChanging("ProductPrice");
                _ProductPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPrice");
                OnProductPriceChanged();
            }
        }
        private global::System.Double _ProductPrice;
        partial void OnProductPriceChanging(global::System.Double value);
        partial void OnProductPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PlacedQuantity
        {
            get
            {
                return _PlacedQuantity;
            }
            set
            {
                OnPlacedQuantityChanging(value);
                ReportPropertyChanging("PlacedQuantity");
                _PlacedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedQuantity");
                OnPlacedQuantityChanged();
            }
        }
        private global::System.Double _PlacedQuantity;
        partial void OnPlacedQuantityChanging(global::System.Double value);
        partial void OnPlacedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AcceptedQuantity
        {
            get
            {
                return _AcceptedQuantity;
            }
            set
            {
                OnAcceptedQuantityChanging(value);
                ReportPropertyChanging("AcceptedQuantity");
                _AcceptedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedQuantity");
                OnAcceptedQuantityChanged();
            }
        }
        private global::System.Double _AcceptedQuantity;
        partial void OnAcceptedQuantityChanging(global::System.Double value);
        partial void OnAcceptedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillId
        {
            get
            {
                return _BillId;
            }
            set
            {
                if (_BillId != value)
                {
                    OnBillIdChanging(value);
                    ReportPropertyChanging("BillId");
                    _BillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillId");
                    OnBillIdChanged();
                }
            }
        }
        private global::System.Int64 _BillId;
        partial void OnBillIdChanging(global::System.Int64 value);
        partial void OnBillIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillSalesReturnInfoes", "Bill")]
        public Bill Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillSalesReturnInfoes", "Bill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillSalesReturnInfoes", "Bill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> BillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillSalesReturnInfoes", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillSalesReturnInfoes", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductSalesReturnInfo", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductSalesReturnInfo", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductSalesReturnInfo", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductSalesReturnInfo", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductSalesReturnInfo", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SalesReturnSalesReturnInfo", "SalesReturn")]
        public SalesReturn SalesReturn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesReturn>("IspahaniAgroLTDModel.FK_SalesReturnSalesReturnInfo", "SalesReturn").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesReturn>("IspahaniAgroLTDModel.FK_SalesReturnSalesReturnInfo", "SalesReturn").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesReturn> SalesReturnReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesReturn>("IspahaniAgroLTDModel.FK_SalesReturnSalesReturnInfo", "SalesReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesReturn>("IspahaniAgroLTDModel.FK_SalesReturnSalesReturnInfo", "SalesReturn", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="Season")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Season : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Season object.
        /// </summary>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="seasonStartDate">Initial value of the SeasonStartDate property.</param>
        /// <param name="seasonEndDate">Initial value of the SeasonEndDate property.</param>
        /// <param name="seasonName">Initial value of the SeasonName property.</param>
        /// <param name="isCurrentSeason">Initial value of the IsCurrentSeason property.</param>
        /// <param name="hasClosed">Initial value of the HasClosed property.</param>
        public static Season CreateSeason(global::System.Int64 seasonId, global::System.DateTime seasonStartDate, global::System.DateTime seasonEndDate, global::System.String seasonName, global::System.Boolean isCurrentSeason, global::System.Boolean hasClosed)
        {
            Season season = new Season();
            season.SeasonId = seasonId;
            season.SeasonStartDate = seasonStartDate;
            season.SeasonEndDate = seasonEndDate;
            season.SeasonName = seasonName;
            season.IsCurrentSeason = isCurrentSeason;
            season.HasClosed = hasClosed;
            return season;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SeasonStartDate
        {
            get
            {
                return _SeasonStartDate;
            }
            set
            {
                OnSeasonStartDateChanging(value);
                ReportPropertyChanging("SeasonStartDate");
                _SeasonStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonStartDate");
                OnSeasonStartDateChanged();
            }
        }
        private global::System.DateTime _SeasonStartDate;
        partial void OnSeasonStartDateChanging(global::System.DateTime value);
        partial void OnSeasonStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SeasonEndDate
        {
            get
            {
                return _SeasonEndDate;
            }
            set
            {
                OnSeasonEndDateChanging(value);
                ReportPropertyChanging("SeasonEndDate");
                _SeasonEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonEndDate");
                OnSeasonEndDateChanged();
            }
        }
        private global::System.DateTime _SeasonEndDate;
        partial void OnSeasonEndDateChanging(global::System.DateTime value);
        partial void OnSeasonEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeasonName
        {
            get
            {
                return _SeasonName;
            }
            set
            {
                OnSeasonNameChanging(value);
                ReportPropertyChanging("SeasonName");
                _SeasonName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeasonName");
                OnSeasonNameChanged();
            }
        }
        private global::System.String _SeasonName;
        partial void OnSeasonNameChanging(global::System.String value);
        partial void OnSeasonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentSeason
        {
            get
            {
                return _IsCurrentSeason;
            }
            set
            {
                OnIsCurrentSeasonChanging(value);
                ReportPropertyChanging("IsCurrentSeason");
                _IsCurrentSeason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentSeason");
                OnIsCurrentSeasonChanged();
            }
        }
        private global::System.Boolean _IsCurrentSeason;
        partial void OnIsCurrentSeasonChanging(global::System.Boolean value);
        partial void OnIsCurrentSeasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasClosed
        {
            get
            {
                return _HasClosed;
            }
            set
            {
                OnHasClosedChanging(value);
                ReportPropertyChanging("HasClosed");
                _HasClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasClosed");
                OnHasClosedChanged();
            }
        }
        private global::System.Boolean _HasClosed;
        partial void OnHasClosedChanging(global::System.Boolean value);
        partial void OnHasClosedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonRegionTargets", "RegionTarget")]
        public EntityCollection<RegionTarget> RegionTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegionTarget>("IspahaniAgroLTDModel.FK_SeasonRegionTargets", "RegionTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegionTarget>("IspahaniAgroLTDModel.FK_SeasonRegionTargets", "RegionTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonSalesOfficerTargets", "SalesOfficerTarget")]
        public EntityCollection<SalesOfficerTarget> SalesOfficerTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOfficerTarget>("IspahaniAgroLTDModel.FK_SeasonSalesOfficerTargets", "SalesOfficerTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOfficerTarget>("IspahaniAgroLTDModel.FK_SeasonSalesOfficerTargets", "SalesOfficerTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryDealers", "YearSummaryDealer")]
        public EntityCollection<YearSummaryDealer> YearSummaryDealers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryDealer>("IspahaniAgroLTDModel.FK_SeasonYearSummaryDealers", "YearSummaryDealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryDealer>("IspahaniAgroLTDModel.FK_SeasonYearSummaryDealers", "YearSummaryDealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryInventoryPackages", "YearSummaryInventoryPackage")]
        public EntityCollection<YearSummaryInventoryPackage> YearSummaryInventoryPackages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryInventoryPackage>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryPackages", "YearSummaryInventoryPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryInventoryPackage>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryPackages", "YearSummaryInventoryPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryInventoryProducts", "YearSummaryInventoryProduct")]
        public EntityCollection<YearSummaryInventoryProduct> YearSummaryInventoryProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummaryInventoryProduct>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryProducts", "YearSummaryInventoryProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummaryInventoryProduct>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryProducts", "YearSummaryInventoryProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummarySOExpenditures", "YearSummarySOExpenditure")]
        public EntityCollection<YearSummarySOExpenditure> YearSummarySOExpenditures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<YearSummarySOExpenditure>("IspahaniAgroLTDModel.FK_SeasonYearSummarySOExpenditures", "YearSummarySOExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<YearSummarySOExpenditure>("IspahaniAgroLTDModel.FK_SeasonYearSummarySOExpenditures", "YearSummarySOExpenditure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="TransferIndent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferIndent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransferIndent object.
        /// </summary>
        /// <param name="transferIndentId">Initial value of the TransferIndentId property.</param>
        /// <param name="issuedFromInventoryId">Initial value of the IssuedFromInventoryId property.</param>
        /// <param name="issuedById">Initial value of the IssuedById property.</param>
        /// <param name="dateOfIssue">Initial value of the DateOfIssue property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="issuedToInventoryId">Initial value of the IssuedToInventoryId property.</param>
        /// <param name="issuedToSICId">Initial value of the IssuedToSICId property.</param>
        /// <param name="approvedByNSMId">Initial value of the ApprovedByNSMId property.</param>
        public static TransferIndent CreateTransferIndent(global::System.Int64 transferIndentId, global::System.Int64 issuedFromInventoryId, global::System.Int64 issuedById, global::System.DateTime dateOfIssue, global::System.String status, global::System.Int64 issuedToInventoryId, global::System.Int64 issuedToSICId, global::System.Int64 approvedByNSMId)
        {
            TransferIndent transferIndent = new TransferIndent();
            transferIndent.TransferIndentId = transferIndentId;
            transferIndent.IssuedFromInventoryId = issuedFromInventoryId;
            transferIndent.IssuedById = issuedById;
            transferIndent.DateOfIssue = dateOfIssue;
            transferIndent.Status = status;
            transferIndent.IssuedToInventoryId = issuedToInventoryId;
            transferIndent.IssuedToSICId = issuedToSICId;
            transferIndent.ApprovedByNSMId = approvedByNSMId;
            return transferIndent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransferIndentId
        {
            get
            {
                return _TransferIndentId;
            }
            set
            {
                if (_TransferIndentId != value)
                {
                    OnTransferIndentIdChanging(value);
                    ReportPropertyChanging("TransferIndentId");
                    _TransferIndentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransferIndentId");
                    OnTransferIndentIdChanged();
                }
            }
        }
        private global::System.Int64 _TransferIndentId;
        partial void OnTransferIndentIdChanging(global::System.Int64 value);
        partial void OnTransferIndentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransferIndentCode
        {
            get
            {
                return _TransferIndentCode;
            }
            set
            {
                OnTransferIndentCodeChanging(value);
                ReportPropertyChanging("TransferIndentCode");
                _TransferIndentCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransferIndentCode");
                OnTransferIndentCodeChanged();
            }
        }
        private global::System.String _TransferIndentCode;
        partial void OnTransferIndentCodeChanging(global::System.String value);
        partial void OnTransferIndentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedFromInventoryId
        {
            get
            {
                return _IssuedFromInventoryId;
            }
            set
            {
                OnIssuedFromInventoryIdChanging(value);
                ReportPropertyChanging("IssuedFromInventoryId");
                _IssuedFromInventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedFromInventoryId");
                OnIssuedFromInventoryIdChanged();
            }
        }
        private global::System.Int64 _IssuedFromInventoryId;
        partial void OnIssuedFromInventoryIdChanging(global::System.Int64 value);
        partial void OnIssuedFromInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedById
        {
            get
            {
                return _IssuedById;
            }
            set
            {
                OnIssuedByIdChanging(value);
                ReportPropertyChanging("IssuedById");
                _IssuedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedById");
                OnIssuedByIdChanged();
            }
        }
        private global::System.Int64 _IssuedById;
        partial void OnIssuedByIdChanging(global::System.Int64 value);
        partial void OnIssuedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfIssue
        {
            get
            {
                return _DateOfIssue;
            }
            set
            {
                OnDateOfIssueChanging(value);
                ReportPropertyChanging("DateOfIssue");
                _DateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfIssue");
                OnDateOfIssueChanged();
            }
        }
        private global::System.DateTime _DateOfIssue;
        partial void OnDateOfIssueChanging(global::System.DateTime value);
        partial void OnDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedToInventoryId
        {
            get
            {
                return _IssuedToInventoryId;
            }
            set
            {
                OnIssuedToInventoryIdChanging(value);
                ReportPropertyChanging("IssuedToInventoryId");
                _IssuedToInventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedToInventoryId");
                OnIssuedToInventoryIdChanged();
            }
        }
        private global::System.Int64 _IssuedToInventoryId;
        partial void OnIssuedToInventoryIdChanging(global::System.Int64 value);
        partial void OnIssuedToInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuedToSICId
        {
            get
            {
                return _IssuedToSICId;
            }
            set
            {
                OnIssuedToSICIdChanging(value);
                ReportPropertyChanging("IssuedToSICId");
                _IssuedToSICId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedToSICId");
                OnIssuedToSICIdChanged();
            }
        }
        private global::System.Int64 _IssuedToSICId;
        partial void OnIssuedToSICIdChanging(global::System.Int64 value);
        partial void OnIssuedToSICIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ApprovedByNSMId
        {
            get
            {
                return _ApprovedByNSMId;
            }
            set
            {
                OnApprovedByNSMIdChanging(value);
                ReportPropertyChanging("ApprovedByNSMId");
                _ApprovedByNSMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedByNSMId");
                OnApprovedByNSMIdChanged();
            }
        }
        private global::System.Int64 _ApprovedByNSMId;
        partial void OnApprovedByNSMIdChanging(global::System.Int64 value);
        partial void OnApprovedByNSMIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_EmployeeTransferIndents", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeTransferIndents", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeTransferIndents", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeTransferIndents", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_EmployeeTransferIndents", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryTransferIndents", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryTransferIndents", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryTransferIndents", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryTransferIndents", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryTransferIndents", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_TransferIndent_ProductTransfer", "ProductTransfer")]
        public EntityCollection<ProductTransfer> ProductTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductTransfer>("IspahaniAgroLTDModel.FK_TransferIndent_ProductTransfer", "ProductTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductTransfer>("IspahaniAgroLTDModel.FK_TransferIndent_ProductTransfer", "ProductTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_TransferIndentTransferIndentDetails", "TransferIndentDetail")]
        public EntityCollection<TransferIndentDetail> TransferIndentDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferIndentDetail>("IspahaniAgroLTDModel.FK_TransferIndentTransferIndentDetails", "TransferIndentDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferIndentDetail>("IspahaniAgroLTDModel.FK_TransferIndentTransferIndentDetails", "TransferIndentDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="TransferIndentDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferIndentDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransferIndentDetail object.
        /// </summary>
        /// <param name="transferIndentId">Initial value of the TransferIndentId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="placedProductQuantity">Initial value of the PlacedProductQuantity property.</param>
        /// <param name="approvedProductQuantity">Initial value of the ApprovedProductQuantity property.</param>
        public static TransferIndentDetail CreateTransferIndentDetail(global::System.Int64 transferIndentId, global::System.Int64 productId, global::System.Double placedProductQuantity, global::System.Double approvedProductQuantity)
        {
            TransferIndentDetail transferIndentDetail = new TransferIndentDetail();
            transferIndentDetail.TransferIndentId = transferIndentId;
            transferIndentDetail.ProductId = productId;
            transferIndentDetail.PlacedProductQuantity = placedProductQuantity;
            transferIndentDetail.ApprovedProductQuantity = approvedProductQuantity;
            return transferIndentDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransferIndentId
        {
            get
            {
                return _TransferIndentId;
            }
            set
            {
                if (_TransferIndentId != value)
                {
                    OnTransferIndentIdChanging(value);
                    ReportPropertyChanging("TransferIndentId");
                    _TransferIndentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransferIndentId");
                    OnTransferIndentIdChanged();
                }
            }
        }
        private global::System.Int64 _TransferIndentId;
        partial void OnTransferIndentIdChanging(global::System.Int64 value);
        partial void OnTransferIndentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PlacedProductQuantity
        {
            get
            {
                return _PlacedProductQuantity;
            }
            set
            {
                OnPlacedProductQuantityChanging(value);
                ReportPropertyChanging("PlacedProductQuantity");
                _PlacedProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlacedProductQuantity");
                OnPlacedProductQuantityChanged();
            }
        }
        private global::System.Double _PlacedProductQuantity;
        partial void OnPlacedProductQuantityChanging(global::System.Double value);
        partial void OnPlacedProductQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ApprovedProductQuantity
        {
            get
            {
                return _ApprovedProductQuantity;
            }
            set
            {
                OnApprovedProductQuantityChanging(value);
                ReportPropertyChanging("ApprovedProductQuantity");
                _ApprovedProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedProductQuantity");
                OnApprovedProductQuantityChanged();
            }
        }
        private global::System.Double _ApprovedProductQuantity;
        partial void OnApprovedProductQuantityChanging(global::System.Double value);
        partial void OnApprovedProductQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransferIndentDetails", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferIndentDetails", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferIndentDetails", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferIndentDetails", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransferIndentDetails", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_TransferIndentTransferIndentDetails", "TransferIndent")]
        public TransferIndent TransferIndent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndentTransferIndentDetails", "TransferIndent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndentTransferIndentDetails", "TransferIndent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransferIndent> TransferIndentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndentTransferIndentDetails", "TransferIndent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransferIndent>("IspahaniAgroLTDModel.FK_TransferIndentTransferIndentDetails", "TransferIndent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="TransportationLoss")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransportationLoss : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransportationLoss object.
        /// </summary>
        /// <param name="billId">Initial value of the BillId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="remarks">Initial value of the Remarks property.</param>
        /// <param name="hasBalanced">Initial value of the HasBalanced property.</param>
        /// <param name="lossQuantity">Initial value of the LossQuantity property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="balancedQuantity">Initial value of the BalancedQuantity property.</param>
        public static TransportationLoss CreateTransportationLoss(global::System.Int64 billId, global::System.Int64 productId, global::System.String remarks, global::System.Boolean hasBalanced, global::System.Double lossQuantity, global::System.Double unitPrice, global::System.Double balancedQuantity)
        {
            TransportationLoss transportationLoss = new TransportationLoss();
            transportationLoss.BillId = billId;
            transportationLoss.ProductId = productId;
            transportationLoss.Remarks = remarks;
            transportationLoss.HasBalanced = hasBalanced;
            transportationLoss.LossQuantity = lossQuantity;
            transportationLoss.UnitPrice = unitPrice;
            transportationLoss.BalancedQuantity = balancedQuantity;
            return transportationLoss;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BillId
        {
            get
            {
                return _BillId;
            }
            set
            {
                if (_BillId != value)
                {
                    OnBillIdChanging(value);
                    ReportPropertyChanging("BillId");
                    _BillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillId");
                    OnBillIdChanged();
                }
            }
        }
        private global::System.Int64 _BillId;
        partial void OnBillIdChanging(global::System.Int64 value);
        partial void OnBillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasBalanced
        {
            get
            {
                return _HasBalanced;
            }
            set
            {
                OnHasBalancedChanging(value);
                ReportPropertyChanging("HasBalanced");
                _HasBalanced = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasBalanced");
                OnHasBalancedChanged();
            }
        }
        private global::System.Boolean _HasBalanced;
        partial void OnHasBalancedChanging(global::System.Boolean value);
        partial void OnHasBalancedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LossQuantity
        {
            get
            {
                return _LossQuantity;
            }
            set
            {
                OnLossQuantityChanging(value);
                ReportPropertyChanging("LossQuantity");
                _LossQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LossQuantity");
                OnLossQuantityChanged();
            }
        }
        private global::System.Double _LossQuantity;
        partial void OnLossQuantityChanging(global::System.Double value);
        partial void OnLossQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BalancedQuantity
        {
            get
            {
                return _BalancedQuantity;
            }
            set
            {
                OnBalancedQuantityChanging(value);
                ReportPropertyChanging("BalancedQuantity");
                _BalancedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BalancedQuantity");
                OnBalancedQuantityChanged();
            }
        }
        private global::System.Double _BalancedQuantity;
        partial void OnBalancedQuantityChanging(global::System.Double value);
        partial void OnBalancedQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_BillTransportationLoss", "Bill")]
        public Bill Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillTransportationLoss", "Bill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillTransportationLoss", "Bill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> BillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillTransportationLoss", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("IspahaniAgroLTDModel.FK_BillTransportationLoss", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductTransportationLoss", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransportationLoss", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransportationLoss", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransportationLoss", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductTransportationLoss", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="YearSummaryDealer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class YearSummaryDealer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new YearSummaryDealer object.
        /// </summary>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="openingBalance">Initial value of the OpeningBalance property.</param>
        /// <param name="closingBalance">Initial value of the ClosingBalance property.</param>
        /// <param name="productQuantity">Initial value of the ProductQuantity property.</param>
        /// <param name="debitAmount">Initial value of the DebitAmount property.</param>
        /// <param name="creditAmount">Initial value of the CreditAmount property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        public static YearSummaryDealer CreateYearSummaryDealer(global::System.Int64 dealerId, global::System.Int64 productId, global::System.Double openingBalance, global::System.Double closingBalance, global::System.Double productQuantity, global::System.Double debitAmount, global::System.Double creditAmount, global::System.Int64 seasonId)
        {
            YearSummaryDealer yearSummaryDealer = new YearSummaryDealer();
            yearSummaryDealer.DealerId = dealerId;
            yearSummaryDealer.ProductId = productId;
            yearSummaryDealer.OpeningBalance = openingBalance;
            yearSummaryDealer.ClosingBalance = closingBalance;
            yearSummaryDealer.ProductQuantity = productQuantity;
            yearSummaryDealer.DebitAmount = debitAmount;
            yearSummaryDealer.CreditAmount = creditAmount;
            yearSummaryDealer.SeasonId = seasonId;
            return yearSummaryDealer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                if (_DealerId != value)
                {
                    OnDealerIdChanging(value);
                    ReportPropertyChanging("DealerId");
                    _DealerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealerId");
                    OnDealerIdChanged();
                }
            }
        }
        private global::System.Int64 _DealerId;
        partial void OnDealerIdChanging(global::System.Int64 value);
        partial void OnDealerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OpeningBalance
        {
            get
            {
                return _OpeningBalance;
            }
            set
            {
                OnOpeningBalanceChanging(value);
                ReportPropertyChanging("OpeningBalance");
                _OpeningBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpeningBalance");
                OnOpeningBalanceChanged();
            }
        }
        private global::System.Double _OpeningBalance;
        partial void OnOpeningBalanceChanging(global::System.Double value);
        partial void OnOpeningBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ClosingBalance
        {
            get
            {
                return _ClosingBalance;
            }
            set
            {
                OnClosingBalanceChanging(value);
                ReportPropertyChanging("ClosingBalance");
                _ClosingBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosingBalance");
                OnClosingBalanceChanged();
            }
        }
        private global::System.Double _ClosingBalance;
        partial void OnClosingBalanceChanging(global::System.Double value);
        partial void OnClosingBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductQuantity
        {
            get
            {
                return _ProductQuantity;
            }
            set
            {
                OnProductQuantityChanging(value);
                ReportPropertyChanging("ProductQuantity");
                _ProductQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductQuantity");
                OnProductQuantityChanged();
            }
        }
        private global::System.Double _ProductQuantity;
        partial void OnProductQuantityChanging(global::System.Double value);
        partial void OnProductQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DebitAmount
        {
            get
            {
                return _DebitAmount;
            }
            set
            {
                OnDebitAmountChanging(value);
                ReportPropertyChanging("DebitAmount");
                _DebitAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitAmount");
                OnDebitAmountChanged();
            }
        }
        private global::System.Double _DebitAmount;
        partial void OnDebitAmountChanging(global::System.Double value);
        partial void OnDebitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CreditAmount
        {
            get
            {
                return _CreditAmount;
            }
            set
            {
                OnCreditAmountChanging(value);
                ReportPropertyChanging("CreditAmount");
                _CreditAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditAmount");
                OnCreditAmountChanged();
            }
        }
        private global::System.Double _CreditAmount;
        partial void OnCreditAmountChanging(global::System.Double value);
        partial void OnCreditAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_YearSummaryDealerDealer", "Dealer")]
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_YearSummaryDealerDealer", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_YearSummaryDealerDealer", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_YearSummaryDealerDealer", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("IspahaniAgroLTDModel.FK_YearSummaryDealerDealer", "Dealer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductYearSummaryDealer", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryDealer", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryDealer", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryDealer", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryDealer", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryDealers", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryDealers", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryDealers", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryDealers", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryDealers", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="YearSummaryInventoryPackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class YearSummaryInventoryPackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new YearSummaryInventoryPackage object.
        /// </summary>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="packageId">Initial value of the PackageId property.</param>
        /// <param name="openingPackage">Initial value of the OpeningPackage property.</param>
        /// <param name="mRRInQuantity">Initial value of the MRRInQuantity property.</param>
        /// <param name="pLRLostQuantity">Initial value of the PLRLostQuantity property.</param>
        /// <param name="packageUsedQuantity">Initial value of the PackageUsedQuantity property.</param>
        /// <param name="closingPackage">Initial value of the ClosingPackage property.</param>
        /// <param name="purchaseAmount">Initial value of the PurchaseAmount property.</param>
        /// <param name="lostAmount">Initial value of the LostAmount property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        public static YearSummaryInventoryPackage CreateYearSummaryInventoryPackage(global::System.Int64 inventoryId, global::System.Int64 packageId, global::System.Double openingPackage, global::System.Double mRRInQuantity, global::System.Double pLRLostQuantity, global::System.Double packageUsedQuantity, global::System.Double closingPackage, global::System.Double purchaseAmount, global::System.Double lostAmount, global::System.Int64 seasonId)
        {
            YearSummaryInventoryPackage yearSummaryInventoryPackage = new YearSummaryInventoryPackage();
            yearSummaryInventoryPackage.InventoryId = inventoryId;
            yearSummaryInventoryPackage.PackageId = packageId;
            yearSummaryInventoryPackage.OpeningPackage = openingPackage;
            yearSummaryInventoryPackage.MRRInQuantity = mRRInQuantity;
            yearSummaryInventoryPackage.PLRLostQuantity = pLRLostQuantity;
            yearSummaryInventoryPackage.PackageUsedQuantity = packageUsedQuantity;
            yearSummaryInventoryPackage.ClosingPackage = closingPackage;
            yearSummaryInventoryPackage.PurchaseAmount = purchaseAmount;
            yearSummaryInventoryPackage.LostAmount = lostAmount;
            yearSummaryInventoryPackage.SeasonId = seasonId;
            return yearSummaryInventoryPackage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                if (_InventoryId != value)
                {
                    OnInventoryIdChanging(value);
                    ReportPropertyChanging("InventoryId");
                    _InventoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryId");
                    OnInventoryIdChanged();
                }
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PackageId
        {
            get
            {
                return _PackageId;
            }
            set
            {
                if (_PackageId != value)
                {
                    OnPackageIdChanging(value);
                    ReportPropertyChanging("PackageId");
                    _PackageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageId");
                    OnPackageIdChanged();
                }
            }
        }
        private global::System.Int64 _PackageId;
        partial void OnPackageIdChanging(global::System.Int64 value);
        partial void OnPackageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OpeningPackage
        {
            get
            {
                return _OpeningPackage;
            }
            set
            {
                OnOpeningPackageChanging(value);
                ReportPropertyChanging("OpeningPackage");
                _OpeningPackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpeningPackage");
                OnOpeningPackageChanged();
            }
        }
        private global::System.Double _OpeningPackage;
        partial void OnOpeningPackageChanging(global::System.Double value);
        partial void OnOpeningPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MRRInQuantity
        {
            get
            {
                return _MRRInQuantity;
            }
            set
            {
                OnMRRInQuantityChanging(value);
                ReportPropertyChanging("MRRInQuantity");
                _MRRInQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MRRInQuantity");
                OnMRRInQuantityChanged();
            }
        }
        private global::System.Double _MRRInQuantity;
        partial void OnMRRInQuantityChanging(global::System.Double value);
        partial void OnMRRInQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PLRLostQuantity
        {
            get
            {
                return _PLRLostQuantity;
            }
            set
            {
                OnPLRLostQuantityChanging(value);
                ReportPropertyChanging("PLRLostQuantity");
                _PLRLostQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PLRLostQuantity");
                OnPLRLostQuantityChanged();
            }
        }
        private global::System.Double _PLRLostQuantity;
        partial void OnPLRLostQuantityChanging(global::System.Double value);
        partial void OnPLRLostQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PackageUsedQuantity
        {
            get
            {
                return _PackageUsedQuantity;
            }
            set
            {
                OnPackageUsedQuantityChanging(value);
                ReportPropertyChanging("PackageUsedQuantity");
                _PackageUsedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PackageUsedQuantity");
                OnPackageUsedQuantityChanged();
            }
        }
        private global::System.Double _PackageUsedQuantity;
        partial void OnPackageUsedQuantityChanging(global::System.Double value);
        partial void OnPackageUsedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ClosingPackage
        {
            get
            {
                return _ClosingPackage;
            }
            set
            {
                OnClosingPackageChanging(value);
                ReportPropertyChanging("ClosingPackage");
                _ClosingPackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosingPackage");
                OnClosingPackageChanged();
            }
        }
        private global::System.Double _ClosingPackage;
        partial void OnClosingPackageChanging(global::System.Double value);
        partial void OnClosingPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PurchaseAmount
        {
            get
            {
                return _PurchaseAmount;
            }
            set
            {
                OnPurchaseAmountChanging(value);
                ReportPropertyChanging("PurchaseAmount");
                _PurchaseAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseAmount");
                OnPurchaseAmountChanged();
            }
        }
        private global::System.Double _PurchaseAmount;
        partial void OnPurchaseAmountChanging(global::System.Double value);
        partial void OnPurchaseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LostAmount
        {
            get
            {
                return _LostAmount;
            }
            set
            {
                OnLostAmountChanging(value);
                ReportPropertyChanging("LostAmount");
                _LostAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LostAmount");
                OnLostAmountChanged();
            }
        }
        private global::System.Double _LostAmount;
        partial void OnLostAmountChanging(global::System.Double value);
        partial void OnLostAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryYearSummaryInventoryPackage", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryPackage", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryPackage", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryPackage", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryPackage", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_PackageYearSummaryInventoryPackage", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageYearSummaryInventoryPackage", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageYearSummaryInventoryPackage", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageYearSummaryInventoryPackage", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("IspahaniAgroLTDModel.FK_PackageYearSummaryInventoryPackage", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryInventoryPackages", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryPackages", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryPackages", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryPackages", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryPackages", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="YearSummaryInventoryProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class YearSummaryInventoryProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new YearSummaryInventoryProduct object.
        /// </summary>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="lotId">Initial value of the LotId property.</param>
        /// <param name="openingProduct">Initial value of the OpeningProduct property.</param>
        /// <param name="mRRInQuantity">Initial value of the MRRInQuantity property.</param>
        /// <param name="pLRLostQuantity">Initial value of the PLRLostQuantity property.</param>
        /// <param name="productSellQuantity">Initial value of the ProductSellQuantity property.</param>
        /// <param name="sellAmount">Initial value of the SellAmount property.</param>
        /// <param name="closingProduct">Initial value of the ClosingProduct property.</param>
        /// <param name="purchaseAmount">Initial value of the PurchaseAmount property.</param>
        /// <param name="productReturnQuantity">Initial value of the ProductReturnQuantity property.</param>
        /// <param name="lostAmount">Initial value of the LostAmount property.</param>
        /// <param name="returnAmount">Initial value of the ReturnAmount property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="productTransferFromQuantity">Initial value of the ProductTransferFromQuantity property.</param>
        /// <param name="productTransferToQuantity">Initial value of the ProductTransferToQuantity property.</param>
        /// <param name="transferFromAmount">Initial value of the TransferFromAmount property.</param>
        /// <param name="transferToAmount">Initial value of the TransferToAmount property.</param>
        public static YearSummaryInventoryProduct CreateYearSummaryInventoryProduct(global::System.Int64 inventoryId, global::System.Int64 productId, global::System.String lotId, global::System.Double openingProduct, global::System.Double mRRInQuantity, global::System.Double pLRLostQuantity, global::System.Double productSellQuantity, global::System.Double sellAmount, global::System.Double closingProduct, global::System.Double purchaseAmount, global::System.Double productReturnQuantity, global::System.Double lostAmount, global::System.Double returnAmount, global::System.Int64 seasonId, global::System.Double productTransferFromQuantity, global::System.Double productTransferToQuantity, global::System.Double transferFromAmount, global::System.Double transferToAmount)
        {
            YearSummaryInventoryProduct yearSummaryInventoryProduct = new YearSummaryInventoryProduct();
            yearSummaryInventoryProduct.InventoryId = inventoryId;
            yearSummaryInventoryProduct.ProductId = productId;
            yearSummaryInventoryProduct.LotId = lotId;
            yearSummaryInventoryProduct.OpeningProduct = openingProduct;
            yearSummaryInventoryProduct.MRRInQuantity = mRRInQuantity;
            yearSummaryInventoryProduct.PLRLostQuantity = pLRLostQuantity;
            yearSummaryInventoryProduct.ProductSellQuantity = productSellQuantity;
            yearSummaryInventoryProduct.SellAmount = sellAmount;
            yearSummaryInventoryProduct.ClosingProduct = closingProduct;
            yearSummaryInventoryProduct.PurchaseAmount = purchaseAmount;
            yearSummaryInventoryProduct.ProductReturnQuantity = productReturnQuantity;
            yearSummaryInventoryProduct.LostAmount = lostAmount;
            yearSummaryInventoryProduct.ReturnAmount = returnAmount;
            yearSummaryInventoryProduct.SeasonId = seasonId;
            yearSummaryInventoryProduct.ProductTransferFromQuantity = productTransferFromQuantity;
            yearSummaryInventoryProduct.ProductTransferToQuantity = productTransferToQuantity;
            yearSummaryInventoryProduct.TransferFromAmount = transferFromAmount;
            yearSummaryInventoryProduct.TransferToAmount = transferToAmount;
            return yearSummaryInventoryProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                if (_InventoryId != value)
                {
                    OnInventoryIdChanging(value);
                    ReportPropertyChanging("InventoryId");
                    _InventoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryId");
                    OnInventoryIdChanged();
                }
            }
        }
        private global::System.Int64 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int64 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int64 _ProductId;
        partial void OnProductIdChanging(global::System.Int64 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotId
        {
            get
            {
                return _LotId;
            }
            set
            {
                if (_LotId != value)
                {
                    OnLotIdChanging(value);
                    ReportPropertyChanging("LotId");
                    _LotId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LotId");
                    OnLotIdChanged();
                }
            }
        }
        private global::System.String _LotId;
        partial void OnLotIdChanging(global::System.String value);
        partial void OnLotIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OpeningProduct
        {
            get
            {
                return _OpeningProduct;
            }
            set
            {
                OnOpeningProductChanging(value);
                ReportPropertyChanging("OpeningProduct");
                _OpeningProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpeningProduct");
                OnOpeningProductChanged();
            }
        }
        private global::System.Double _OpeningProduct;
        partial void OnOpeningProductChanging(global::System.Double value);
        partial void OnOpeningProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MRRInQuantity
        {
            get
            {
                return _MRRInQuantity;
            }
            set
            {
                OnMRRInQuantityChanging(value);
                ReportPropertyChanging("MRRInQuantity");
                _MRRInQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MRRInQuantity");
                OnMRRInQuantityChanged();
            }
        }
        private global::System.Double _MRRInQuantity;
        partial void OnMRRInQuantityChanging(global::System.Double value);
        partial void OnMRRInQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PLRLostQuantity
        {
            get
            {
                return _PLRLostQuantity;
            }
            set
            {
                OnPLRLostQuantityChanging(value);
                ReportPropertyChanging("PLRLostQuantity");
                _PLRLostQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PLRLostQuantity");
                OnPLRLostQuantityChanged();
            }
        }
        private global::System.Double _PLRLostQuantity;
        partial void OnPLRLostQuantityChanging(global::System.Double value);
        partial void OnPLRLostQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductSellQuantity
        {
            get
            {
                return _ProductSellQuantity;
            }
            set
            {
                OnProductSellQuantityChanging(value);
                ReportPropertyChanging("ProductSellQuantity");
                _ProductSellQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductSellQuantity");
                OnProductSellQuantityChanged();
            }
        }
        private global::System.Double _ProductSellQuantity;
        partial void OnProductSellQuantityChanging(global::System.Double value);
        partial void OnProductSellQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SellAmount
        {
            get
            {
                return _SellAmount;
            }
            set
            {
                OnSellAmountChanging(value);
                ReportPropertyChanging("SellAmount");
                _SellAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellAmount");
                OnSellAmountChanged();
            }
        }
        private global::System.Double _SellAmount;
        partial void OnSellAmountChanging(global::System.Double value);
        partial void OnSellAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ClosingProduct
        {
            get
            {
                return _ClosingProduct;
            }
            set
            {
                OnClosingProductChanging(value);
                ReportPropertyChanging("ClosingProduct");
                _ClosingProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosingProduct");
                OnClosingProductChanged();
            }
        }
        private global::System.Double _ClosingProduct;
        partial void OnClosingProductChanging(global::System.Double value);
        partial void OnClosingProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PurchaseAmount
        {
            get
            {
                return _PurchaseAmount;
            }
            set
            {
                OnPurchaseAmountChanging(value);
                ReportPropertyChanging("PurchaseAmount");
                _PurchaseAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseAmount");
                OnPurchaseAmountChanged();
            }
        }
        private global::System.Double _PurchaseAmount;
        partial void OnPurchaseAmountChanging(global::System.Double value);
        partial void OnPurchaseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductReturnQuantity
        {
            get
            {
                return _ProductReturnQuantity;
            }
            set
            {
                OnProductReturnQuantityChanging(value);
                ReportPropertyChanging("ProductReturnQuantity");
                _ProductReturnQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductReturnQuantity");
                OnProductReturnQuantityChanged();
            }
        }
        private global::System.Double _ProductReturnQuantity;
        partial void OnProductReturnQuantityChanging(global::System.Double value);
        partial void OnProductReturnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LostAmount
        {
            get
            {
                return _LostAmount;
            }
            set
            {
                OnLostAmountChanging(value);
                ReportPropertyChanging("LostAmount");
                _LostAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LostAmount");
                OnLostAmountChanged();
            }
        }
        private global::System.Double _LostAmount;
        partial void OnLostAmountChanging(global::System.Double value);
        partial void OnLostAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ReturnAmount
        {
            get
            {
                return _ReturnAmount;
            }
            set
            {
                OnReturnAmountChanging(value);
                ReportPropertyChanging("ReturnAmount");
                _ReturnAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnAmount");
                OnReturnAmountChanged();
            }
        }
        private global::System.Double _ReturnAmount;
        partial void OnReturnAmountChanging(global::System.Double value);
        partial void OnReturnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductTransferFromQuantity
        {
            get
            {
                return _ProductTransferFromQuantity;
            }
            set
            {
                OnProductTransferFromQuantityChanging(value);
                ReportPropertyChanging("ProductTransferFromQuantity");
                _ProductTransferFromQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductTransferFromQuantity");
                OnProductTransferFromQuantityChanged();
            }
        }
        private global::System.Double _ProductTransferFromQuantity;
        partial void OnProductTransferFromQuantityChanging(global::System.Double value);
        partial void OnProductTransferFromQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProductTransferToQuantity
        {
            get
            {
                return _ProductTransferToQuantity;
            }
            set
            {
                OnProductTransferToQuantityChanging(value);
                ReportPropertyChanging("ProductTransferToQuantity");
                _ProductTransferToQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductTransferToQuantity");
                OnProductTransferToQuantityChanged();
            }
        }
        private global::System.Double _ProductTransferToQuantity;
        partial void OnProductTransferToQuantityChanging(global::System.Double value);
        partial void OnProductTransferToQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransferFromAmount
        {
            get
            {
                return _TransferFromAmount;
            }
            set
            {
                OnTransferFromAmountChanging(value);
                ReportPropertyChanging("TransferFromAmount");
                _TransferFromAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferFromAmount");
                OnTransferFromAmountChanged();
            }
        }
        private global::System.Double _TransferFromAmount;
        partial void OnTransferFromAmountChanging(global::System.Double value);
        partial void OnTransferFromAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransferToAmount
        {
            get
            {
                return _TransferToAmount;
            }
            set
            {
                OnTransferToAmountChanging(value);
                ReportPropertyChanging("TransferToAmount");
                _TransferToAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferToAmount");
                OnTransferToAmountChanged();
            }
        }
        private global::System.Double _TransferToAmount;
        partial void OnTransferToAmountChanging(global::System.Double value);
        partial void OnTransferToAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_InventoryYearSummaryInventoryProduct", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryProduct", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryProduct", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryProduct", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("IspahaniAgroLTDModel.FK_InventoryYearSummaryInventoryProduct", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_ProductYearSummaryInventoryProduct", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryInventoryProduct", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryInventoryProduct", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryInventoryProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("IspahaniAgroLTDModel.FK_ProductYearSummaryInventoryProduct", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummaryInventoryProducts", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryProducts", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryProducts", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryProducts", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummaryInventoryProducts", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IspahaniAgroLTDModel", Name="YearSummarySOExpenditure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class YearSummarySOExpenditure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new YearSummarySOExpenditure object.
        /// </summary>
        /// <param name="salesOfficerId">Initial value of the SalesOfficerId property.</param>
        /// <param name="totalExpenditure">Initial value of the TotalExpenditure property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        public static YearSummarySOExpenditure CreateYearSummarySOExpenditure(global::System.Int64 salesOfficerId, global::System.Double totalExpenditure, global::System.Int64 seasonId)
        {
            YearSummarySOExpenditure yearSummarySOExpenditure = new YearSummarySOExpenditure();
            yearSummarySOExpenditure.SalesOfficerId = salesOfficerId;
            yearSummarySOExpenditure.TotalExpenditure = totalExpenditure;
            yearSummarySOExpenditure.SeasonId = seasonId;
            return yearSummarySOExpenditure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesOfficerId
        {
            get
            {
                return _SalesOfficerId;
            }
            set
            {
                if (_SalesOfficerId != value)
                {
                    OnSalesOfficerIdChanging(value);
                    ReportPropertyChanging("SalesOfficerId");
                    _SalesOfficerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesOfficerId");
                    OnSalesOfficerIdChanged();
                }
            }
        }
        private global::System.Int64 _SalesOfficerId;
        partial void OnSalesOfficerIdChanging(global::System.Int64 value);
        partial void OnSalesOfficerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalExpenditure
        {
            get
            {
                return _TotalExpenditure;
            }
            set
            {
                OnTotalExpenditureChanging(value);
                ReportPropertyChanging("TotalExpenditure");
                _TotalExpenditure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalExpenditure");
                OnTotalExpenditureChanged();
            }
        }
        private global::System.Double _TotalExpenditure;
        partial void OnTotalExpenditureChanging(global::System.Double value);
        partial void OnTotalExpenditureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_YearSummarySOExpenditureEmployee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_YearSummarySOExpenditureEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_YearSummarySOExpenditureEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("IspahaniAgroLTDModel.FK_YearSummarySOExpenditureEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("IspahaniAgroLTDModel.FK_YearSummarySOExpenditureEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IspahaniAgroLTDModel", "FK_SeasonYearSummarySOExpenditures", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummarySOExpenditures", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummarySOExpenditures", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummarySOExpenditures", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("IspahaniAgroLTDModel.FK_SeasonYearSummarySOExpenditures", "Season", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
